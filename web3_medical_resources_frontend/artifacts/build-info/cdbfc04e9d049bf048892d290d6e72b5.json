{"id":"cdbfc04e9d049bf048892d290d6e72b5","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/MedicalResearch.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MedicalResearch {\n    // ERC20 token used for payments and staking\n    ERC20 public token;\n\n    // Struct to represent a research paper\n    struct Paper {\n        address author; // Address of the paper's author\n        string title; // Title of the paper\n        string contentHash; // Hash of the content to ensure integrity\n        uint256 accessFee; // Fee in tokens to access the paper\n        string[] keywords; // Array of keywords related to the paper\n        bool exists; // Flag to indicate if the paper exists\n        uint256 parentPaperId; // ID of the original paper (0 if original)\n    }\n\n    // Struct to represent a contribution to a paper\n    struct Contribution {\n        address contributor; // Address of the contributor\n        string changesHash; // Hash of the changes made\n        bool approved; // Flag to indicate if the contribution is approved\n        uint256 stakeAmount; // Amount of tokens staked for the contribution\n    }\n\n    uint256 private nextPaperId; // Counter for generating new paper IDs\n    uint256 private nextContributionIndex; // Counter for generating new contribution indices\n    uint private totalPaperCount;\n\n    // Mappings to store papers, contributions, access fees, and other data\n    mapping(uint256 => Paper) public papers; // Mapping from paper ID to Paper struct\n    mapping(uint256 => mapping(uint256 => Contribution)) public contributions; // Mapping from paper ID to a mapping of contribution indices to Contribution structs\n    mapping(uint256 => uint256) public paperContributionCount; // Mapping from paper ID to the number of contributions it has received\n    mapping(uint256 => uint256) public paperAccessFees; // Mapping from paper ID to total access fees earned\n    mapping(address => mapping(uint256 => bool)) public paperAccessed; // Mapping from user address to paper ID to access status\n    mapping(address => uint256) public userContributionCount; // Mapping from user address to number of contributions made\n    mapping(address => mapping(uint256 => uint256)) public ownerPapers; // Mapping from owner address to an index-to-paperId mapping\n    mapping(address => uint256) public ownerPaperCount; // Mapping from owner address to the number of papers they own\n\n    // Events to log actions in the contract\n    event PaperUploaded(\n        uint256 paperId,\n        address indexed author,\n        string title,\n        string contentHash,\n        uint256 accessFee,\n        string[] keywords\n    );\n    event ContributionSubmitted(\n        uint256 paperId,\n        uint256 contributionIndex,\n        address indexed contributor,\n        string changesHash,\n        uint256 stakeAmount\n    );\n    event ContributionApproved(\n        uint256 oldPaperId,\n        uint256 newPaperId,\n        uint256 contributionIndex,\n        address indexed contributor,\n        uint256 rewardAmount\n    );\n    event PaperAccessed(uint256 paperId, address indexed user, uint256 feePaid);\n    event PaperUpdated(uint256 newPaperId, string newContentHash); // Event for new paper update\n\n    // Constructor to initialize the contract with the token address\n    constructor(address _tokenAddress) {\n        token = ERC20(_tokenAddress);\n        nextPaperId = 1; // Start paper IDs from 1\n        nextContributionIndex = 0; // Start contribution indices from 0\n        totalPaperCount = 0;\n    }\n\n    // Function to upload a new paper\n    function uploadPaper(\n        string memory title,\n        string memory contentHash,\n        uint256 accessFee,\n        string[] memory keywords\n    ) external {\n        uint256 paperId = nextPaperId;\n        nextPaperId++; // Increment the paper ID counter\n\n        papers[paperId] = Paper({\n            author: msg.sender,\n            title: title,\n            contentHash: contentHash,\n            accessFee: accessFee,\n            keywords: keywords,\n            exists: true,\n            parentPaperId: 0 // No parent for original papers\n        });\n\n        ownerPapers[msg.sender][ownerPaperCount[msg.sender]] = paperId;\n        ownerPaperCount[msg.sender]++; // Increment the count of papers owned by the author\n        totalPaperCount++;\n        paperAccessed[msg.sender][paperId] = true;\n\n        emit PaperUploaded(\n            paperId,\n            msg.sender,\n            title,\n            contentHash,\n            accessFee,\n            keywords\n        );\n    }\n\n    // Function to access a paper by paying the access fee\n    function accessPaper(uint256 paperId) external {\n        require(papers[paperId].exists, \"Paper does not exist\");\n        require(\n            !paperAccessed[msg.sender][paperId],\n            \"User already has access to this paper\"\n        );\n\n        if (papers[paperId].accessFee > 0) {\n            require(\n                token.transferFrom(\n                    msg.sender,\n                    papers[paperId].author,\n                    papers[paperId].accessFee\n                ),\n                \"Token transfer failed\"\n            );\n            paperAccessFees[paperId] += papers[paperId].accessFee; // Add the fee to the total access fees\n        }\n\n        paperAccessed[msg.sender][paperId] = true; // Mark the paper as accessed by the user\n\n        emit PaperAccessed(paperId, msg.sender, papers[paperId].accessFee);\n    }\n\n    // Function to submit a contribution to a paper\n    function submitContribution(\n        uint256 paperId,\n        string memory changesHash,\n        uint256 stakeAmount\n    ) external {\n        require(papers[paperId].exists, \"Paper does not exist\");\n        require(\n            token.transferFrom(msg.sender, address(this), stakeAmount),\n            \"Token transfer failed\"\n        );\n\n        uint256 contributionIndex = paperContributionCount[paperId]; // Get the index for the new contribution\n        paperContributionCount[paperId]++; // Increment the contribution count for the paper\n\n        contributions[paperId][contributionIndex] = Contribution({\n            contributor: msg.sender,\n            changesHash: changesHash,\n            approved: false,\n            stakeAmount: stakeAmount\n        });\n\n        userContributionCount[msg.sender]++; // Increment the contribution count for the user\n\n        emit ContributionSubmitted(\n            paperId,\n            contributionIndex,\n            msg.sender,\n            changesHash,\n            stakeAmount\n        );\n    }\n\n    // Function to approve a contribution to a paper\n    function approveContribution(\n        uint256 paperId,\n        uint256 contributionIndex\n    ) external {\n        require(papers[paperId].exists, \"Paper does not exist\");\n        require(\n            msg.sender == papers[paperId].author,\n            \"Only the author can approve contributions\"\n        );\n        require(\n            contributionIndex < paperContributionCount[paperId],\n            \"Invalid contribution index\"\n        );\n        require(\n            !contributions[paperId][contributionIndex].approved,\n            \"Contribution already approved\"\n        );\n\n        Contribution storage contribution = contributions[paperId][\n            contributionIndex\n        ];\n        uint256 rewardAmount = contribution.stakeAmount +\n            ((paperAccessFees[paperId] * 10) / 100); // Reward includes 10% of the access fees earned by the paper\n\n        require(\n            token.transfer(contribution.contributor, rewardAmount),\n            \"Token transfer failed\"\n        );\n\n        // Create a new paper with the updated content\n        uint256 newPaperId = nextPaperId;\n        nextPaperId++;\n\n        papers[newPaperId] = Paper({\n            author: msg.sender,\n            title: papers[paperId].title, // Keep the title the same\n            contentHash: contribution.changesHash,\n            accessFee: papers[paperId].accessFee, // Keep the access fee the same\n            keywords: papers[paperId].keywords, // Keep the keywords the same\n            exists: true,\n            parentPaperId: paperId // Reference to the original paper\n        });\n\n        ownerPapers[msg.sender][ownerPaperCount[msg.sender]] = newPaperId;\n        ownerPaperCount[msg.sender]++; // Increment the count of papers owned by the author\n\n        contribution.approved = true; // Mark the contribution as approved\n        paperAccessed[msg.sender][newPaperId] = true;\n\n        emit ContributionApproved(\n            paperId,\n            newPaperId,\n            contributionIndex,\n            contribution.contributor,\n            rewardAmount\n        );\n        emit PaperUpdated(newPaperId, contribution.changesHash); // Emit event for new paper\n    }\n\n    // Function to get the total count of papers owned by an address\n    function getOwnerPaperCount(address owner) external view returns (uint256) {\n        return ownerPaperCount[owner];\n    }\n\n    // Function to get the paper ID owned by an address at a specific index\n    function getPaperIdByOwnerAndIndex(\n        address owner,\n        uint256 index\n    ) external view returns (uint256) {\n        require(index < ownerPaperCount[owner], \"Index out of bounds\");\n        return ownerPapers[owner][index];\n    }\n\n    // Function to get the contribution details by paper ID and contribution index\n    function getContributionByIndex(\n        uint256 paperId,\n        uint256 index\n    ) external view returns (Contribution memory) {\n        require(index < paperContributionCount[paperId], \"Index out of bounds\");\n        return contributions[paperId][index];\n    }\n\n    // Function to get paper details by paper ID\n    function getPaperById(\n        uint256 paperId\n    )\n        external\n        view\n        returns (\n            address author,\n            string memory title,\n            string memory contentHash,\n            uint256 accessFee,\n            string[] memory keywords,\n            uint256 parentPaperId\n        )\n    {\n        require(papers[paperId].exists, \"Paper does not exist\");\n        Paper memory paper = papers[paperId];\n        return (\n            paper.author,\n            paper.title,\n            paper.contentHash,\n            paper.accessFee,\n            paper.keywords,\n            paper.parentPaperId\n        );\n    }\n\n    // Function to get the total count of papers in the contract\n    function getTotalPaperCount() external view returns (uint256) {\n        return totalPaperCount;\n    }\n\n    function getAccessibillity(\n        address s,\n        uint paperId\n    ) public view returns (bool) {\n        return paperAccessed[s][paperId];\n    }\n\n    // Function to get the list of paper IDs accessed by a user\n    function getPapersAccessedByUser(\n        address user\n    ) external view returns (uint256[] memory) {\n        uint256 paperCount = 0;\n        // Calculate the number of papers accessed by the user\n        for (uint256 i = 1; i <= nextPaperId; i++) {\n            if (paperAccessed[user][i]) {\n                paperCount++;\n            }\n        }\n\n        uint256[] memory accessedPapers = new uint256[](paperCount);\n        uint256 index = 0;\n        // Collect the paper IDs\n        for (uint256 i = 1; i <= nextPaperId; i++) {\n            if (paperAccessed[user][i]) {\n                accessedPapers[index] = i;\n                index++;\n            }\n        }\n        return accessedPapers;\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[136],"IERC20Errors":[41],"IERC721Errors":[89]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"138:139:0","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":41,"linearizedBaseContracts":[41],"name":"IERC20Errors","nameLocation":"288:12:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"307:309:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":11,"name":"ERC20InsufficientBalance","nameLocation":"627:24:0","nodeType":"ErrorDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"sender","nameLocation":"660:6:0","nodeType":"VariableDeclaration","scope":11,"src":"652:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"balance","nameLocation":"676:7:0","nodeType":"VariableDeclaration","scope":11,"src":"668:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"needed","nameLocation":"693:6:0","nodeType":"VariableDeclaration","scope":11,"src":"685:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:0"},"src":"621:80:0"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"707:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":16,"name":"ERC20InvalidSender","nameLocation":"870:18:0","nodeType":"ErrorDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"sender","nameLocation":"897:6:0","nodeType":"VariableDeclaration","scope":16,"src":"889:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:0"},"src":"864:41:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"911:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":21,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:0","nodeType":"ErrorDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:0","nodeType":"VariableDeclaration","scope":21,"src":"1102:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:0"},"src":"1075:45:0"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1126:345:0","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":30,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"spender","nameLocation":"1517:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1509:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:0","nodeType":"VariableDeclaration","scope":30,"src":"1526:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"needed","nameLocation":"1553:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1545:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:0"},"src":"1476:85:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1567:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":35,"name":"ERC20InvalidApprover","nameLocation":"1752:20:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"approver","nameLocation":"1781:8:0","nodeType":"VariableDeclaration","scope":35,"src":"1773:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:0"},"src":"1746:45:0"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1797:195:0","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":40,"name":"ERC20InvalidSpender","nameLocation":"2003:19:0","nodeType":"ErrorDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"spender","nameLocation":"2031:7:0","nodeType":"VariableDeclaration","scope":40,"src":"2023:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:0"},"src":"1997:43:0"}],"scope":137,"src":"278:1764:0","usedErrors":[11,16,21,30,35,40],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2044:141:0","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":89,"linearizedBaseContracts":[89],"name":"IERC721Errors","nameLocation":"2196:13:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2216:219:0","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":47,"name":"ERC721InvalidOwner","nameLocation":"2446:18:0","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"owner","nameLocation":"2473:5:0","nodeType":"VariableDeclaration","scope":47,"src":"2465:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:0"},"src":"2440:40:0"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2486:132:0","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":52,"name":"ERC721NonexistentToken","nameLocation":"2629:22:0","nodeType":"ErrorDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:0","nodeType":"VariableDeclaration","scope":52,"src":"2652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:0"},"src":"2623:46:0"},{"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2675:289:0","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":61,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:0","nodeType":"ErrorDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"sender","nameLocation":"3004:6:0","nodeType":"VariableDeclaration","scope":61,"src":"2996:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:0","nodeType":"VariableDeclaration","scope":61,"src":"3012:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"owner","nameLocation":"3037:5:0","nodeType":"VariableDeclaration","scope":61,"src":"3029:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:0"},"src":"2969:75:0"},{"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"3050:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":66,"name":"ERC721InvalidSender","nameLocation":"3213:19:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"sender","nameLocation":"3241:6:0","nodeType":"VariableDeclaration","scope":66,"src":"3233:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:0"},"src":"3207:42:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"3255:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":71,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:0","nodeType":"ErrorDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3447:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:0"},"src":"3419:46:0"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3471:247:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":78,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"operator","nameLocation":"3764:8:0","nodeType":"VariableDeclaration","scope":78,"src":"3756:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:0","nodeType":"VariableDeclaration","scope":78,"src":"3774:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:0"},"src":"3723:68:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"3797:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":83,"name":"ERC721InvalidApprover","nameLocation":"3982:21:0","nodeType":"ErrorDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"approver","nameLocation":"4012:8:0","nodeType":"VariableDeclaration","scope":83,"src":"4004:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:0"},"src":"3976:46:0"},{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"4028:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":88,"name":"ERC721InvalidOperator","nameLocation":"4236:21:0","nodeType":"ErrorDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"operator","nameLocation":"4266:8:0","nodeType":"VariableDeclaration","scope":88,"src":"4258:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:0"},"src":"4230:46:0"}],"scope":137,"src":"2186:2092:0","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"4280:143:0","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136],"name":"IERC1155Errors","nameLocation":"4434:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"4455:361:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":101,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:0","nodeType":"ErrorDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"sender","nameLocation":"4862:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4854:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"balance","nameLocation":"4878:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4870:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"needed","nameLocation":"4895:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4887:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4903:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:0"},"src":"4821:99:0"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"4926:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":106,"name":"ERC1155InvalidSender","nameLocation":"5089:20:0","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"sender","nameLocation":"5118:6:0","nodeType":"VariableDeclaration","scope":106,"src":"5110:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:0"},"src":"5083:43:0"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5132:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":111,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:0","nodeType":"ErrorDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:0","nodeType":"VariableDeclaration","scope":111,"src":"5325:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:0"},"src":"5296:47:0"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"5349:256:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":118,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:0","nodeType":"ErrorDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"operator","nameLocation":"5653:8:0","nodeType":"VariableDeclaration","scope":118,"src":"5645:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"owner","nameLocation":"5671:5:0","nodeType":"VariableDeclaration","scope":118,"src":"5663:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:0"},"src":"5610:68:0"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"5684:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":123,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:0","nodeType":"ErrorDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"approver","nameLocation":"5900:8:0","nodeType":"VariableDeclaration","scope":123,"src":"5892:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:0"},"src":"5863:47:0"},{"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5916:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":128,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:0","nodeType":"ErrorDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"operator","nameLocation":"6155:8:0","nodeType":"VariableDeclaration","scope":128,"src":"6147:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:0"},"src":"6118:47:0"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"6171:280:0","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":135,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:0","nodeType":"ErrorDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:0","nodeType":"VariableDeclaration","scope":135,"src":"6488:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:0","nodeType":"VariableDeclaration","scope":135,"src":"6507:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:0"},"src":"6456:73:0"}],"scope":137,"src":"4424:2107:0","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[]}],"src":"112:6420:0"},"id":0},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":730,"src":"131:36:1","symbolAliases":[{"foreign":{"id":139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"139:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":756,"src":"168:63:1","symbolAliases":[{"foreign":{"id":141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"176:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":786,"src":"232:48:1","symbolAliases":[{"foreign":{"id":143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"240:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":137,"src":"281:65:1","symbolAliases":[{"foreign":{"id":145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"289:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":148,"name":"Context","nameLocations":["1428:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":785,"src":"1428:7:1"},"id":149,"nodeType":"InheritanceSpecifier","src":"1428:7:1"},{"baseName":{"id":150,"name":"IERC20","nameLocations":["1437:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1437:6:1"},"id":151,"nodeType":"InheritanceSpecifier","src":"1437:6:1"},{"baseName":{"id":152,"name":"IERC20Metadata","nameLocations":["1445:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"1445:14:1"},"id":153,"nodeType":"InheritanceSpecifier","src":"1445:14:1"},{"baseName":{"id":154,"name":"IERC20Errors","nameLocations":["1461:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1461:12:1"},"id":155,"nodeType":"InheritanceSpecifier","src":"1461:12:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"348:1052:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,41,755,729,785],"name":"ERC20","nameLocation":"1419:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":159,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:1","nodeType":"VariableDeclaration","scope":651,"src":"1480:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":158,"keyName":"account","keyNameLocation":"1496:7:1","keyType":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":165,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:1","nodeType":"VariableDeclaration","scope":651,"src":"1540:83:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":164,"keyName":"account","keyNameLocation":"1556:7:1","keyType":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":163,"keyName":"spender","keyNameLocation":"1583:7:1","keyType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:1","nodeType":"VariableDeclaration","scope":651,"src":"1630:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":169,"mutability":"mutable","name":"_name","nameLocation":"1680:5:1","nodeType":"VariableDeclaration","scope":651,"src":"1665:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":168,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":171,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:1","nodeType":"VariableDeclaration","scope":651,"src":"1691:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":170,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":187,"nodeType":"Block","src":"1952:57:1","statements":[{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1962:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1970:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":182,"nodeType":"ExpressionStatement","src":"1962:13:1"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"1985:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1995:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":186,"nodeType":"ExpressionStatement","src":"1985:17:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"1720:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"name_","nameLocation":"1922:5:1","nodeType":"VariableDeclaration","scope":188,"src":"1908:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":173,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:1","nodeType":"VariableDeclaration","scope":188,"src":"1929:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":175,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:1"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1952:0:1"},"scope":651,"src":"1896:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[742],"body":{"id":196,"nodeType":"Block","src":"2134:29:1","statements":[{"expression":{"id":194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"2151:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"2144:12:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"2015:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"2087:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"2119:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":191,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:1"},"scope":651,"src":"2074:89:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[748],"body":{"id":205,"nodeType":"Block","src":"2338:31:1","statements":[{"expression":{"id":203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2355:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":202,"id":204,"nodeType":"Return","src":"2348:14:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2169:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"2291:2:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"2323:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:1"},"scope":651,"src":"2276:93:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":214,"nodeType":"Block","src":"3058:26:1","statements":[{"expression":{"hexValue":"3138","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":211,"id":213,"nodeType":"Return","src":"3068:9:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2375:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"3019:2:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"3051:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:1"},"scope":651,"src":"3002:82:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[678],"body":{"id":223,"nodeType":"Block","src":"3205:36:1","statements":[{"expression":{"id":221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3222:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":220,"id":222,"nodeType":"Return","src":"3215:19:1"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"3090:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"3164:2:1"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"3196:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:1"},"scope":651,"src":"3144:97:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[686],"body":{"id":236,"nodeType":"Block","src":"3373:42:1","statements":[{"expression":{"baseExpression":{"id":232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3390:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":234,"indexExpression":{"id":233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3400:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":231,"id":235,"nodeType":"Return","src":"3383:25:1"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"3247:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:1","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"account","nameLocation":"3326:7:1","nodeType":"VariableDeclaration","scope":237,"src":"3318:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"3364:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:1"},"scope":651,"src":"3299:116:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[696],"body":{"id":260,"nodeType":"Block","src":"3685:103:1","statements":[{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"owner","nameLocation":"3703:5:1","nodeType":"VariableDeclaration","scope":260,"src":"3695:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"3711:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:1"},{"expression":{"arguments":[{"id":253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3743:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3750:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3754:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"3733:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"3733:27:1"},{"expression":{"hexValue":"74727565","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":246,"id":259,"nodeType":"Return","src":"3770:11:1"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"3421:184:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"to","nameLocation":"3636:2:1","nodeType":"VariableDeclaration","scope":261,"src":"3628:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"value","nameLocation":"3648:5:1","nodeType":"VariableDeclaration","scope":261,"src":"3640:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":261,"src":"3679:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:1"},"scope":651,"src":"3610:178:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[706],"body":{"id":277,"nodeType":"Block","src":"3935:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"3952:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":273,"indexExpression":{"id":272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3964:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":275,"indexExpression":{"id":274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3971:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":270,"id":276,"nodeType":"Return","src":"3945:34:1"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3794:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"3873:5:1","nodeType":"VariableDeclaration","scope":278,"src":"3865:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"spender","nameLocation":"3888:7:1","nodeType":"VariableDeclaration","scope":278,"src":"3880:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"3926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:1"},"scope":651,"src":"3846:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[716],"body":{"id":301,"nodeType":"Block","src":"4372:107:1","statements":[{"assignments":[289],"declarations":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"4390:5:1","nodeType":"VariableDeclaration","scope":301,"src":"4382:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4398:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:1"},{"expression":{"arguments":[{"id":294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"4429:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4436:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4445:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":542,"src":"4420:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"4420:31:1"},{"expression":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":287,"id":300,"nodeType":"Return","src":"4461:11:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"3992:296:1","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"spender","nameLocation":"4318:7:1","nodeType":"VariableDeclaration","scope":302,"src":"4310:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"value","nameLocation":"4335:5:1","nodeType":"VariableDeclaration","scope":302,"src":"4327:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"4366:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:1"},"scope":651,"src":"4293:186:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[728],"body":{"id":333,"nodeType":"Block","src":"5132:151:1","statements":[{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"5150:7:1","nodeType":"VariableDeclaration","scope":333,"src":"5142:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"5160:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:1"},{"expression":{"arguments":[{"id":320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5198:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5204:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5213:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"5182:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"5182:37:1"},{"expression":{"arguments":[{"id":326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5239:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"5245:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5249:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"5229:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"5229:26:1"},{"expression":{"hexValue":"74727565","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":313,"id":332,"nodeType":"Return","src":"5265:11:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"4485:549:1","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:1","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"5069:4:1","nodeType":"VariableDeclaration","scope":334,"src":"5061:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"5083:2:1","nodeType":"VariableDeclaration","scope":334,"src":"5075:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"5095:5:1","nodeType":"VariableDeclaration","scope":334,"src":"5087:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:1"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"5126:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:1"},"scope":651,"src":"5039:244:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":380,"nodeType":"Block","src":"5725:231:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5739:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:1","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"5735:86:1","trueBody":{"id":357,"nodeType":"Block","src":"5759:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:1","typeDescriptions":{}}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"5780:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"RevertStatement","src":"5773:37:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5834:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:1","typeDescriptions":{}}},"id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"5830:86:1","trueBody":{"id":372,"nodeType":"Block","src":"5852:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:1","typeDescriptions":{}}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"5873:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":371,"nodeType":"RevertStatement","src":"5866:39:1"}]}},{"expression":{"arguments":[{"id":375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5933:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5939:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5943:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5925:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":379,"nodeType":"ExpressionStatement","src":"5925:24:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"5289:362:1","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"from","nameLocation":"5683:4:1","nodeType":"VariableDeclaration","scope":381,"src":"5675:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"5697:2:1","nodeType":"VariableDeclaration","scope":381,"src":"5689:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"value","nameLocation":"5709:5:1","nodeType":"VariableDeclaration","scope":381,"src":"5701:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:1"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"5725:0:1"},"scope":651,"src":"5656:300:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"6346:1032:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6360:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:1","typeDescriptions":{}}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":428,"nodeType":"Block","src":"6534:362:1","statements":[{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:1","nodeType":"VariableDeclaration","scope":428,"src":"6548:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":407,"initialValue":{"baseExpression":{"id":404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6570:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":406,"indexExpression":{"id":405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6580:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6603:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6617:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":418,"nodeType":"IfStatement","src":"6599:115:1","trueBody":{"id":417,"nodeType":"Block","src":"6624:90:1","statements":[{"errorCall":{"arguments":[{"id":412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6674:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6680:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6693:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"6649:24:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"RevertStatement","src":"6642:57:1"}]}},{"id":427,"nodeType":"UncheckedBlock","src":"6727:159:1","statements":[{"expression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6834:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"id":420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6844:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6852:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6866:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":426,"nodeType":"ExpressionStatement","src":"6834:37:1"}]}]},"id":429,"nodeType":"IfStatement","src":"6356:540:1","trueBody":{"id":401,"nodeType":"Block","src":"6380:148:1","statements":[{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6496:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6512:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"6496:21:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6910:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:1","typeDescriptions":{}}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":449,"nodeType":"Block","src":"7125:206:1","statements":[{"id":448,"nodeType":"UncheckedBlock","src":"7139:182:1","statements":[{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"7284:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":444,"indexExpression":{"id":443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7294:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7301:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"nodeType":"ExpressionStatement","src":"7284:22:1"}]}]},"id":450,"nodeType":"IfStatement","src":"6906:425:1","trueBody":{"id":441,"nodeType":"Block","src":"6928:191:1","statements":[{"id":440,"nodeType":"UncheckedBlock","src":"6942:167:1","statements":[{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"7073:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7089:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"7073:21:1"}]}]}},{"eventCall":{"arguments":[{"id":452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7355:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7361:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7365:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7346:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"EmitStatement","src":"7341:30:1"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5962:304:1","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"from","nameLocation":"6296:4:1","nodeType":"VariableDeclaration","scope":458,"src":"6288:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"to","nameLocation":"6310:2:1","nodeType":"VariableDeclaration","scope":458,"src":"6302:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"value","nameLocation":"6322:5:1","nodeType":"VariableDeclaration","scope":458,"src":"6314:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"6346:0:1"},"scope":651,"src":"6271:1107:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"7777:152:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7791:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:1","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"IfStatement","src":"7787:91:1","trueBody":{"id":479,"nodeType":"Block","src":"7814:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:1","typeDescriptions":{}}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"7835:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"RevertStatement","src":"7828:39:1"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:1","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7907:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7916:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7887:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7887:35:1"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"7384:332:1","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"account","nameLocation":"7744:7:1","nodeType":"VariableDeclaration","scope":491,"src":"7736:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"value","nameLocation":"7761:5:1","nodeType":"VariableDeclaration","scope":491,"src":"7753:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:1"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7777:0:1"},"scope":651,"src":"7721:208:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":523,"nodeType":"Block","src":"8303:150:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8317:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:1","typeDescriptions":{}}},"id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"IfStatement","src":"8313:89:1","trueBody":{"id":512,"nodeType":"Block","src":"8340:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:1","typeDescriptions":{}}},"id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"8361:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"RevertStatement","src":"8354:37:1"}]}},{"expression":{"arguments":[{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8419:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:1","typeDescriptions":{}}},"id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"8440:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"8411:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"8411:35:1"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"7935:307:1","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:1","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"account","nameLocation":"8270:7:1","nodeType":"VariableDeclaration","scope":524,"src":"8262:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"value","nameLocation":"8287:5:1","nodeType":"VariableDeclaration","scope":524,"src":"8279:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:1"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"8303:0:1"},"scope":651,"src":"8247:206:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":541,"nodeType":"Block","src":"9063:54:1","statements":[{"expression":{"arguments":[{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"9082:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"9089:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"9098:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"9073:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"9073:37:1"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"8459:525:1","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:1","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"9015:5:1","nodeType":"VariableDeclaration","scope":542,"src":"9007:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"9030:7:1","nodeType":"VariableDeclaration","scope":542,"src":"9022:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"value","nameLocation":"9047:5:1","nodeType":"VariableDeclaration","scope":542,"src":"9039:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:1"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"9063:0:1"},"scope":651,"src":"8989:128:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"10047:334:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10061:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:1","typeDescriptions":{}}},"id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":568,"nodeType":"IfStatement","src":"10057:89:1","trueBody":{"id":567,"nodeType":"Block","src":"10082:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:1","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"10103:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"RevertStatement","src":"10096:39:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10159:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:1","typeDescriptions":{}}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":583,"nodeType":"IfStatement","src":"10155:90:1","trueBody":{"id":582,"nodeType":"Block","src":"10182:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:1","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"10203:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"RevertStatement","src":"10196:38:1"}]}},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"10254:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":587,"indexExpression":{"id":585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10266:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":588,"indexExpression":{"id":586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10273:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10284:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"10254:35:1"},{"condition":{"id":592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"10303:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":600,"nodeType":"IfStatement","src":"10299:76:1","trueBody":{"id":599,"nodeType":"Block","src":"10314:61:1","statements":[{"eventCall":{"arguments":[{"id":594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10342:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10349:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10358:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10333:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"EmitStatement","src":"10328:36:1"}]}}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"9123:821:1","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"owner","nameLocation":"9975:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9967:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"spender","nameLocation":"9990:7:1","nodeType":"VariableDeclaration","scope":602,"src":"9982:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"value","nameLocation":"10007:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9999:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:1","nodeType":"VariableDeclaration","scope":602,"src":"10014:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"10047:0:1"},"scope":651,"src":"9949:432:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":649,"nodeType":"Block","src":"10752:388:1","statements":[{"assignments":[613],"declarations":[{"constant":false,"id":613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:1","nodeType":"VariableDeclaration","scope":649,"src":"10762:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":618,"initialValue":{"arguments":[{"id":615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10799:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10806:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"10789:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10828:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:1","memberName":"max","nodeType":"MemberAccess","src":"10848:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":648,"nodeType":"IfStatement","src":"10824:310:1","trueBody":{"id":647,"nodeType":"Block","src":"10867:267:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10885:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10904:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"10881:130:1","trueBody":{"id":635,"nodeType":"Block","src":"10911:100:1","statements":[{"errorCall":{"arguments":[{"id":630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10963:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10972:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10990:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"10936:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"10929:67:1"}]}},{"id":646,"nodeType":"UncheckedBlock","src":"11024:100:1","statements":[{"expression":{"arguments":[{"id":638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"11061:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"11068:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"11077:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"11096:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"11052:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"11052:57:1"}]}]}}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"10387:271:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"10696:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10688:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"spender","nameLocation":"10711:7:1","nodeType":"VariableDeclaration","scope":650,"src":"10703:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"value","nameLocation":"10728:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10720:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:1"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"10752:0:1"},"scope":651,"src":"10663:477:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"1401:9741:1","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"105:11038:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[729]},"id":730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"132:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":729,"linearizedBaseContracts":[729],"name":"IERC20","nameLocation":"213:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"226:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":663,"name":"Transfer","nameLocation":"395:8:2","nodeType":"EventDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:2","nodeType":"VariableDeclaration","scope":663,"src":"404:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:2","nodeType":"VariableDeclaration","scope":663,"src":"426:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:2","nodeType":"VariableDeclaration","scope":663,"src":"446:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:2"},"src":"389:72:2"},{"anonymous":false,"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"467:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":672,"name":"Approval","nameLocation":"626:8:2","nodeType":"EventDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:2","nodeType":"VariableDeclaration","scope":672,"src":"635:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:2","nodeType":"VariableDeclaration","scope":672,"src":"658:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:2","nodeType":"VariableDeclaration","scope":672,"src":"683:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:2"},"src":"620:78:2"},{"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"704:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":729,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"835:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:2","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"account","nameLocation":"938:7:2","nodeType":"VariableDeclaration","scope":686,"src":"930:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:2"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"970:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:2"},"scope":729,"src":"911:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"985:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"to","nameLocation":"1229:2:2","nodeType":"VariableDeclaration","scope":696,"src":"1221:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"value","nameLocation":"1241:5:2","nodeType":"VariableDeclaration","scope":696,"src":"1233:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:2"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"1266:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:2"},"scope":729,"src":"1203:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1278:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:2","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"owner","nameLocation":"1574:5:2","nodeType":"VariableDeclaration","scope":706,"src":"1566:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"spender","nameLocation":"1589:7:2","nodeType":"VariableDeclaration","scope":706,"src":"1581:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"1621:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:2"},"scope":729,"src":"1547:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"1636:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:2","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"spender","nameLocation":"2333:7:2","nodeType":"VariableDeclaration","scope":716,"src":"2325:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"value","nameLocation":"2350:5:2","nodeType":"VariableDeclaration","scope":716,"src":"2342:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:2"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"2375:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:2"},"scope":729,"src":"2308:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"2387:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:2","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"from","nameLocation":"2719:4:2","nodeType":"VariableDeclaration","scope":728,"src":"2711:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"to","nameLocation":"2733:2:2","nodeType":"VariableDeclaration","scope":728,"src":"2725:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"value","nameLocation":"2745:5:2","nodeType":"VariableDeclaration","scope":728,"src":"2737:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"2770:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":725,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:2"},"scope":729,"src":"2689:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":730,"src":"203:2575:2","usedErrors":[],"usedEvents":[663,672]}],"src":"106:2673:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[729],"IERC20Metadata":[755]},"id":756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":756,"sourceUnit":730,"src":"151:37:3","symbolAliases":[{"foreign":{"id":732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"159:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":735,"name":"IERC20","nameLocations":["305:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"305:6:3"},"id":736,"nodeType":"InheritanceSpecifier","src":"305:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"190:86:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":755,"linearizedBaseContracts":[755,729],"name":"IERC20Metadata","nameLocation":"287:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"318:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:3","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"390:2:3"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"416:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":739,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:3"},"scope":755,"src":"377:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"437:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"513:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"539:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:3"},"scope":755,"src":"498:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"560:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:3","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"647:2:3"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"673:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":751,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:3"},"scope":755,"src":"630:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":756,"src":"277:405:3","usedErrors":[],"usedEvents":[663,672]}],"src":"125:558:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[785]},"id":786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"127:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":785,"linearizedBaseContracts":[785],"name":"Context","nameLocation":"642:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":766,"nodeType":"Block","src":"718:34:4","statements":[{"expression":{"expression":{"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:4","memberName":"sender","nodeType":"MemberAccess","src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":762,"id":765,"nodeType":"Return","src":"728:17:4"}]},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:4","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"675:2:4"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"709:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:4"},"scope":785,"src":"656:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"825:32:4","statements":[{"expression":{"expression":{"id":772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:4","memberName":"data","nodeType":"MemberAccess","src":"842:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":771,"id":774,"nodeType":"Return","src":"835:15:4"}]},"id":776,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:4","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"775:2:4"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"809:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":769,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:4"},"scope":785,"src":"758:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":783,"nodeType":"Block","src":"935:25:4","statements":[{"expression":{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":780,"id":782,"nodeType":"Return","src":"945:8:4"}]},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:4","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"892:2:4"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:4"},"scope":785,"src":"863:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":786,"src":"624:338:4","usedErrors":[],"usedEvents":[]}],"src":"101:862:4"},"id":4},"contracts/MedicalResearch.sol":{"ast":{"absolutePath":"contracts/MedicalResearch.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755],"MedicalResearch":[1541]},"id":1542,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":787,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":788,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1542,"sourceUnit":652,"src":"57:55:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MedicalResearch","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1541,"linearizedBaseContracts":[1541],"name":"MedicalResearch","nameLocation":"123:15:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fc0c546a","id":791,"mutability":"mutable","name":"token","nameLocation":"207:5:5","nodeType":"VariableDeclaration","scope":1541,"src":"194:18:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"},"typeName":{"id":790,"nodeType":"UserDefinedTypeName","pathNode":{"id":789,"name":"ERC20","nameLocations":["194:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"194:5:5"},"referencedDeclaration":651,"src":"194:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"visibility":"public"},{"canonicalName":"MedicalResearch.Paper","id":807,"members":[{"constant":false,"id":793,"mutability":"mutable","name":"author","nameLocation":"294:6:5","nodeType":"VariableDeclaration","scope":807,"src":"286:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"286:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"title","nameLocation":"350:5:5","nodeType":"VariableDeclaration","scope":807,"src":"343:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":794,"name":"string","nodeType":"ElementaryTypeName","src":"343:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":797,"mutability":"mutable","name":"contentHash","nameLocation":"394:11:5","nodeType":"VariableDeclaration","scope":807,"src":"387:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":796,"name":"string","nodeType":"ElementaryTypeName","src":"387:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":799,"mutability":"mutable","name":"accessFee","nameLocation":"466:9:5","nodeType":"VariableDeclaration","scope":807,"src":"458:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"keywords","nameLocation":"531:8:5","nodeType":"VariableDeclaration","scope":807,"src":"522:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":800,"name":"string","nodeType":"ElementaryTypeName","src":"522:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":801,"nodeType":"ArrayTypeName","src":"522:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"exists","nameLocation":"596:6:5","nodeType":"VariableDeclaration","scope":807,"src":"591:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":803,"name":"bool","nodeType":"ElementaryTypeName","src":"591:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"parentPaperId","nameLocation":"660:13:5","nodeType":"VariableDeclaration","scope":807,"src":"652:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Paper","nameLocation":"270:5:5","nodeType":"StructDefinition","scope":1541,"src":"263:461:5","visibility":"public"},{"canonicalName":"MedicalResearch.Contribution","id":816,"members":[{"constant":false,"id":809,"mutability":"mutable","name":"contributor","nameLocation":"821:11:5","nodeType":"VariableDeclaration","scope":816,"src":"813:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"813:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":811,"mutability":"mutable","name":"changesHash","nameLocation":"879:11:5","nodeType":"VariableDeclaration","scope":816,"src":"872:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":810,"name":"string","nodeType":"ElementaryTypeName","src":"872:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"approved","nameLocation":"933:8:5","nodeType":"VariableDeclaration","scope":816,"src":"928:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":812,"name":"bool","nodeType":"ElementaryTypeName","src":"928:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"stakeAmount","nameLocation":"1011:11:5","nodeType":"VariableDeclaration","scope":816,"src":"1003:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1003:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Contribution","nameLocation":"790:12:5","nodeType":"StructDefinition","scope":1541,"src":"783:294:5","visibility":"public"},{"constant":false,"id":818,"mutability":"mutable","name":"nextPaperId","nameLocation":"1099:11:5","nodeType":"VariableDeclaration","scope":1541,"src":"1083:27:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":820,"mutability":"mutable","name":"nextContributionIndex","nameLocation":"1172:21:5","nodeType":"VariableDeclaration","scope":1541,"src":"1156:37:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":822,"mutability":"mutable","name":"totalPaperCount","nameLocation":"1263:15:5","nodeType":"VariableDeclaration","scope":1541,"src":"1250:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":821,"name":"uint","nodeType":"ElementaryTypeName","src":"1250:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"5e775a27","id":827,"mutability":"mutable","name":"papers","nameLocation":"1394:6:5","nodeType":"VariableDeclaration","scope":1541,"src":"1361:39:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper)"},"typeName":{"id":826,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1361:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":825,"nodeType":"UserDefinedTypeName","pathNode":{"id":824,"name":"Paper","nameLocations":["1380:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"1380:5:5"},"referencedDeclaration":807,"src":"1380:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"}}},"visibility":"public"},{"constant":false,"functionSelector":"830e28f6","id":834,"mutability":"mutable","name":"contributions","nameLocation":"1507:13:5","nodeType":"VariableDeclaration","scope":1541,"src":"1447:73:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Contribution_$816_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct MedicalResearch.Contribution))"},"typeName":{"id":833,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1447:52:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Contribution_$816_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct MedicalResearch.Contribution))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":832,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1474:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1466:32:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contribution_$816_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Contribution)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":831,"nodeType":"UserDefinedTypeName","pathNode":{"id":830,"name":"Contribution","nameLocations":["1485:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":816,"src":"1485:12:5"},"referencedDeclaration":816,"src":"1485:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution"}}}},"visibility":"public"},{"constant":false,"functionSelector":"87f0c8ac","id":838,"mutability":"mutable","name":"paperContributionCount","nameLocation":"1647:22:5","nodeType":"VariableDeclaration","scope":1541,"src":"1612:57:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":837,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":835,"name":"uint256","nodeType":"ElementaryTypeName","src":"1620:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1612:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1631:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"a949dfdf","id":842,"mutability":"mutable","name":"paperAccessFees","nameLocation":"1782:15:5","nodeType":"VariableDeclaration","scope":1541,"src":"1747:50:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":841,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":839,"name":"uint256","nodeType":"ElementaryTypeName","src":"1755:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1747:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1766:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"f1857f36","id":848,"mutability":"mutable","name":"paperAccessed","nameLocation":"1908:13:5","nodeType":"VariableDeclaration","scope":1541,"src":"1856:65:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"typeName":{"id":847,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"1864:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1856:44:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":846,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1883:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1875:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":845,"name":"bool","nodeType":"ElementaryTypeName","src":"1894:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"77154fde","id":852,"mutability":"mutable","name":"userContributionCount","nameLocation":"2020:21:5","nodeType":"VariableDeclaration","scope":1541,"src":"1985:56:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":851,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"1993:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1985:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"2004:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"f690ab2f","id":858,"mutability":"mutable","name":"ownerPapers","nameLocation":"2163:11:5","nodeType":"VariableDeclaration","scope":1541,"src":"2108:66:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":857,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"2116:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2108:47:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":856,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"2135:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2127:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"2146:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"e9436a28","id":862,"mutability":"mutable","name":"ownerPaperCount","nameLocation":"2276:15:5","nodeType":"VariableDeclaration","scope":1541,"src":"2241:50:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":861,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2241:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"2260:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"56eeaa024974e3268b1cdceef36baef0f1c89ce1f09afa010857b95d4aed2586","id":877,"name":"PaperUploaded","nameLocation":"2412:13:5","nodeType":"EventDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"indexed":false,"mutability":"mutable","name":"paperId","nameLocation":"2443:7:5","nodeType":"VariableDeclaration","scope":877,"src":"2435:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"2435:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":866,"indexed":true,"mutability":"mutable","name":"author","nameLocation":"2476:6:5","nodeType":"VariableDeclaration","scope":877,"src":"2460:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"2460:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":868,"indexed":false,"mutability":"mutable","name":"title","nameLocation":"2499:5:5","nodeType":"VariableDeclaration","scope":877,"src":"2492:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":867,"name":"string","nodeType":"ElementaryTypeName","src":"2492:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":870,"indexed":false,"mutability":"mutable","name":"contentHash","nameLocation":"2521:11:5","nodeType":"VariableDeclaration","scope":877,"src":"2514:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":869,"name":"string","nodeType":"ElementaryTypeName","src":"2514:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":872,"indexed":false,"mutability":"mutable","name":"accessFee","nameLocation":"2550:9:5","nodeType":"VariableDeclaration","scope":877,"src":"2542:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"2542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":875,"indexed":false,"mutability":"mutable","name":"keywords","nameLocation":"2578:8:5","nodeType":"VariableDeclaration","scope":877,"src":"2569:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":873,"name":"string","nodeType":"ElementaryTypeName","src":"2569:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":874,"nodeType":"ArrayTypeName","src":"2569:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"2425:167:5"},"src":"2406:187:5"},{"anonymous":false,"eventSelector":"e17c01af799c5069ecf6fd9a231440a115adb7a1dea0306b06d8efe971a1a0b0","id":889,"name":"ContributionSubmitted","nameLocation":"2604:21:5","nodeType":"EventDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"indexed":false,"mutability":"mutable","name":"paperId","nameLocation":"2643:7:5","nodeType":"VariableDeclaration","scope":889,"src":"2635:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":881,"indexed":false,"mutability":"mutable","name":"contributionIndex","nameLocation":"2668:17:5","nodeType":"VariableDeclaration","scope":889,"src":"2660:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"2660:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":883,"indexed":true,"mutability":"mutable","name":"contributor","nameLocation":"2711:11:5","nodeType":"VariableDeclaration","scope":889,"src":"2695:27:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"2695:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":885,"indexed":false,"mutability":"mutable","name":"changesHash","nameLocation":"2739:11:5","nodeType":"VariableDeclaration","scope":889,"src":"2732:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":884,"name":"string","nodeType":"ElementaryTypeName","src":"2732:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":887,"indexed":false,"mutability":"mutable","name":"stakeAmount","nameLocation":"2768:11:5","nodeType":"VariableDeclaration","scope":889,"src":"2760:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"2760:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2625:160:5"},"src":"2598:188:5"},{"anonymous":false,"eventSelector":"09b0fc1dfdfeca1d7e9d6e25a76602e33ed913671db0f6aae33735eb74b66107","id":901,"name":"ContributionApproved","nameLocation":"2797:20:5","nodeType":"EventDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"indexed":false,"mutability":"mutable","name":"oldPaperId","nameLocation":"2835:10:5","nodeType":"VariableDeclaration","scope":901,"src":"2827:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2827:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":893,"indexed":false,"mutability":"mutable","name":"newPaperId","nameLocation":"2863:10:5","nodeType":"VariableDeclaration","scope":901,"src":"2855:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":895,"indexed":false,"mutability":"mutable","name":"contributionIndex","nameLocation":"2891:17:5","nodeType":"VariableDeclaration","scope":901,"src":"2883:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2883:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":897,"indexed":true,"mutability":"mutable","name":"contributor","nameLocation":"2934:11:5","nodeType":"VariableDeclaration","scope":901,"src":"2918:27:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"2918:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":899,"indexed":false,"mutability":"mutable","name":"rewardAmount","nameLocation":"2963:12:5","nodeType":"VariableDeclaration","scope":901,"src":"2955:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"2955:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2817:164:5"},"src":"2791:191:5"},{"anonymous":false,"eventSelector":"1442bdb26f7569db0cb308056cb26688f7aad42fc098b54920e1af1e8b67a5fc","id":909,"name":"PaperAccessed","nameLocation":"2993:13:5","nodeType":"EventDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"indexed":false,"mutability":"mutable","name":"paperId","nameLocation":"3015:7:5","nodeType":"VariableDeclaration","scope":909,"src":"3007:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"3007:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":905,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3040:4:5","nodeType":"VariableDeclaration","scope":909,"src":"3024:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":907,"indexed":false,"mutability":"mutable","name":"feePaid","nameLocation":"3054:7:5","nodeType":"VariableDeclaration","scope":909,"src":"3046:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":906,"name":"uint256","nodeType":"ElementaryTypeName","src":"3046:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3006:56:5"},"src":"2987:76:5"},{"anonymous":false,"eventSelector":"b97425b8ec45aa7c5ccc9b938659eb11b5502276f1eec240e61baf207824396c","id":915,"name":"PaperUpdated","nameLocation":"3074:12:5","nodeType":"EventDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"indexed":false,"mutability":"mutable","name":"newPaperId","nameLocation":"3095:10:5","nodeType":"VariableDeclaration","scope":915,"src":"3087:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"3087:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":913,"indexed":false,"mutability":"mutable","name":"newContentHash","nameLocation":"3114:14:5","nodeType":"VariableDeclaration","scope":915,"src":"3107:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":912,"name":"string","nodeType":"ElementaryTypeName","src":"3107:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3086:43:5"},"src":"3068:62:5"},{"body":{"id":938,"nodeType":"Block","src":"3270:197:5","statements":[{"expression":{"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":920,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"3280:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":922,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"3294:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":921,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"3288:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$651_$","typeString":"type(contract ERC20)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3288:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"src":"3280:28:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"id":925,"nodeType":"ExpressionStatement","src":"3280:28:5"},{"expression":{"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":926,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3318:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3332:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3318:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":929,"nodeType":"ExpressionStatement","src":"3318:15:5"},{"expression":{"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":930,"name":"nextContributionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"3369:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3393:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3369:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":933,"nodeType":"ExpressionStatement","src":"3369:25:5"},{"expression":{"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":934,"name":"totalPaperCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"3441:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3459:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3441:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":937,"nodeType":"ExpressionStatement","src":"3441:19:5"}]},"id":939,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"_tokenAddress","nameLocation":"3255:13:5","nodeType":"VariableDeclaration","scope":939,"src":"3247:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"3247:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3246:23:5"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[],"src":"3270:0:5"},"scope":1541,"src":"3235:232:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1013,"nodeType":"Block","src":"3672:816:5","statements":[{"assignments":[952],"declarations":[{"constant":false,"id":952,"mutability":"mutable","name":"paperId","nameLocation":"3690:7:5","nodeType":"VariableDeclaration","scope":1013,"src":"3682:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"3682:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":954,"initialValue":{"id":953,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3700:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3682:29:5"},{"expression":{"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3721:13:5","subExpression":{"id":955,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3721:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":957,"nodeType":"ExpressionStatement","src":"3721:13:5"},{"expression":{"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":958,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"3779:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":960,"indexExpression":{"id":959,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"3786:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3779:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":962,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3825:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3829:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3825:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":964,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"3856:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":965,"name":"contentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"3888:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":966,"name":"accessFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"3924:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":967,"name":"keywords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"3957:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"hexValue":"74727565","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3987:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4020:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":961,"name":"Paper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"3797:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Paper_$807_storage_ptr_$","typeString":"type(struct MedicalResearch.Paper storage pointer)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3817:6:5","3849:5:5","3875:11:5","3913:9:5","3947:8:5","3979:6:5","4005:13:5"],"names":["author","title","contentHash","accessFee","keywords","exists","parentPaperId"],"nodeType":"FunctionCall","src":"3797:268:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"src":"3779:286:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":972,"nodeType":"ExpressionStatement","src":"3779:286:5"},{"expression":{"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":973,"name":"ownerPapers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"4076:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":980,"indexExpression":{"expression":{"id":974,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4088:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4092:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4088:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4076:23:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":981,"indexExpression":{"baseExpression":{"id":976,"name":"ownerPaperCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4100:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":979,"indexExpression":{"expression":{"id":977,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4116:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4120:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4116:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4100:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:52:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":982,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"4131:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4076:62:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":984,"nodeType":"ExpressionStatement","src":"4076:62:5"},{"expression":{"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4148:29:5","subExpression":{"baseExpression":{"id":985,"name":"ownerPaperCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4148:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":988,"indexExpression":{"expression":{"id":986,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4164:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4168:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4164:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4148:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":990,"nodeType":"ExpressionStatement","src":"4148:29:5"},{"expression":{"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4240:17:5","subExpression":{"id":991,"name":"totalPaperCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"4240:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":993,"nodeType":"ExpressionStatement","src":"4240:17:5"},{"expression":{"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":994,"name":"paperAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"4267:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":998,"indexExpression":{"expression":{"id":995,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4281:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4285:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4281:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4267:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":999,"indexExpression":{"id":997,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"4293:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4267:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4304:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4267:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1002,"nodeType":"ExpressionStatement","src":"4267:41:5"},{"eventCall":{"arguments":[{"id":1004,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"4351:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1005,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4372:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4376:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4372:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1007,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"4396:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1008,"name":"contentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"4415:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1009,"name":"accessFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"4440:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1010,"name":"keywords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"4463:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}],"id":1003,"name":"PaperUploaded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"4324:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory,string memory,uint256,string memory[] memory)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4324:157:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1012,"nodeType":"EmitStatement","src":"4319:162:5"}]},"functionSelector":"a1c74be5","id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"uploadPaper","nameLocation":"3520:11:5","nodeType":"FunctionDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"title","nameLocation":"3555:5:5","nodeType":"VariableDeclaration","scope":1014,"src":"3541:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":940,"name":"string","nodeType":"ElementaryTypeName","src":"3541:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"contentHash","nameLocation":"3584:11:5","nodeType":"VariableDeclaration","scope":1014,"src":"3570:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":942,"name":"string","nodeType":"ElementaryTypeName","src":"3570:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"accessFee","nameLocation":"3613:9:5","nodeType":"VariableDeclaration","scope":1014,"src":"3605:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"3605:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":948,"mutability":"mutable","name":"keywords","nameLocation":"3648:8:5","nodeType":"VariableDeclaration","scope":1014,"src":"3632:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":946,"name":"string","nodeType":"ElementaryTypeName","src":"3632:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":947,"nodeType":"ArrayTypeName","src":"3632:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"3531:131:5"},"returnParameters":{"id":950,"nodeType":"ParameterList","parameters":[],"src":"3672:0:5"},"scope":1541,"src":"3511:977:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1091,"nodeType":"Block","src":"4600:788:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1020,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"4618:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1022,"indexExpression":{"id":1021,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4625:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4618:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4634:6:5","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":804,"src":"4618:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506170657220646f6573206e6f74206578697374","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4642:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""},"value":"Paper does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""}],"id":1019,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4610:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4610:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"ExpressionStatement","src":"4610:55:5"},{"expression":{"arguments":[{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4696:35:5","subExpression":{"baseExpression":{"baseExpression":{"id":1028,"name":"paperAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"4697:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":1031,"indexExpression":{"expression":{"id":1029,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4711:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4715:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4711:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4697:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":1033,"indexExpression":{"id":1032,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4723:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4697:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5573657220616c7265616479206861732061636365737320746f2074686973207061706572","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4745:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924","typeString":"literal_string \"User already has access to this paper\""},"value":"User already has access to this paper"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924","typeString":"literal_string \"User already has access to this paper\""}],"id":1027,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4675:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4675:119:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"ExpressionStatement","src":"4675:119:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1038,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"4809:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1040,"indexExpression":{"id":1039,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4816:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4809:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4825:9:5","memberName":"accessFee","nodeType":"MemberAccess","referencedDeclaration":799,"src":"4809:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4809:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1071,"nodeType":"IfStatement","src":"4805:406:5","trueBody":{"id":1070,"nodeType":"Block","src":"4840:371:5","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":1047,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4919:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4923:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4919:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1049,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"4951:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1051,"indexExpression":{"id":1050,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4958:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4951:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4967:6:5","memberName":"author","nodeType":"MemberAccess","referencedDeclaration":793,"src":"4951:22:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1053,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"4995:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1055,"indexExpression":{"id":1054,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"5002:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4995:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5011:9:5","memberName":"accessFee","nodeType":"MemberAccess","referencedDeclaration":799,"src":"4995:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1045,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"4879:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4885:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":334,"src":"4879:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4879:159:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572206661696c6564","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5056:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""},"value":"Token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""}],"id":1044,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4854:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4854:239:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1060,"nodeType":"ExpressionStatement","src":"4854:239:5"},{"expression":{"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1061,"name":"paperAccessFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"5107:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1063,"indexExpression":{"id":1062,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"5123:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5107:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":1064,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5135:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1066,"indexExpression":{"id":1065,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"5142:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5135:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5151:9:5","memberName":"accessFee","nodeType":"MemberAccess","referencedDeclaration":799,"src":"5135:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5107:53:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1069,"nodeType":"ExpressionStatement","src":"5107:53:5"}]}},{"expression":{"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1072,"name":"paperAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"5221:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":1076,"indexExpression":{"expression":{"id":1073,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5235:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5239:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5235:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5221:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":1077,"indexExpression":{"id":1075,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"5247:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5221:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5258:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5221:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1080,"nodeType":"ExpressionStatement","src":"5221:41:5"},{"eventCall":{"arguments":[{"id":1082,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"5334:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1083,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5343:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5347:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5343:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1085,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5355:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1087,"indexExpression":{"id":1086,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"5362:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5355:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5371:9:5","memberName":"accessFee","nodeType":"MemberAccess","referencedDeclaration":799,"src":"5355:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1081,"name":"PaperAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"5320:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1090,"nodeType":"EmitStatement","src":"5315:66:5"}]},"functionSelector":"df771aca","id":1092,"implemented":true,"kind":"function","modifiers":[],"name":"accessPaper","nameLocation":"4562:11:5","nodeType":"FunctionDefinition","parameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"paperId","nameLocation":"4582:7:5","nodeType":"VariableDeclaration","scope":1092,"src":"4574:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"4574:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4573:17:5"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[],"src":"4600:0:5"},"scope":1541,"src":"4553:835:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1163,"nodeType":"Block","src":"5578:902:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1102,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5596:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1104,"indexExpression":{"id":1103,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"5603:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5596:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5612:6:5","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":804,"src":"5596:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506170657220646f6573206e6f74206578697374","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5620:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""},"value":"Paper does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""}],"id":1101,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5588:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5588:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"ExpressionStatement","src":"5588:55:5"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1112,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5693:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5697:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5693:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1116,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5713:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_MedicalResearch_$1541","typeString":"contract MedicalResearch"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MedicalResearch_$1541","typeString":"contract MedicalResearch"}],"id":1115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5705:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"5705:7:5","typeDescriptions":{}}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5705:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1118,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"5720:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1110,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"5674:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":334,"src":"5674:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5674:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572206661696c6564","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5746:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""},"value":"Token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""}],"id":1109,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5653:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5653:126:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1122,"nodeType":"ExpressionStatement","src":"5653:126:5"},{"assignments":[1124],"declarations":[{"constant":false,"id":1124,"mutability":"mutable","name":"contributionIndex","nameLocation":"5798:17:5","nodeType":"VariableDeclaration","scope":1163,"src":"5790:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1128,"initialValue":{"baseExpression":{"id":1125,"name":"paperContributionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"5818:22:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1127,"indexExpression":{"id":1126,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"5841:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5818:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5790:59:5"},{"expression":{"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5901:33:5","subExpression":{"baseExpression":{"id":1129,"name":"paperContributionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"5901:22:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1131,"indexExpression":{"id":1130,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"5924:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5901:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1133,"nodeType":"ExpressionStatement","src":"5901:33:5"},{"expression":{"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1134,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"5995:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Contribution_$816_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct MedicalResearch.Contribution storage ref))"}},"id":1137,"indexExpression":{"id":1135,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6009:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5995:22:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contribution_$816_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Contribution storage ref)"}},"id":1138,"indexExpression":{"id":1136,"name":"contributionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"6018:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5995:41:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage","typeString":"struct MedicalResearch.Contribution storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1140,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6079:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6083:6:5","memberName":"sender","nodeType":"MemberAccess","src":"6079:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1142,"name":"changesHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"6116:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"66616c7365","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6151:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":1144,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"6183:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1139,"name":"Contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"6039:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Contribution_$816_storage_ptr_$","typeString":"type(struct MedicalResearch.Contribution storage pointer)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6066:11:5","6103:11:5","6141:8:5","6170:11:5"],"names":["contributor","changesHash","approved","stakeAmount"],"nodeType":"FunctionCall","src":"6039:166:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_memory_ptr","typeString":"struct MedicalResearch.Contribution memory"}},"src":"5995:210:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage","typeString":"struct MedicalResearch.Contribution storage ref"}},"id":1147,"nodeType":"ExpressionStatement","src":"5995:210:5"},{"expression":{"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6216:35:5","subExpression":{"baseExpression":{"id":1148,"name":"userContributionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"6216:21:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1151,"indexExpression":{"expression":{"id":1149,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6238:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6242:6:5","memberName":"sender","nodeType":"MemberAccess","src":"6238:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6216:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1153,"nodeType":"ExpressionStatement","src":"6216:35:5"},{"eventCall":{"arguments":[{"id":1155,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6351:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1156,"name":"contributionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"6372:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1157,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6403:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6407:6:5","memberName":"sender","nodeType":"MemberAccess","src":"6403:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"changesHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"6427:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1160,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"6452:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1154,"name":"ContributionSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"6316:21:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,address,string memory,uint256)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6316:157:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1162,"nodeType":"EmitStatement","src":"6311:162:5"}]},"functionSelector":"aa4a66dd","id":1164,"implemented":true,"kind":"function","modifiers":[],"name":"submitContribution","nameLocation":"5455:18:5","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"paperId","nameLocation":"5491:7:5","nodeType":"VariableDeclaration","scope":1164,"src":"5483:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"5483:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"changesHash","nameLocation":"5522:11:5","nodeType":"VariableDeclaration","scope":1164,"src":"5508:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1095,"name":"string","nodeType":"ElementaryTypeName","src":"5508:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"stakeAmount","nameLocation":"5551:11:5","nodeType":"VariableDeclaration","scope":1164,"src":"5543:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"5543:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5473:95:5"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[],"src":"5578:0:5"},"scope":1541,"src":"5446:1034:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1324,"nodeType":"Block","src":"6643:2049:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1172,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"6661:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1174,"indexExpression":{"id":1173,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"6668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6661:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6677:6:5","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":804,"src":"6661:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506170657220646f6573206e6f74206578697374","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6685:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""},"value":"Paper does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""}],"id":1171,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6653:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1178,"nodeType":"ExpressionStatement","src":"6653:55:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1180,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6739:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6743:6:5","memberName":"sender","nodeType":"MemberAccess","src":"6739:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":1182,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"6753:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1184,"indexExpression":{"id":1183,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"6760:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6753:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6769:6:5","memberName":"author","nodeType":"MemberAccess","referencedDeclaration":793,"src":"6753:22:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6739:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792074686520617574686f722063616e20617070726f766520636f6e747269627574696f6e73","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6789:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1","typeString":"literal_string \"Only the author can approve contributions\""},"value":"Only the author can approve contributions"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1","typeString":"literal_string \"Only the author can approve contributions\""}],"id":1179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6718:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6718:124:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1189,"nodeType":"ExpressionStatement","src":"6718:124:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1191,"name":"contributionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"6873:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":1192,"name":"paperContributionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"6893:22:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1194,"indexExpression":{"id":1193,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"6916:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6893:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6873:51:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f6e747269627574696f6e20696e646578","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6938:28:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340","typeString":"literal_string \"Invalid contribution index\""},"value":"Invalid contribution index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340","typeString":"literal_string \"Invalid contribution index\""}],"id":1190,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6852:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6852:124:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1198,"nodeType":"ExpressionStatement","src":"6852:124:5"},{"expression":{"arguments":[{"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7007:51:5","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1200,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"7008:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Contribution_$816_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct MedicalResearch.Contribution storage ref))"}},"id":1202,"indexExpression":{"id":1201,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"7022:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7008:22:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contribution_$816_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Contribution storage ref)"}},"id":1204,"indexExpression":{"id":1203,"name":"contributionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7031:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7008:41:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage","typeString":"struct MedicalResearch.Contribution storage ref"}},"id":1205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7050:8:5","memberName":"approved","nodeType":"MemberAccess","referencedDeclaration":813,"src":"7008:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e747269627574696f6e20616c726561647920617070726f766564","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7072:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20","typeString":"literal_string \"Contribution already approved\""},"value":"Contribution already approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20","typeString":"literal_string \"Contribution already approved\""}],"id":1199,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6986:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6986:127:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"ExpressionStatement","src":"6986:127:5"},{"assignments":[1212],"declarations":[{"constant":false,"id":1212,"mutability":"mutable","name":"contribution","nameLocation":"7145:12:5","nodeType":"VariableDeclaration","scope":1324,"src":"7124:33:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution"},"typeName":{"id":1211,"nodeType":"UserDefinedTypeName","pathNode":{"id":1210,"name":"Contribution","nameLocations":["7124:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":816,"src":"7124:12:5"},"referencedDeclaration":816,"src":"7124:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution"}},"visibility":"internal"}],"id":1218,"initialValue":{"baseExpression":{"baseExpression":{"id":1213,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"7160:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Contribution_$816_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct MedicalResearch.Contribution storage ref))"}},"id":1215,"indexExpression":{"id":1214,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"7174:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7160:22:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contribution_$816_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Contribution storage ref)"}},"id":1217,"indexExpression":{"id":1216,"name":"contributionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7196:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7160:63:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage","typeString":"struct MedicalResearch.Contribution storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7124:99:5"},{"assignments":[1220],"declarations":[{"constant":false,"id":1220,"mutability":"mutable","name":"rewardAmount","nameLocation":"7241:12:5","nodeType":"VariableDeclaration","scope":1324,"src":"7233:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"7233:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1233,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1221,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"7256:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution storage pointer"}},"id":1222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7269:11:5","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":815,"src":"7256:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1223,"name":"paperAccessFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"7297:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1225,"indexExpression":{"id":1224,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"7313:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7297:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7324:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7297:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1228,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7296:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7330:3:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7296:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7295:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7256:78:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7233:101:5"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1237,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"7443:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution storage pointer"}},"id":1238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7456:11:5","memberName":"contributor","nodeType":"MemberAccess","referencedDeclaration":809,"src":"7443:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1239,"name":"rewardAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"7469:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1235,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"7428:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7434:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":261,"src":"7428:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7428:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572206661696c6564","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7496:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""},"value":"Token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""}],"id":1234,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7407:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7407:122:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1243,"nodeType":"ExpressionStatement","src":"7407:122:5"},{"assignments":[1245],"declarations":[{"constant":false,"id":1245,"mutability":"mutable","name":"newPaperId","nameLocation":"7603:10:5","nodeType":"VariableDeclaration","scope":1324,"src":"7595:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1244,"name":"uint256","nodeType":"ElementaryTypeName","src":"7595:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1247,"initialValue":{"id":1246,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"7616:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7595:32:5"},{"expression":{"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7637:13:5","subExpression":{"id":1248,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"7637:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1250,"nodeType":"ExpressionStatement","src":"7637:13:5"},{"expression":{"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1251,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"7661:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1253,"indexExpression":{"id":1252,"name":"newPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"7668:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7661:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1255,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7710:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7714:6:5","memberName":"sender","nodeType":"MemberAccess","src":"7710:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1257,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"7741:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1259,"indexExpression":{"id":1258,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"7748:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7741:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7757:5:5","memberName":"title","nodeType":"MemberAccess","referencedDeclaration":795,"src":"7741:21:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":1261,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"7816:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution storage pointer"}},"id":1262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7829:11:5","memberName":"changesHash","nodeType":"MemberAccess","referencedDeclaration":811,"src":"7816:24:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"baseExpression":{"id":1263,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"7865:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1265,"indexExpression":{"id":1264,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"7872:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7865:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7881:9:5","memberName":"accessFee","nodeType":"MemberAccess","referencedDeclaration":799,"src":"7865:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":1267,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"7946:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1269,"indexExpression":{"id":1268,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"7953:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7946:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7962:8:5","memberName":"keywords","nodeType":"MemberAccess","referencedDeclaration":802,"src":"7946:24:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},{"hexValue":"74727565","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8022:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1272,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"8055:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1254,"name":"Paper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"7682:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Paper_$807_storage_ptr_$","typeString":"type(struct MedicalResearch.Paper storage pointer)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7702:6:5","7734:5:5","7803:11:5","7854:9:5","7936:8:5","8014:6:5","8040:13:5"],"names":["author","title","contentHash","accessFee","keywords","exists","parentPaperId"],"nodeType":"FunctionCall","src":"7682:426:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"src":"7661:447:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1275,"nodeType":"ExpressionStatement","src":"7661:447:5"},{"expression":{"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1276,"name":"ownerPapers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"8119:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1283,"indexExpression":{"expression":{"id":1277,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8131:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8135:6:5","memberName":"sender","nodeType":"MemberAccess","src":"8131:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8119:23:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1284,"indexExpression":{"baseExpression":{"id":1279,"name":"ownerPaperCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"8143:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1282,"indexExpression":{"expression":{"id":1280,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8159:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8163:6:5","memberName":"sender","nodeType":"MemberAccess","src":"8159:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8143:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8119:52:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1285,"name":"newPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"8174:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8119:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1287,"nodeType":"ExpressionStatement","src":"8119:65:5"},{"expression":{"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8194:29:5","subExpression":{"baseExpression":{"id":1288,"name":"ownerPaperCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"8194:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1291,"indexExpression":{"expression":{"id":1289,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8210:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8214:6:5","memberName":"sender","nodeType":"MemberAccess","src":"8210:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8194:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1293,"nodeType":"ExpressionStatement","src":"8194:29:5"},{"expression":{"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1294,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"8287:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution storage pointer"}},"id":1296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8300:8:5","memberName":"approved","nodeType":"MemberAccess","referencedDeclaration":813,"src":"8287:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8311:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8287:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1299,"nodeType":"ExpressionStatement","src":"8287:28:5"},{"expression":{"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1300,"name":"paperAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"8362:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":1304,"indexExpression":{"expression":{"id":1301,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8376:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8380:6:5","memberName":"sender","nodeType":"MemberAccess","src":"8376:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8362:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":1305,"indexExpression":{"id":1303,"name":"newPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"8388:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8362:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8402:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8362:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1308,"nodeType":"ExpressionStatement","src":"8362:44:5"},{"eventCall":{"arguments":[{"id":1310,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"8456:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1311,"name":"newPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"8477:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1312,"name":"contributionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"8501:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1313,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"8532:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution storage pointer"}},"id":1314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8545:11:5","memberName":"contributor","nodeType":"MemberAccess","referencedDeclaration":809,"src":"8532:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"rewardAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"8570:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1309,"name":"ContributionApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"8422:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,address,uint256)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8422:170:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1317,"nodeType":"EmitStatement","src":"8417:175:5"},{"eventCall":{"arguments":[{"id":1319,"name":"newPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"8620:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1320,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"8632:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution storage pointer"}},"id":1321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8645:11:5","memberName":"changesHash","nodeType":"MemberAccess","referencedDeclaration":811,"src":"8632:24:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1318,"name":"PaperUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"8607:12:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8607:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1323,"nodeType":"EmitStatement","src":"8602:55:5"}]},"functionSelector":"6fd91da9","id":1325,"implemented":true,"kind":"function","modifiers":[],"name":"approveContribution","nameLocation":"6548:19:5","nodeType":"FunctionDefinition","parameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"paperId","nameLocation":"6585:7:5","nodeType":"VariableDeclaration","scope":1325,"src":"6577:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1165,"name":"uint256","nodeType":"ElementaryTypeName","src":"6577:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"contributionIndex","nameLocation":"6610:17:5","nodeType":"VariableDeclaration","scope":1325,"src":"6602:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"6602:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6567:66:5"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[],"src":"6643:0:5"},"scope":1541,"src":"6539:2153:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1336,"nodeType":"Block","src":"8842:46:5","statements":[{"expression":{"baseExpression":{"id":1332,"name":"ownerPaperCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"8859:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1334,"indexExpression":{"id":1333,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"8875:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8859:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1331,"id":1335,"nodeType":"Return","src":"8852:29:5"}]},"functionSelector":"dc740fa8","id":1337,"implemented":true,"kind":"function","modifiers":[],"name":"getOwnerPaperCount","nameLocation":"8776:18:5","nodeType":"FunctionDefinition","parameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"owner","nameLocation":"8803:5:5","nodeType":"VariableDeclaration","scope":1337,"src":"8795:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"8795:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8794:15:5"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1337,"src":"8833:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"8833:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8832:9:5"},"scope":1541,"src":"8767:121:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1361,"nodeType":"Block","src":"9089:121:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1347,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"9107:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":1348,"name":"ownerPaperCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"9115:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1350,"indexExpression":{"id":1349,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"9131:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9115:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9107:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e646578206f7574206f6620626f756e6473","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9139:21:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""},"value":"Index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""}],"id":1346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9099:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9099:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1354,"nodeType":"ExpressionStatement","src":"9099:62:5"},{"expression":{"baseExpression":{"baseExpression":{"id":1355,"name":"ownerPapers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"9178:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1357,"indexExpression":{"id":1356,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"9190:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9178:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1359,"indexExpression":{"id":1358,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"9197:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9178:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1345,"id":1360,"nodeType":"Return","src":"9171:32:5"}]},"functionSelector":"159f3927","id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"getPaperIdByOwnerAndIndex","nameLocation":"8979:25:5","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"owner","nameLocation":"9022:5:5","nodeType":"VariableDeclaration","scope":1362,"src":"9014:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"9014:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"index","nameLocation":"9045:5:5","nodeType":"VariableDeclaration","scope":1362,"src":"9037:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"9037:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9004:52:5"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1362,"src":"9080:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1343,"name":"uint256","nodeType":"ElementaryTypeName","src":"9080:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9079:9:5"},"scope":1541,"src":"8970:240:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1387,"nodeType":"Block","src":"9429:134:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1373,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"9447:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":1374,"name":"paperContributionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"9455:22:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1376,"indexExpression":{"id":1375,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"9478:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9455:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9447:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e646578206f7574206f6620626f756e6473","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9488:21:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""},"value":"Index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""}],"id":1372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9439:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9439:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1380,"nodeType":"ExpressionStatement","src":"9439:71:5"},{"expression":{"baseExpression":{"baseExpression":{"id":1381,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"9527:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Contribution_$816_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct MedicalResearch.Contribution storage ref))"}},"id":1383,"indexExpression":{"id":1382,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"9541:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9527:22:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contribution_$816_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Contribution storage ref)"}},"id":1385,"indexExpression":{"id":1384,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"9550:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9527:29:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage","typeString":"struct MedicalResearch.Contribution storage ref"}},"functionReturnParameters":1371,"id":1386,"nodeType":"Return","src":"9520:36:5"}]},"functionSelector":"218ace50","id":1388,"implemented":true,"kind":"function","modifiers":[],"name":"getContributionByIndex","nameLocation":"9308:22:5","nodeType":"FunctionDefinition","parameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"paperId","nameLocation":"9348:7:5","nodeType":"VariableDeclaration","scope":1388,"src":"9340:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"9340:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"index","nameLocation":"9373:5:5","nodeType":"VariableDeclaration","scope":1388,"src":"9365:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"9365:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:54:5"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1388,"src":"9408:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_memory_ptr","typeString":"struct MedicalResearch.Contribution"},"typeName":{"id":1369,"nodeType":"UserDefinedTypeName","pathNode":{"id":1368,"name":"Contribution","nameLocations":["9408:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":816,"src":"9408:12:5"},"referencedDeclaration":816,"src":"9408:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution"}},"visibility":"internal"}],"src":"9407:21:5"},"scope":1541,"src":"9299:264:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1435,"nodeType":"Block","src":"9936:317:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1407,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"9954:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1409,"indexExpression":{"id":1408,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"9961:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9954:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9970:6:5","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":804,"src":"9954:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506170657220646f6573206e6f74206578697374","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""},"value":"Paper does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""}],"id":1406,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9946:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9946:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1413,"nodeType":"ExpressionStatement","src":"9946:55:5"},{"assignments":[1416],"declarations":[{"constant":false,"id":1416,"mutability":"mutable","name":"paper","nameLocation":"10024:5:5","nodeType":"VariableDeclaration","scope":1435,"src":"10011:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper"},"typeName":{"id":1415,"nodeType":"UserDefinedTypeName","pathNode":{"id":1414,"name":"Paper","nameLocations":["10011:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"10011:5:5"},"referencedDeclaration":807,"src":"10011:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"}},"visibility":"internal"}],"id":1420,"initialValue":{"baseExpression":{"id":1417,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"10032:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1419,"indexExpression":{"id":1418,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"10039:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10032:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10011:36:5"},{"expression":{"components":[{"expression":{"id":1421,"name":"paper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"10078:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"id":1422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10084:6:5","memberName":"author","nodeType":"MemberAccess","referencedDeclaration":793,"src":"10078:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1423,"name":"paper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"10104:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"id":1424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10110:5:5","memberName":"title","nodeType":"MemberAccess","referencedDeclaration":795,"src":"10104:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":1425,"name":"paper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"10129:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"id":1426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:11:5","memberName":"contentHash","nodeType":"MemberAccess","referencedDeclaration":797,"src":"10129:17:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":1427,"name":"paper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"10160:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"id":1428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10166:9:5","memberName":"accessFee","nodeType":"MemberAccess","referencedDeclaration":799,"src":"10160:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1429,"name":"paper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"10189:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"id":1430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10195:8:5","memberName":"keywords","nodeType":"MemberAccess","referencedDeclaration":802,"src":"10189:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"expression":{"id":1431,"name":"paper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"10217:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"id":1432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10223:13:5","memberName":"parentPaperId","nodeType":"MemberAccess","referencedDeclaration":806,"src":"10217:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10064:182:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(address,string memory,string memory,uint256,string memory[] memory,uint256)"}},"functionReturnParameters":1405,"id":1434,"nodeType":"Return","src":"10057:189:5"}]},"functionSelector":"3e0b7810","id":1436,"implemented":true,"kind":"function","modifiers":[],"name":"getPaperById","nameLocation":"9627:12:5","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"paperId","nameLocation":"9657:7:5","nodeType":"VariableDeclaration","scope":1436,"src":"9649:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"9649:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9639:31:5"},"returnParameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"author","nameLocation":"9739:6:5","nodeType":"VariableDeclaration","scope":1436,"src":"9731:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"9731:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1395,"mutability":"mutable","name":"title","nameLocation":"9773:5:5","nodeType":"VariableDeclaration","scope":1436,"src":"9759:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1394,"name":"string","nodeType":"ElementaryTypeName","src":"9759:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"contentHash","nameLocation":"9806:11:5","nodeType":"VariableDeclaration","scope":1436,"src":"9792:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1396,"name":"string","nodeType":"ElementaryTypeName","src":"9792:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"accessFee","nameLocation":"9839:9:5","nodeType":"VariableDeclaration","scope":1436,"src":"9831:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"9831:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"keywords","nameLocation":"9878:8:5","nodeType":"VariableDeclaration","scope":1436,"src":"9862:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1400,"name":"string","nodeType":"ElementaryTypeName","src":"9862:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1401,"nodeType":"ArrayTypeName","src":"9862:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"parentPaperId","nameLocation":"9908:13:5","nodeType":"VariableDeclaration","scope":1436,"src":"9900:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"9900:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9717:214:5"},"scope":1541,"src":"9618:635:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1443,"nodeType":"Block","src":"10386:39:5","statements":[{"expression":{"id":1441,"name":"totalPaperCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"10403:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1440,"id":1442,"nodeType":"Return","src":"10396:22:5"}]},"functionSelector":"ad965ae6","id":1444,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalPaperCount","nameLocation":"10333:18:5","nodeType":"FunctionDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[],"src":"10351:2:5"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1444,"src":"10377:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"10377:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10376:9:5"},"scope":1541,"src":"10324:101:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1459,"nodeType":"Block","src":"10532:49:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1453,"name":"paperAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10549:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":1455,"indexExpression":{"id":1454,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"10563:1:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10549:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":1457,"indexExpression":{"id":1456,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"10566:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10549:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1452,"id":1458,"nodeType":"Return","src":"10542:32:5"}]},"functionSelector":"8936c143","id":1460,"implemented":true,"kind":"function","modifiers":[],"name":"getAccessibillity","nameLocation":"10440:17:5","nodeType":"FunctionDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"s","nameLocation":"10475:1:5","nodeType":"VariableDeclaration","scope":1460,"src":"10467:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"10467:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"paperId","nameLocation":"10491:7:5","nodeType":"VariableDeclaration","scope":1460,"src":"10486:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint","nodeType":"ElementaryTypeName","src":"10486:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10457:47:5"},"returnParameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1460,"src":"10526:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1450,"name":"bool","nodeType":"ElementaryTypeName","src":"10526:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10525:6:5"},"scope":1541,"src":"10431:150:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1539,"nodeType":"Block","src":"10753:599:5","statements":[{"assignments":[1469],"declarations":[{"constant":false,"id":1469,"mutability":"mutable","name":"paperCount","nameLocation":"10771:10:5","nodeType":"VariableDeclaration","scope":1539,"src":"10763:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"10763:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1471,"initialValue":{"hexValue":"30","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10784:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10763:22:5"},{"body":{"id":1492,"nodeType":"Block","src":"10901:97:5","statements":[{"condition":{"baseExpression":{"baseExpression":{"id":1482,"name":"paperAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10919:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":1484,"indexExpression":{"id":1483,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10933:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10919:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":1486,"indexExpression":{"id":1485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"10939:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10919:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1491,"nodeType":"IfStatement","src":"10915:73:5","trueBody":{"id":1490,"nodeType":"Block","src":"10943:45:5","statements":[{"expression":{"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10961:12:5","subExpression":{"id":1487,"name":"paperCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"10961:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1489,"nodeType":"ExpressionStatement","src":"10961:12:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1476,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"10878:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1477,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"10883:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10878:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1493,"initializationExpression":{"assignments":[1473],"declarations":[{"constant":false,"id":1473,"mutability":"mutable","name":"i","nameLocation":"10871:1:5","nodeType":"VariableDeclaration","scope":1493,"src":"10863:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"10863:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1475,"initialValue":{"hexValue":"31","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10875:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10863:13:5"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10896:3:5","subExpression":{"id":1479,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"10896:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1481,"nodeType":"ExpressionStatement","src":"10896:3:5"},"nodeType":"ForStatement","src":"10858:140:5"},{"assignments":[1498],"declarations":[{"constant":false,"id":1498,"mutability":"mutable","name":"accessedPapers","nameLocation":"11025:14:5","nodeType":"VariableDeclaration","scope":1539,"src":"11008:31:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1497,"nodeType":"ArrayTypeName","src":"11008:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1504,"initialValue":{"arguments":[{"id":1502,"name":"paperCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"11056:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11042:13:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"11046:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1500,"nodeType":"ArrayTypeName","src":"11046:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11042:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11008:59:5"},{"assignments":[1506],"declarations":[{"constant":false,"id":1506,"mutability":"mutable","name":"index","nameLocation":"11085:5:5","nodeType":"VariableDeclaration","scope":1539,"src":"11077:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"11077:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1508,"initialValue":{"hexValue":"30","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11093:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11077:17:5"},{"body":{"id":1535,"nodeType":"Block","src":"11180:135:5","statements":[{"condition":{"baseExpression":{"baseExpression":{"id":1519,"name":"paperAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"11198:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":1521,"indexExpression":{"id":1520,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"11212:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11198:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":1523,"indexExpression":{"id":1522,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"11218:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11198:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1534,"nodeType":"IfStatement","src":"11194:111:5","trueBody":{"id":1533,"nodeType":"Block","src":"11222:83:5","statements":[{"expression":{"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1524,"name":"accessedPapers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"11240:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1526,"indexExpression":{"id":1525,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"11255:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11240:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1527,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"11264:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11240:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1529,"nodeType":"ExpressionStatement","src":"11240:25:5"},{"expression":{"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11283:7:5","subExpression":{"id":1530,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"11283:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1532,"nodeType":"ExpressionStatement","src":"11283:7:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1513,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"11157:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1514,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"11162:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11157:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1536,"initializationExpression":{"assignments":[1510],"declarations":[{"constant":false,"id":1510,"mutability":"mutable","name":"i","nameLocation":"11150:1:5","nodeType":"VariableDeclaration","scope":1536,"src":"11142:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"11142:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1512,"initialValue":{"hexValue":"31","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11154:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"11142:13:5"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11175:3:5","subExpression":{"id":1516,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"11175:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1518,"nodeType":"ExpressionStatement","src":"11175:3:5"},"nodeType":"ForStatement","src":"11137:178:5"},{"expression":{"id":1537,"name":"accessedPapers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"11331:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1467,"id":1538,"nodeType":"Return","src":"11324:21:5"}]},"functionSelector":"7ed4cd87","id":1540,"implemented":true,"kind":"function","modifiers":[],"name":"getPapersAccessedByUser","nameLocation":"10660:23:5","nodeType":"FunctionDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"user","nameLocation":"10701:4:5","nodeType":"VariableDeclaration","scope":1540,"src":"10693:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"10693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10683:28:5"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1540,"src":"10735:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"10735:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1465,"nodeType":"ArrayTypeName","src":"10735:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10734:18:5"},"scope":1541,"src":"10651:701:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1542,"src":"114:11240:5","usedErrors":[],"usedEvents":[877,889,901,909,915]}],"src":"32:11323:5"},"id":5}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MedicalResearch.sol":{"MedicalResearch":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPaperId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPaperId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"contributionIndex","type":"uint256"},{"indexed":true,"internalType":"address","name":"contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"rewardAmount","type":"uint256"}],"name":"ContributionApproved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"paperId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"contributionIndex","type":"uint256"},{"indexed":true,"internalType":"address","name":"contributor","type":"address"},{"indexed":false,"internalType":"string","name":"changesHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"stakeAmount","type":"uint256"}],"name":"ContributionSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"paperId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"feePaid","type":"uint256"}],"name":"PaperAccessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newPaperId","type":"uint256"},{"indexed":false,"internalType":"string","name":"newContentHash","type":"string"}],"name":"PaperUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"paperId","type":"uint256"},{"indexed":true,"internalType":"address","name":"author","type":"address"},{"indexed":false,"internalType":"string","name":"title","type":"string"},{"indexed":false,"internalType":"string","name":"contentHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"accessFee","type":"uint256"},{"indexed":false,"internalType":"string[]","name":"keywords","type":"string[]"}],"name":"PaperUploaded","type":"event"},{"inputs":[{"internalType":"uint256","name":"paperId","type":"uint256"}],"name":"accessPaper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"paperId","type":"uint256"},{"internalType":"uint256","name":"contributionIndex","type":"uint256"}],"name":"approveContribution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"contributions","outputs":[{"internalType":"address","name":"contributor","type":"address"},{"internalType":"string","name":"changesHash","type":"string"},{"internalType":"bool","name":"approved","type":"bool"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"s","type":"address"},{"internalType":"uint256","name":"paperId","type":"uint256"}],"name":"getAccessibillity","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"paperId","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getContributionByIndex","outputs":[{"components":[{"internalType":"address","name":"contributor","type":"address"},{"internalType":"string","name":"changesHash","type":"string"},{"internalType":"bool","name":"approved","type":"bool"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"}],"internalType":"struct MedicalResearch.Contribution","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"getOwnerPaperCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"paperId","type":"uint256"}],"name":"getPaperById","outputs":[{"internalType":"address","name":"author","type":"address"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"contentHash","type":"string"},{"internalType":"uint256","name":"accessFee","type":"uint256"},{"internalType":"string[]","name":"keywords","type":"string[]"},{"internalType":"uint256","name":"parentPaperId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getPaperIdByOwnerAndIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getPapersAccessedByUser","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalPaperCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"ownerPaperCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"ownerPapers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"paperAccessFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"paperAccessed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"paperContributionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"papers","outputs":[{"internalType":"address","name":"author","type":"address"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"contentHash","type":"string"},{"internalType":"uint256","name":"accessFee","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"uint256","name":"parentPaperId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"paperId","type":"uint256"},{"internalType":"string","name":"changesHash","type":"string"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"}],"name":"submitContribution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract ERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"contentHash","type":"string"},{"internalType":"uint256","name":"accessFee","type":"uint256"},{"internalType":"string[]","name":"keywords","type":"string[]"}],"name":"uploadPaper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userContributionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_939":{"entryPoint":null,"id":939,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":232,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":255,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":186,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":154,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":149,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":206,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1199:6","nodeType":"YulBlock","src":"0:1199:6","statements":[{"body":{"nativeSrc":"47:35:6","nodeType":"YulBlock","src":"47:35:6","statements":[{"nativeSrc":"57:19:6","nodeType":"YulAssignment","src":"57:19:6","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:6","nodeType":"YulLiteral","src":"73:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:6","nodeType":"YulIdentifier","src":"67:5:6"},"nativeSrc":"67:9:6","nodeType":"YulFunctionCall","src":"67:9:6"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:6","nodeType":"YulIdentifier","src":"57:6:6"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:6","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:6","nodeType":"YulTypedName","src":"40:6:6","type":""}],"src":"7:75:6"},{"body":{"nativeSrc":"177:28:6","nodeType":"YulBlock","src":"177:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:6","nodeType":"YulLiteral","src":"194:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:6","nodeType":"YulLiteral","src":"197:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:6","nodeType":"YulIdentifier","src":"187:6:6"},"nativeSrc":"187:12:6","nodeType":"YulFunctionCall","src":"187:12:6"},"nativeSrc":"187:12:6","nodeType":"YulExpressionStatement","src":"187:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:6","nodeType":"YulFunctionDefinition","src":"88:117:6"},{"body":{"nativeSrc":"300:28:6","nodeType":"YulBlock","src":"300:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:6","nodeType":"YulLiteral","src":"317:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:6","nodeType":"YulLiteral","src":"320:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:6","nodeType":"YulIdentifier","src":"310:6:6"},"nativeSrc":"310:12:6","nodeType":"YulFunctionCall","src":"310:12:6"},"nativeSrc":"310:12:6","nodeType":"YulExpressionStatement","src":"310:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:6","nodeType":"YulFunctionDefinition","src":"211:117:6"},{"body":{"nativeSrc":"379:81:6","nodeType":"YulBlock","src":"379:81:6","statements":[{"nativeSrc":"389:65:6","nodeType":"YulAssignment","src":"389:65:6","value":{"arguments":[{"name":"value","nativeSrc":"404:5:6","nodeType":"YulIdentifier","src":"404:5:6"},{"kind":"number","nativeSrc":"411:42:6","nodeType":"YulLiteral","src":"411:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:6","nodeType":"YulIdentifier","src":"400:3:6"},"nativeSrc":"400:54:6","nodeType":"YulFunctionCall","src":"400:54:6"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:6","nodeType":"YulIdentifier","src":"389:7:6"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:6","nodeType":"YulTypedName","src":"361:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:6","nodeType":"YulTypedName","src":"371:7:6","type":""}],"src":"334:126:6"},{"body":{"nativeSrc":"511:51:6","nodeType":"YulBlock","src":"511:51:6","statements":[{"nativeSrc":"521:35:6","nodeType":"YulAssignment","src":"521:35:6","value":{"arguments":[{"name":"value","nativeSrc":"550:5:6","nodeType":"YulIdentifier","src":"550:5:6"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:6","nodeType":"YulIdentifier","src":"532:17:6"},"nativeSrc":"532:24:6","nodeType":"YulFunctionCall","src":"532:24:6"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:6","nodeType":"YulIdentifier","src":"521:7:6"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:6","nodeType":"YulTypedName","src":"493:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:6","nodeType":"YulTypedName","src":"503:7:6","type":""}],"src":"466:96:6"},{"body":{"nativeSrc":"611:79:6","nodeType":"YulBlock","src":"611:79:6","statements":[{"body":{"nativeSrc":"668:16:6","nodeType":"YulBlock","src":"668:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:6","nodeType":"YulLiteral","src":"677:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:6","nodeType":"YulLiteral","src":"680:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:6","nodeType":"YulIdentifier","src":"670:6:6"},"nativeSrc":"670:12:6","nodeType":"YulFunctionCall","src":"670:12:6"},"nativeSrc":"670:12:6","nodeType":"YulExpressionStatement","src":"670:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:6","nodeType":"YulIdentifier","src":"634:5:6"},{"arguments":[{"name":"value","nativeSrc":"659:5:6","nodeType":"YulIdentifier","src":"659:5:6"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:6","nodeType":"YulIdentifier","src":"641:17:6"},"nativeSrc":"641:24:6","nodeType":"YulFunctionCall","src":"641:24:6"}],"functionName":{"name":"eq","nativeSrc":"631:2:6","nodeType":"YulIdentifier","src":"631:2:6"},"nativeSrc":"631:35:6","nodeType":"YulFunctionCall","src":"631:35:6"}],"functionName":{"name":"iszero","nativeSrc":"624:6:6","nodeType":"YulIdentifier","src":"624:6:6"},"nativeSrc":"624:43:6","nodeType":"YulFunctionCall","src":"624:43:6"},"nativeSrc":"621:63:6","nodeType":"YulIf","src":"621:63:6"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:6","nodeType":"YulTypedName","src":"604:5:6","type":""}],"src":"568:122:6"},{"body":{"nativeSrc":"759:80:6","nodeType":"YulBlock","src":"759:80:6","statements":[{"nativeSrc":"769:22:6","nodeType":"YulAssignment","src":"769:22:6","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:6","nodeType":"YulIdentifier","src":"784:6:6"}],"functionName":{"name":"mload","nativeSrc":"778:5:6","nodeType":"YulIdentifier","src":"778:5:6"},"nativeSrc":"778:13:6","nodeType":"YulFunctionCall","src":"778:13:6"},"variableNames":[{"name":"value","nativeSrc":"769:5:6","nodeType":"YulIdentifier","src":"769:5:6"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:6","nodeType":"YulIdentifier","src":"827:5:6"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:6","nodeType":"YulIdentifier","src":"800:26:6"},"nativeSrc":"800:33:6","nodeType":"YulFunctionCall","src":"800:33:6"},"nativeSrc":"800:33:6","nodeType":"YulExpressionStatement","src":"800:33:6"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:6","nodeType":"YulTypedName","src":"737:6:6","type":""},{"name":"end","nativeSrc":"745:3:6","nodeType":"YulTypedName","src":"745:3:6","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:6","nodeType":"YulTypedName","src":"753:5:6","type":""}],"src":"696:143:6"},{"body":{"nativeSrc":"922:274:6","nodeType":"YulBlock","src":"922:274:6","statements":[{"body":{"nativeSrc":"968:83:6","nodeType":"YulBlock","src":"968:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"970:77:6","nodeType":"YulIdentifier","src":"970:77:6"},"nativeSrc":"970:79:6","nodeType":"YulFunctionCall","src":"970:79:6"},"nativeSrc":"970:79:6","nodeType":"YulExpressionStatement","src":"970:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"943:7:6","nodeType":"YulIdentifier","src":"943:7:6"},{"name":"headStart","nativeSrc":"952:9:6","nodeType":"YulIdentifier","src":"952:9:6"}],"functionName":{"name":"sub","nativeSrc":"939:3:6","nodeType":"YulIdentifier","src":"939:3:6"},"nativeSrc":"939:23:6","nodeType":"YulFunctionCall","src":"939:23:6"},{"kind":"number","nativeSrc":"964:2:6","nodeType":"YulLiteral","src":"964:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"935:3:6","nodeType":"YulIdentifier","src":"935:3:6"},"nativeSrc":"935:32:6","nodeType":"YulFunctionCall","src":"935:32:6"},"nativeSrc":"932:119:6","nodeType":"YulIf","src":"932:119:6"},{"nativeSrc":"1061:128:6","nodeType":"YulBlock","src":"1061:128:6","statements":[{"nativeSrc":"1076:15:6","nodeType":"YulVariableDeclaration","src":"1076:15:6","value":{"kind":"number","nativeSrc":"1090:1:6","nodeType":"YulLiteral","src":"1090:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1080:6:6","nodeType":"YulTypedName","src":"1080:6:6","type":""}]},{"nativeSrc":"1105:74:6","nodeType":"YulAssignment","src":"1105:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1151:9:6","nodeType":"YulIdentifier","src":"1151:9:6"},{"name":"offset","nativeSrc":"1162:6:6","nodeType":"YulIdentifier","src":"1162:6:6"}],"functionName":{"name":"add","nativeSrc":"1147:3:6","nodeType":"YulIdentifier","src":"1147:3:6"},"nativeSrc":"1147:22:6","nodeType":"YulFunctionCall","src":"1147:22:6"},{"name":"dataEnd","nativeSrc":"1171:7:6","nodeType":"YulIdentifier","src":"1171:7:6"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1115:31:6","nodeType":"YulIdentifier","src":"1115:31:6"},"nativeSrc":"1115:64:6","nodeType":"YulFunctionCall","src":"1115:64:6"},"variableNames":[{"name":"value0","nativeSrc":"1105:6:6","nodeType":"YulIdentifier","src":"1105:6:6"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"845:351:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"892:9:6","nodeType":"YulTypedName","src":"892:9:6","type":""},{"name":"dataEnd","nativeSrc":"903:7:6","nodeType":"YulTypedName","src":"903:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"915:6:6","nodeType":"YulTypedName","src":"915:6:6","type":""}],"src":"845:351:6"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x38F5 CODESIZE SUB DUP1 PUSH3 0x38F5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xFF JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH3 0x131 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC7 DUP3 PUSH3 0x9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xD9 DUP2 PUSH3 0xBA JUMP JUMPDEST DUP2 EQ PUSH3 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xF9 DUP2 PUSH3 0xCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x118 JUMPI PUSH3 0x117 PUSH3 0x95 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x128 DUP5 DUP3 DUP6 ADD PUSH3 0xE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x37B4 DUP1 PUSH3 0x141 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA1C74BE5 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xDF771ACA GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDF771ACA EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xE9436A28 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xF1857F36 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xF690AB2F EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x46C JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xA1C74BE5 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xA949DFDF EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xAA4A66DD EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xAD965AE6 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xDC740FA8 EQ PUSH2 0x390 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x77154FDE GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x77154FDE EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x7ED4CD87 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x830E28F6 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x87F0C8AC EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x8936C143 EQ PUSH2 0x2DA JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x159F3927 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x218ACE50 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x3E0B7810 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x5E775A27 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x6FD91DA9 EQ PUSH2 0x1FB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x2471 JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x25DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x2471 JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x2471 JUMP JUMPDEST PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2939 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x175D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x2985 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x2BBB JUMP JUMPDEST PUSH2 0x17C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH2 0x1AEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37A PUSH2 0x1E04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x1E57 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH2 0x21B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x426 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x2985 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x456 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x451 SWAP2 SWAP1 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x21FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x474 PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x2D44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 LT PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP1 PUSH2 0x2DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x56E PUSH2 0x2245 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 LT PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BA SWAP1 PUSH2 0x2DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x658 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x684 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76C SWAP1 PUSH2 0x2E77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x7FB SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x827 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x874 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x849 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x874 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x857 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x88D SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B9 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x906 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x906 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x9EA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x95D SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x989 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x93E JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xA96 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAC2 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB0F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAE4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB0F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAF2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xB24 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB50 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB9D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB72 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB9D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB80 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC20 SWAP1 PUSH2 0x2E77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC4 SWAP1 PUSH2 0x2F09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 LT PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD19 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8E SWAP1 PUSH2 0x2FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0xA PUSH1 0x7 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x3030 JUMP JUMPDEST PUSH2 0xDED SWAP2 SWAP1 PUSH2 0x30A1 JUMP JUMPDEST DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0xDFC SWAP2 SWAP1 PUSH2 0x30D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7D SWAP3 SWAP2 SWAP1 PUSH2 0x3106 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x315B JUMP JUMPDEST PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP1 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF19 SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xF66 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF92 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFDF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFB4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFDF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFC2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xFF8 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1024 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1071 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1046 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1071 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1054 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1179 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x10EC SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1118 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1165 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x113A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1165 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1148 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x10CD JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x11FE SWAP2 SWAP1 PUSH2 0x33DE JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1214 SWAP2 SWAP1 PUSH2 0x33DE JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x123B SWAP3 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x134D SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 DUP4 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B0FC1DFDFECA1D7E9D6E25A76602E33ED913671DB0F6AAE33735EB74B66107 DUP7 DUP4 DUP8 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1448 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH32 0xB97425B8EC45AA7C5CCC9B938659EB11B5502276F1EEC240E61BAF207824396C DUP2 DUP5 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x1484 SWAP3 SWAP2 SWAP1 PUSH2 0x3579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT PUSH2 0x1543 JUMPI PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1530 JUMPI DUP2 DUP1 PUSH2 0x152C SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x153B SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14B5 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1560 JUMPI PUSH2 0x155F PUSH2 0x29AA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x158E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT PUSH2 0x1647 JUMPI PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1634 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1619 JUMPI PUSH2 0x1618 PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1630 SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x163F SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1599 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x16A9 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16D5 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1722 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1722 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1705 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x17DF SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x18A0 SWAP2 SWAP1 PUSH2 0x33DE JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x18B6 SWAP2 SWAP1 PUSH2 0x33DE JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x18DD SWAP3 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x19EF SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A07 SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x56EEAA024974E3268B1CDCEEF36BAEF0F1C89CE1F09AFA010857B95D4AED2586 DUP3 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1AC3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1B4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B44 SWAP1 PUSH2 0x2E77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BAA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3640 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BED SWAP2 SWAP1 PUSH2 0x315B JUMP JUMPDEST PUSH2 0x1C2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C23 SWAP1 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1C68 SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1D27 SWAP2 SWAP1 PUSH2 0x33DE JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA5 SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE17C01AF799C5069ECF6FD9A231440A115ADB7A1DEA0306B06D8EFE971A1A0B0 DUP6 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1DF6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1EBA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EB1 SWAP1 PUSH2 0x2E77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1F58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4F SWAP1 PUSH2 0x3735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x20E3 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2020 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3640 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x203F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2063 SWAP2 SWAP1 PUSH2 0x315B JUMP JUMPDEST PUSH2 0x20A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2099 SWAP1 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20DB SWAP2 SWAP1 PUSH2 0x30D2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1442BDB26F7569DB0CB308056CB26688F7AAD42FC098B54920E1AF1E8B67A5FC DUP3 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x21AA SWAP3 SWAP2 SWAP1 PUSH2 0x3755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x22CD JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x22CC JUMPI DUP3 MLOAD DUP3 SWAP1 DUP2 PUSH2 0x22BC SWAP2 SWAP1 PUSH2 0x33DE JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x22A5 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x22DA SWAP2 SWAP1 PUSH2 0x22DE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x22FE JUMPI PUSH1 0x0 DUP2 DUP2 PUSH2 0x22F5 SWAP2 SWAP1 PUSH2 0x2302 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x22DF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x230E SWAP1 PUSH2 0x2DFA JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2320 JUMPI POP PUSH2 0x233F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x233E SWAP2 SWAP1 PUSH2 0x2342 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x235B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2343 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239E DUP3 PUSH2 0x2373 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23AE DUP2 PUSH2 0x2393 JUMP JUMPDEST DUP2 EQ PUSH2 0x23B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23CB DUP2 PUSH2 0x23A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E4 DUP2 PUSH2 0x23D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x23EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2401 DUP2 PUSH2 0x23DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x241E JUMPI PUSH2 0x241D PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x242C DUP6 DUP3 DUP7 ADD PUSH2 0x23BC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x243D DUP6 DUP3 DUP7 ADD PUSH2 0x23F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2450 DUP2 PUSH2 0x23D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x246B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2488 JUMPI PUSH2 0x2487 PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2496 DUP6 DUP3 DUP7 ADD PUSH2 0x23F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24A7 DUP6 DUP3 DUP7 ADD PUSH2 0x23F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x24BA DUP2 PUSH2 0x2393 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24FA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24DF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2522 DUP3 PUSH2 0x24C0 JUMP JUMPDEST PUSH2 0x252C DUP2 DUP6 PUSH2 0x24CB JUMP JUMPDEST SWAP4 POP PUSH2 0x253C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24DC JUMP JUMPDEST PUSH2 0x2545 DUP2 PUSH2 0x2506 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2565 DUP2 PUSH2 0x2550 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2574 DUP2 PUSH2 0x23D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2592 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x24B1 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x25AA DUP3 DUP3 PUSH2 0x2517 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x25BF PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x255C JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x25D2 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x256B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25F7 DUP2 DUP5 PUSH2 0x257A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2615 JUMPI PUSH2 0x2614 PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2623 DUP5 DUP3 DUP6 ADD PUSH2 0x23F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2635 DUP2 PUSH2 0x2393 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2657 DUP3 PUSH2 0x24C0 JUMP JUMPDEST PUSH2 0x2661 DUP2 DUP6 PUSH2 0x263B JUMP JUMPDEST SWAP4 POP PUSH2 0x2671 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24DC JUMP JUMPDEST PUSH2 0x267A DUP2 PUSH2 0x2506 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26BD DUP4 DUP4 PUSH2 0x2517 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26DD DUP3 PUSH2 0x2685 JUMP JUMPDEST PUSH2 0x26E7 DUP2 DUP6 PUSH2 0x2690 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x26F9 DUP6 PUSH2 0x26A1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2735 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x2716 DUP6 DUP3 PUSH2 0x26B1 JUMP JUMPDEST SWAP5 POP PUSH2 0x2721 DUP4 PUSH2 0x26C5 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26FD JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x275C PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x262C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x276E DUP2 DUP9 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2782 DUP2 DUP8 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP PUSH2 0x2791 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2447 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x27A3 DUP2 DUP6 PUSH2 0x26D2 JUMP JUMPDEST SWAP1 POP PUSH2 0x27B2 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x27C6 DUP2 PUSH2 0x2550 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x27E1 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x262C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x27F3 DUP2 DUP9 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2807 DUP2 DUP8 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP PUSH2 0x2816 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x2823 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x27BD JUMP JUMPDEST PUSH2 0x2830 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2851 JUMPI PUSH2 0x2850 PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x285F DUP5 DUP3 DUP6 ADD PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28A0 DUP4 DUP4 PUSH2 0x256B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28C4 DUP3 PUSH2 0x2868 JUMP JUMPDEST PUSH2 0x28CE DUP2 DUP6 PUSH2 0x2873 JUMP JUMPDEST SWAP4 POP PUSH2 0x28D9 DUP4 PUSH2 0x2884 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x290A JUMPI DUP2 MLOAD PUSH2 0x28F1 DUP9 DUP3 PUSH2 0x2894 JUMP JUMPDEST SWAP8 POP PUSH2 0x28FC DUP4 PUSH2 0x28AC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x28DD JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2931 DUP2 DUP5 PUSH2 0x28B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x294E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x262C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2960 DUP2 DUP7 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP PUSH2 0x296F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x27BD JUMP JUMPDEST PUSH2 0x297C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x299A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x29E2 DUP3 PUSH2 0x2506 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A01 JUMPI PUSH2 0x2A00 PUSH2 0x29AA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A14 PUSH2 0x235F JUMP JUMPDEST SWAP1 POP PUSH2 0x2A20 DUP3 DUP3 PUSH2 0x29D9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A40 JUMPI PUSH2 0x2A3F PUSH2 0x29AA JUMP JUMPDEST JUMPDEST PUSH2 0x2A49 DUP3 PUSH2 0x2506 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A78 PUSH2 0x2A73 DUP5 PUSH2 0x2A25 JUMP JUMPDEST PUSH2 0x2A0A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2A94 JUMPI PUSH2 0x2A93 PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST PUSH2 0x2A9F DUP5 DUP3 DUP6 PUSH2 0x2A56 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2ABC JUMPI PUSH2 0x2ABB PUSH2 0x29A0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2ACC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2AF0 JUMPI PUSH2 0x2AEF PUSH2 0x29AA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B19 PUSH2 0x2B14 DUP5 PUSH2 0x2AD5 JUMP JUMPDEST PUSH2 0x2A0A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2B3C JUMPI PUSH2 0x2B3B PUSH2 0x2B01 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B83 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B61 JUMPI PUSH2 0x2B60 PUSH2 0x29A0 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x2B6E DUP10 DUP3 PUSH2 0x2AA7 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B3E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2BA2 JUMPI PUSH2 0x2BA1 PUSH2 0x29A0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2BB2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2B06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2BD5 JUMPI PUSH2 0x2BD4 PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BF3 JUMPI PUSH2 0x2BF2 PUSH2 0x236E JUMP JUMPDEST JUMPDEST PUSH2 0x2BFF DUP8 DUP3 DUP9 ADD PUSH2 0x2AA7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C20 JUMPI PUSH2 0x2C1F PUSH2 0x236E JUMP JUMPDEST JUMPDEST PUSH2 0x2C2C DUP8 DUP3 DUP9 ADD PUSH2 0x2AA7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2C3D DUP8 DUP3 DUP9 ADD PUSH2 0x23F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C5E JUMPI PUSH2 0x2C5D PUSH2 0x236E JUMP JUMPDEST JUMPDEST PUSH2 0x2C6A DUP8 DUP3 DUP9 ADD PUSH2 0x2B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C8F JUMPI PUSH2 0x2C8E PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C9D DUP7 DUP3 DUP8 ADD PUSH2 0x23F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CBE JUMPI PUSH2 0x2CBD PUSH2 0x236E JUMP JUMPDEST JUMPDEST PUSH2 0x2CCA DUP7 DUP3 DUP8 ADD PUSH2 0x2AA7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2CDB DUP7 DUP3 DUP8 ADD PUSH2 0x23F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D0A PUSH2 0x2D05 PUSH2 0x2D00 DUP5 PUSH2 0x2373 JUMP JUMPDEST PUSH2 0x2CE5 JUMP JUMPDEST PUSH2 0x2373 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1C DUP3 PUSH2 0x2CEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D2E DUP3 PUSH2 0x2D11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D3E DUP2 PUSH2 0x2D23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D59 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E646578206F7574206F6620626F756E647300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D95 PUSH1 0x13 DUP4 PUSH2 0x263B JUMP JUMPDEST SWAP2 POP PUSH2 0x2DA0 DUP3 PUSH2 0x2D5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DC4 DUP2 PUSH2 0x2D88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E12 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E25 JUMPI PUSH2 0x2E24 PUSH2 0x2DCB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506170657220646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E61 PUSH1 0x14 DUP4 PUSH2 0x263B JUMP JUMPDEST SWAP2 POP PUSH2 0x2E6C DUP3 PUSH2 0x2E2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E90 DUP2 PUSH2 0x2E54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792074686520617574686F722063616E20617070726F766520636F6E74 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7269627574696F6E730000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF3 PUSH1 0x29 DUP4 PUSH2 0x263B JUMP JUMPDEST SWAP2 POP PUSH2 0x2EFE DUP3 PUSH2 0x2E97 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F22 DUP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F6E747269627574696F6E20696E646578000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F5F PUSH1 0x1A DUP4 PUSH2 0x263B JUMP JUMPDEST SWAP2 POP PUSH2 0x2F6A DUP3 PUSH2 0x2F29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F8E DUP2 PUSH2 0x2F52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E747269627574696F6E20616C726561647920617070726F766564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FCB PUSH1 0x1D DUP4 PUSH2 0x263B JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD6 DUP3 PUSH2 0x2F95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FFA DUP2 PUSH2 0x2FBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x303B DUP3 PUSH2 0x23D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3046 DUP4 PUSH2 0x23D1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3054 DUP2 PUSH2 0x23D1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x306B JUMPI PUSH2 0x306A PUSH2 0x3001 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30AC DUP3 PUSH2 0x23D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x30B7 DUP4 PUSH2 0x23D1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x30C7 JUMPI PUSH2 0x30C6 PUSH2 0x3072 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30DD DUP3 PUSH2 0x23D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x30E8 DUP4 PUSH2 0x23D1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3100 JUMPI PUSH2 0x30FF PUSH2 0x3001 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x311B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x3128 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3138 DUP2 PUSH2 0x2550 JUMP JUMPDEST DUP2 EQ PUSH2 0x3143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3155 DUP2 PUSH2 0x312F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3171 JUMPI PUSH2 0x3170 PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x317F DUP5 DUP3 DUP6 ADD PUSH2 0x3146 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31BE PUSH1 0x15 DUP4 PUSH2 0x263B JUMP JUMPDEST SWAP2 POP PUSH2 0x31C9 DUP3 PUSH2 0x3188 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31ED DUP2 PUSH2 0x31B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31FF DUP3 PUSH2 0x23D1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3231 JUMPI PUSH2 0x3230 PUSH2 0x3001 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x329E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3261 JUMP JUMPDEST PUSH2 0x32A8 DUP7 DUP4 PUSH2 0x3261 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32DB PUSH2 0x32D6 PUSH2 0x32D1 DUP5 PUSH2 0x23D1 JUMP JUMPDEST PUSH2 0x2CE5 JUMP JUMPDEST PUSH2 0x23D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F5 DUP4 PUSH2 0x32C0 JUMP JUMPDEST PUSH2 0x3309 PUSH2 0x3301 DUP3 PUSH2 0x32E2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x326E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x331E PUSH2 0x3311 JUMP JUMPDEST PUSH2 0x3329 DUP2 DUP5 DUP5 PUSH2 0x32EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x334D JUMPI PUSH2 0x3342 PUSH1 0x0 DUP3 PUSH2 0x3316 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x332F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3392 JUMPI PUSH2 0x3363 DUP2 PUSH2 0x323C JUMP JUMPDEST PUSH2 0x336C DUP5 PUSH2 0x3251 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x337B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x338F PUSH2 0x3387 DUP6 PUSH2 0x3251 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x332E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33B5 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3397 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33CE DUP4 DUP4 PUSH2 0x33A4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33E7 DUP3 PUSH2 0x24C0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3400 JUMPI PUSH2 0x33FF PUSH2 0x29AA JUMP JUMPDEST JUMPDEST PUSH2 0x340A DUP3 SLOAD PUSH2 0x2DFA JUMP JUMPDEST PUSH2 0x3415 DUP3 DUP3 DUP6 PUSH2 0x3351 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3448 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3436 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3440 DUP6 DUP3 PUSH2 0x33C2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x34A8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3456 DUP7 PUSH2 0x323C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x347E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3459 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x349B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3497 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x33A4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x34C5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x34D2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x34DF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x34EC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3502 DUP2 PUSH2 0x2DFA JUMP JUMPDEST PUSH2 0x350C DUP2 DUP7 PUSH2 0x263B JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3527 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x353D JUMPI PUSH2 0x3570 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x3570 JUMP JUMPDEST PUSH2 0x3546 DUP6 PUSH2 0x323C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3568 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3549 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x358E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2447 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x35A0 DUP2 DUP5 PUSH2 0x34F5 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x35ED PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2447 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x35FF DUP2 DUP8 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3613 DUP2 DUP7 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP PUSH2 0x3622 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2447 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3634 DUP2 DUP5 PUSH2 0x26D2 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3655 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x3662 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x366F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x368C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x3699 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2447 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x36AB DUP2 DUP6 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP PUSH2 0x36BA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5573657220616C7265616479206861732061636365737320746F207468697320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7061706572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x371F PUSH1 0x25 DUP4 PUSH2 0x263B JUMP JUMPDEST SWAP2 POP PUSH2 0x372A DUP3 PUSH2 0x36C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x374E DUP2 PUSH2 0x3712 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x376A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x3777 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xB5 DUP14 PUSH15 0xD1092D1957E5C6A9A3F997E58DF36A DUP13 SWAP11 SWAP12 PUSH18 0x6B228F7C726A7B98ED64736F6C6343000818 STOP CALLER ","sourceMap":"114:11240:5:-:0;;;3235:232;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3294:13;3280:5;;:28;;;;;;;;;;;;;;;;;;3332:1;3318:11;:15;;;;3393:1;3369:21;:25;;;;3459:1;3441:15;:19;;;;3235:232;114:11240;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;114:11240:5:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@accessPaper_1092":{"entryPoint":7767,"id":1092,"parameterSlots":1,"returnSlots":0},"@approveContribution_1325":{"entryPoint":3014,"id":1325,"parameterSlots":2,"returnSlots":0},"@contributions_834":{"entryPoint":5715,"id":834,"parameterSlots":0,"returnSlots":0},"@getAccessibillity_1460":{"entryPoint":5981,"id":1460,"parameterSlots":2,"returnSlots":1},"@getContributionByIndex_1388":{"entryPoint":1382,"id":1388,"parameterSlots":2,"returnSlots":1},"@getOwnerPaperCount_1337":{"entryPoint":7694,"id":1337,"parameterSlots":1,"returnSlots":1},"@getPaperById_1436":{"entryPoint":1799,"id":1436,"parameterSlots":1,"returnSlots":6},"@getPaperIdByOwnerAndIndex_1362":{"entryPoint":1162,"id":1362,"parameterSlots":2,"returnSlots":1},"@getPapersAccessedByUser_1540":{"entryPoint":5291,"id":1540,"parameterSlots":1,"returnSlots":1},"@getTotalPaperCount_1444":{"entryPoint":7684,"id":1444,"parameterSlots":0,"returnSlots":1},"@ownerPaperCount_862":{"entryPoint":8629,"id":862,"parameterSlots":0,"returnSlots":0},"@ownerPapers_858":{"entryPoint":8700,"id":858,"parameterSlots":0,"returnSlots":0},"@paperAccessFees_842":{"entryPoint":6866,"id":842,"parameterSlots":0,"returnSlots":0},"@paperAccessed_848":{"entryPoint":8653,"id":848,"parameterSlots":0,"returnSlots":0},"@paperContributionCount_838":{"entryPoint":5957,"id":838,"parameterSlots":0,"returnSlots":0},"@papers_827":{"entryPoint":2637,"id":827,"parameterSlots":0,"returnSlots":0},"@submitContribution_1164":{"entryPoint":6890,"id":1164,"parameterSlots":3,"returnSlots":0},"@token_791":{"entryPoint":8737,"id":791,"parameterSlots":0,"returnSlots":0},"@uploadPaper_1014":{"entryPoint":6085,"id":1014,"parameterSlots":4,"returnSlots":0},"@userContributionCount_852":{"entryPoint":5267,"id":852,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":11014,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":10853,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":9148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":11149,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":12614,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":10919,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9202,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10299,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9223,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":12635,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":11195,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":9727,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256":{"entryPoint":11382,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":9329,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":9905,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":10388,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":9393,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9772,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":9938,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":10425,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":9564,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10173,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack":{"entryPoint":11573,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":9495,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":9804,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack":{"entryPoint":13557,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf_to_t_string_memory_ptr_fromStack":{"entryPoint":11860,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924_to_t_string_memory_ptr_fromStack":{"entryPoint":14098,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack":{"entryPoint":12721,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1_to_t_string_memory_ptr_fromStack":{"entryPoint":12006,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack":{"entryPoint":11656,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340_to_t_string_memory_ptr_fromStack":{"entryPoint":12114,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20_to_t_string_memory_ptr_fromStack":{"entryPoint":12222,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Contribution_$816_memory_ptr_to_t_struct$_Contribution_$816_memory_ptr_fromStack":{"entryPoint":9594,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":9579,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":9287,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":13888,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_string_memory_ptr_t_bool_t_uint256__to_t_address_t_string_memory_ptr_t_bool_t_uint256__fromStack_reversed":{"entryPoint":10553,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":10055,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_uint256__fromStack_reversed":{"entryPoint":10188,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":12550,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":10629,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed":{"entryPoint":11588,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11895,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14133,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12756,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12041,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11691,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12149,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12257,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Contribution_$816_memory_ptr__to_t_struct$_Contribution_$816_memory_ptr__fromStack_reversed":{"entryPoint":9693,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":9302,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13784,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_storage__to_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13689,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14165,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":13943,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13488,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":10762,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":9055,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":10965,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":10789,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":9889,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10372,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":12860,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":9861,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10344,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":9408,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":9925,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10412,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":9872,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":10355,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":9419,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9787,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12498,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":12449,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":12336,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":13137,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":9107,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9552,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9075,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":9169,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":13102,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_contract$_ERC20_$651_to_t_address":{"entryPoint":11555,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":11537,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":11503,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":12992,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":13278,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":10838,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":9436,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":12881,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":11770,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":13250,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":10713,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":11493,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":12788,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":13220,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":12289,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":12402,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":11723,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13737,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10666,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":13026,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":10656,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":11009,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":10661,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9070,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9065,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9478,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":12897,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":13207,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":13078,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf":{"entryPoint":11819,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924":{"entryPoint":14019,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4":{"entryPoint":12680,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1":{"entryPoint":11927,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367":{"entryPoint":11615,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340":{"entryPoint":12073,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20":{"entryPoint":12181,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":12910,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":13036,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9125,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":12591,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9179,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":13073,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:39167:6","nodeType":"YulBlock","src":"0:39167:6","statements":[{"body":{"nativeSrc":"47:35:6","nodeType":"YulBlock","src":"47:35:6","statements":[{"nativeSrc":"57:19:6","nodeType":"YulAssignment","src":"57:19:6","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:6","nodeType":"YulLiteral","src":"73:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:6","nodeType":"YulIdentifier","src":"67:5:6"},"nativeSrc":"67:9:6","nodeType":"YulFunctionCall","src":"67:9:6"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:6","nodeType":"YulIdentifier","src":"57:6:6"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:6","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:6","nodeType":"YulTypedName","src":"40:6:6","type":""}],"src":"7:75:6"},{"body":{"nativeSrc":"177:28:6","nodeType":"YulBlock","src":"177:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:6","nodeType":"YulLiteral","src":"194:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:6","nodeType":"YulLiteral","src":"197:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:6","nodeType":"YulIdentifier","src":"187:6:6"},"nativeSrc":"187:12:6","nodeType":"YulFunctionCall","src":"187:12:6"},"nativeSrc":"187:12:6","nodeType":"YulExpressionStatement","src":"187:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:6","nodeType":"YulFunctionDefinition","src":"88:117:6"},{"body":{"nativeSrc":"300:28:6","nodeType":"YulBlock","src":"300:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:6","nodeType":"YulLiteral","src":"317:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:6","nodeType":"YulLiteral","src":"320:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:6","nodeType":"YulIdentifier","src":"310:6:6"},"nativeSrc":"310:12:6","nodeType":"YulFunctionCall","src":"310:12:6"},"nativeSrc":"310:12:6","nodeType":"YulExpressionStatement","src":"310:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:6","nodeType":"YulFunctionDefinition","src":"211:117:6"},{"body":{"nativeSrc":"379:81:6","nodeType":"YulBlock","src":"379:81:6","statements":[{"nativeSrc":"389:65:6","nodeType":"YulAssignment","src":"389:65:6","value":{"arguments":[{"name":"value","nativeSrc":"404:5:6","nodeType":"YulIdentifier","src":"404:5:6"},{"kind":"number","nativeSrc":"411:42:6","nodeType":"YulLiteral","src":"411:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:6","nodeType":"YulIdentifier","src":"400:3:6"},"nativeSrc":"400:54:6","nodeType":"YulFunctionCall","src":"400:54:6"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:6","nodeType":"YulIdentifier","src":"389:7:6"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:6","nodeType":"YulTypedName","src":"361:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:6","nodeType":"YulTypedName","src":"371:7:6","type":""}],"src":"334:126:6"},{"body":{"nativeSrc":"511:51:6","nodeType":"YulBlock","src":"511:51:6","statements":[{"nativeSrc":"521:35:6","nodeType":"YulAssignment","src":"521:35:6","value":{"arguments":[{"name":"value","nativeSrc":"550:5:6","nodeType":"YulIdentifier","src":"550:5:6"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:6","nodeType":"YulIdentifier","src":"532:17:6"},"nativeSrc":"532:24:6","nodeType":"YulFunctionCall","src":"532:24:6"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:6","nodeType":"YulIdentifier","src":"521:7:6"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:6","nodeType":"YulTypedName","src":"493:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:6","nodeType":"YulTypedName","src":"503:7:6","type":""}],"src":"466:96:6"},{"body":{"nativeSrc":"611:79:6","nodeType":"YulBlock","src":"611:79:6","statements":[{"body":{"nativeSrc":"668:16:6","nodeType":"YulBlock","src":"668:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:6","nodeType":"YulLiteral","src":"677:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:6","nodeType":"YulLiteral","src":"680:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:6","nodeType":"YulIdentifier","src":"670:6:6"},"nativeSrc":"670:12:6","nodeType":"YulFunctionCall","src":"670:12:6"},"nativeSrc":"670:12:6","nodeType":"YulExpressionStatement","src":"670:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:6","nodeType":"YulIdentifier","src":"634:5:6"},{"arguments":[{"name":"value","nativeSrc":"659:5:6","nodeType":"YulIdentifier","src":"659:5:6"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:6","nodeType":"YulIdentifier","src":"641:17:6"},"nativeSrc":"641:24:6","nodeType":"YulFunctionCall","src":"641:24:6"}],"functionName":{"name":"eq","nativeSrc":"631:2:6","nodeType":"YulIdentifier","src":"631:2:6"},"nativeSrc":"631:35:6","nodeType":"YulFunctionCall","src":"631:35:6"}],"functionName":{"name":"iszero","nativeSrc":"624:6:6","nodeType":"YulIdentifier","src":"624:6:6"},"nativeSrc":"624:43:6","nodeType":"YulFunctionCall","src":"624:43:6"},"nativeSrc":"621:63:6","nodeType":"YulIf","src":"621:63:6"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:6","nodeType":"YulTypedName","src":"604:5:6","type":""}],"src":"568:122:6"},{"body":{"nativeSrc":"748:87:6","nodeType":"YulBlock","src":"748:87:6","statements":[{"nativeSrc":"758:29:6","nodeType":"YulAssignment","src":"758:29:6","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:6","nodeType":"YulIdentifier","src":"780:6:6"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:6","nodeType":"YulIdentifier","src":"767:12:6"},"nativeSrc":"767:20:6","nodeType":"YulFunctionCall","src":"767:20:6"},"variableNames":[{"name":"value","nativeSrc":"758:5:6","nodeType":"YulIdentifier","src":"758:5:6"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:6","nodeType":"YulIdentifier","src":"823:5:6"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:6","nodeType":"YulIdentifier","src":"796:26:6"},"nativeSrc":"796:33:6","nodeType":"YulFunctionCall","src":"796:33:6"},"nativeSrc":"796:33:6","nodeType":"YulExpressionStatement","src":"796:33:6"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:6","nodeType":"YulTypedName","src":"726:6:6","type":""},{"name":"end","nativeSrc":"734:3:6","nodeType":"YulTypedName","src":"734:3:6","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:6","nodeType":"YulTypedName","src":"742:5:6","type":""}],"src":"696:139:6"},{"body":{"nativeSrc":"886:32:6","nodeType":"YulBlock","src":"886:32:6","statements":[{"nativeSrc":"896:16:6","nodeType":"YulAssignment","src":"896:16:6","value":{"name":"value","nativeSrc":"907:5:6","nodeType":"YulIdentifier","src":"907:5:6"},"variableNames":[{"name":"cleaned","nativeSrc":"896:7:6","nodeType":"YulIdentifier","src":"896:7:6"}]}]},"name":"cleanup_t_uint256","nativeSrc":"841:77:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"868:5:6","nodeType":"YulTypedName","src":"868:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"878:7:6","nodeType":"YulTypedName","src":"878:7:6","type":""}],"src":"841:77:6"},{"body":{"nativeSrc":"967:79:6","nodeType":"YulBlock","src":"967:79:6","statements":[{"body":{"nativeSrc":"1024:16:6","nodeType":"YulBlock","src":"1024:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1033:1:6","nodeType":"YulLiteral","src":"1033:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"1036:1:6","nodeType":"YulLiteral","src":"1036:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1026:6:6","nodeType":"YulIdentifier","src":"1026:6:6"},"nativeSrc":"1026:12:6","nodeType":"YulFunctionCall","src":"1026:12:6"},"nativeSrc":"1026:12:6","nodeType":"YulExpressionStatement","src":"1026:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"990:5:6","nodeType":"YulIdentifier","src":"990:5:6"},{"arguments":[{"name":"value","nativeSrc":"1015:5:6","nodeType":"YulIdentifier","src":"1015:5:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"997:17:6","nodeType":"YulIdentifier","src":"997:17:6"},"nativeSrc":"997:24:6","nodeType":"YulFunctionCall","src":"997:24:6"}],"functionName":{"name":"eq","nativeSrc":"987:2:6","nodeType":"YulIdentifier","src":"987:2:6"},"nativeSrc":"987:35:6","nodeType":"YulFunctionCall","src":"987:35:6"}],"functionName":{"name":"iszero","nativeSrc":"980:6:6","nodeType":"YulIdentifier","src":"980:6:6"},"nativeSrc":"980:43:6","nodeType":"YulFunctionCall","src":"980:43:6"},"nativeSrc":"977:63:6","nodeType":"YulIf","src":"977:63:6"}]},"name":"validator_revert_t_uint256","nativeSrc":"924:122:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"960:5:6","nodeType":"YulTypedName","src":"960:5:6","type":""}],"src":"924:122:6"},{"body":{"nativeSrc":"1104:87:6","nodeType":"YulBlock","src":"1104:87:6","statements":[{"nativeSrc":"1114:29:6","nodeType":"YulAssignment","src":"1114:29:6","value":{"arguments":[{"name":"offset","nativeSrc":"1136:6:6","nodeType":"YulIdentifier","src":"1136:6:6"}],"functionName":{"name":"calldataload","nativeSrc":"1123:12:6","nodeType":"YulIdentifier","src":"1123:12:6"},"nativeSrc":"1123:20:6","nodeType":"YulFunctionCall","src":"1123:20:6"},"variableNames":[{"name":"value","nativeSrc":"1114:5:6","nodeType":"YulIdentifier","src":"1114:5:6"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1179:5:6","nodeType":"YulIdentifier","src":"1179:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1152:26:6","nodeType":"YulIdentifier","src":"1152:26:6"},"nativeSrc":"1152:33:6","nodeType":"YulFunctionCall","src":"1152:33:6"},"nativeSrc":"1152:33:6","nodeType":"YulExpressionStatement","src":"1152:33:6"}]},"name":"abi_decode_t_uint256","nativeSrc":"1052:139:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1082:6:6","nodeType":"YulTypedName","src":"1082:6:6","type":""},{"name":"end","nativeSrc":"1090:3:6","nodeType":"YulTypedName","src":"1090:3:6","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1098:5:6","nodeType":"YulTypedName","src":"1098:5:6","type":""}],"src":"1052:139:6"},{"body":{"nativeSrc":"1280:391:6","nodeType":"YulBlock","src":"1280:391:6","statements":[{"body":{"nativeSrc":"1326:83:6","nodeType":"YulBlock","src":"1326:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1328:77:6","nodeType":"YulIdentifier","src":"1328:77:6"},"nativeSrc":"1328:79:6","nodeType":"YulFunctionCall","src":"1328:79:6"},"nativeSrc":"1328:79:6","nodeType":"YulExpressionStatement","src":"1328:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1301:7:6","nodeType":"YulIdentifier","src":"1301:7:6"},{"name":"headStart","nativeSrc":"1310:9:6","nodeType":"YulIdentifier","src":"1310:9:6"}],"functionName":{"name":"sub","nativeSrc":"1297:3:6","nodeType":"YulIdentifier","src":"1297:3:6"},"nativeSrc":"1297:23:6","nodeType":"YulFunctionCall","src":"1297:23:6"},{"kind":"number","nativeSrc":"1322:2:6","nodeType":"YulLiteral","src":"1322:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1293:3:6","nodeType":"YulIdentifier","src":"1293:3:6"},"nativeSrc":"1293:32:6","nodeType":"YulFunctionCall","src":"1293:32:6"},"nativeSrc":"1290:119:6","nodeType":"YulIf","src":"1290:119:6"},{"nativeSrc":"1419:117:6","nodeType":"YulBlock","src":"1419:117:6","statements":[{"nativeSrc":"1434:15:6","nodeType":"YulVariableDeclaration","src":"1434:15:6","value":{"kind":"number","nativeSrc":"1448:1:6","nodeType":"YulLiteral","src":"1448:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1438:6:6","nodeType":"YulTypedName","src":"1438:6:6","type":""}]},{"nativeSrc":"1463:63:6","nodeType":"YulAssignment","src":"1463:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1498:9:6","nodeType":"YulIdentifier","src":"1498:9:6"},{"name":"offset","nativeSrc":"1509:6:6","nodeType":"YulIdentifier","src":"1509:6:6"}],"functionName":{"name":"add","nativeSrc":"1494:3:6","nodeType":"YulIdentifier","src":"1494:3:6"},"nativeSrc":"1494:22:6","nodeType":"YulFunctionCall","src":"1494:22:6"},{"name":"dataEnd","nativeSrc":"1518:7:6","nodeType":"YulIdentifier","src":"1518:7:6"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1473:20:6","nodeType":"YulIdentifier","src":"1473:20:6"},"nativeSrc":"1473:53:6","nodeType":"YulFunctionCall","src":"1473:53:6"},"variableNames":[{"name":"value0","nativeSrc":"1463:6:6","nodeType":"YulIdentifier","src":"1463:6:6"}]}]},{"nativeSrc":"1546:118:6","nodeType":"YulBlock","src":"1546:118:6","statements":[{"nativeSrc":"1561:16:6","nodeType":"YulVariableDeclaration","src":"1561:16:6","value":{"kind":"number","nativeSrc":"1575:2:6","nodeType":"YulLiteral","src":"1575:2:6","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1565:6:6","nodeType":"YulTypedName","src":"1565:6:6","type":""}]},{"nativeSrc":"1591:63:6","nodeType":"YulAssignment","src":"1591:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1626:9:6","nodeType":"YulIdentifier","src":"1626:9:6"},{"name":"offset","nativeSrc":"1637:6:6","nodeType":"YulIdentifier","src":"1637:6:6"}],"functionName":{"name":"add","nativeSrc":"1622:3:6","nodeType":"YulIdentifier","src":"1622:3:6"},"nativeSrc":"1622:22:6","nodeType":"YulFunctionCall","src":"1622:22:6"},{"name":"dataEnd","nativeSrc":"1646:7:6","nodeType":"YulIdentifier","src":"1646:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1601:20:6","nodeType":"YulIdentifier","src":"1601:20:6"},"nativeSrc":"1601:53:6","nodeType":"YulFunctionCall","src":"1601:53:6"},"variableNames":[{"name":"value1","nativeSrc":"1591:6:6","nodeType":"YulIdentifier","src":"1591:6:6"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1197:474:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1242:9:6","nodeType":"YulTypedName","src":"1242:9:6","type":""},{"name":"dataEnd","nativeSrc":"1253:7:6","nodeType":"YulTypedName","src":"1253:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1265:6:6","nodeType":"YulTypedName","src":"1265:6:6","type":""},{"name":"value1","nativeSrc":"1273:6:6","nodeType":"YulTypedName","src":"1273:6:6","type":""}],"src":"1197:474:6"},{"body":{"nativeSrc":"1742:53:6","nodeType":"YulBlock","src":"1742:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1759:3:6","nodeType":"YulIdentifier","src":"1759:3:6"},{"arguments":[{"name":"value","nativeSrc":"1782:5:6","nodeType":"YulIdentifier","src":"1782:5:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1764:17:6","nodeType":"YulIdentifier","src":"1764:17:6"},"nativeSrc":"1764:24:6","nodeType":"YulFunctionCall","src":"1764:24:6"}],"functionName":{"name":"mstore","nativeSrc":"1752:6:6","nodeType":"YulIdentifier","src":"1752:6:6"},"nativeSrc":"1752:37:6","nodeType":"YulFunctionCall","src":"1752:37:6"},"nativeSrc":"1752:37:6","nodeType":"YulExpressionStatement","src":"1752:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1677:118:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1730:5:6","nodeType":"YulTypedName","src":"1730:5:6","type":""},{"name":"pos","nativeSrc":"1737:3:6","nodeType":"YulTypedName","src":"1737:3:6","type":""}],"src":"1677:118:6"},{"body":{"nativeSrc":"1899:124:6","nodeType":"YulBlock","src":"1899:124:6","statements":[{"nativeSrc":"1909:26:6","nodeType":"YulAssignment","src":"1909:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"1921:9:6","nodeType":"YulIdentifier","src":"1921:9:6"},{"kind":"number","nativeSrc":"1932:2:6","nodeType":"YulLiteral","src":"1932:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1917:3:6","nodeType":"YulIdentifier","src":"1917:3:6"},"nativeSrc":"1917:18:6","nodeType":"YulFunctionCall","src":"1917:18:6"},"variableNames":[{"name":"tail","nativeSrc":"1909:4:6","nodeType":"YulIdentifier","src":"1909:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1989:6:6","nodeType":"YulIdentifier","src":"1989:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"2002:9:6","nodeType":"YulIdentifier","src":"2002:9:6"},{"kind":"number","nativeSrc":"2013:1:6","nodeType":"YulLiteral","src":"2013:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1998:3:6","nodeType":"YulIdentifier","src":"1998:3:6"},"nativeSrc":"1998:17:6","nodeType":"YulFunctionCall","src":"1998:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1945:43:6","nodeType":"YulIdentifier","src":"1945:43:6"},"nativeSrc":"1945:71:6","nodeType":"YulFunctionCall","src":"1945:71:6"},"nativeSrc":"1945:71:6","nodeType":"YulExpressionStatement","src":"1945:71:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1801:222:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1871:9:6","nodeType":"YulTypedName","src":"1871:9:6","type":""},{"name":"value0","nativeSrc":"1883:6:6","nodeType":"YulTypedName","src":"1883:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1894:4:6","nodeType":"YulTypedName","src":"1894:4:6","type":""}],"src":"1801:222:6"},{"body":{"nativeSrc":"2112:391:6","nodeType":"YulBlock","src":"2112:391:6","statements":[{"body":{"nativeSrc":"2158:83:6","nodeType":"YulBlock","src":"2158:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2160:77:6","nodeType":"YulIdentifier","src":"2160:77:6"},"nativeSrc":"2160:79:6","nodeType":"YulFunctionCall","src":"2160:79:6"},"nativeSrc":"2160:79:6","nodeType":"YulExpressionStatement","src":"2160:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2133:7:6","nodeType":"YulIdentifier","src":"2133:7:6"},{"name":"headStart","nativeSrc":"2142:9:6","nodeType":"YulIdentifier","src":"2142:9:6"}],"functionName":{"name":"sub","nativeSrc":"2129:3:6","nodeType":"YulIdentifier","src":"2129:3:6"},"nativeSrc":"2129:23:6","nodeType":"YulFunctionCall","src":"2129:23:6"},{"kind":"number","nativeSrc":"2154:2:6","nodeType":"YulLiteral","src":"2154:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2125:3:6","nodeType":"YulIdentifier","src":"2125:3:6"},"nativeSrc":"2125:32:6","nodeType":"YulFunctionCall","src":"2125:32:6"},"nativeSrc":"2122:119:6","nodeType":"YulIf","src":"2122:119:6"},{"nativeSrc":"2251:117:6","nodeType":"YulBlock","src":"2251:117:6","statements":[{"nativeSrc":"2266:15:6","nodeType":"YulVariableDeclaration","src":"2266:15:6","value":{"kind":"number","nativeSrc":"2280:1:6","nodeType":"YulLiteral","src":"2280:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2270:6:6","nodeType":"YulTypedName","src":"2270:6:6","type":""}]},{"nativeSrc":"2295:63:6","nodeType":"YulAssignment","src":"2295:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2330:9:6","nodeType":"YulIdentifier","src":"2330:9:6"},{"name":"offset","nativeSrc":"2341:6:6","nodeType":"YulIdentifier","src":"2341:6:6"}],"functionName":{"name":"add","nativeSrc":"2326:3:6","nodeType":"YulIdentifier","src":"2326:3:6"},"nativeSrc":"2326:22:6","nodeType":"YulFunctionCall","src":"2326:22:6"},{"name":"dataEnd","nativeSrc":"2350:7:6","nodeType":"YulIdentifier","src":"2350:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2305:20:6","nodeType":"YulIdentifier","src":"2305:20:6"},"nativeSrc":"2305:53:6","nodeType":"YulFunctionCall","src":"2305:53:6"},"variableNames":[{"name":"value0","nativeSrc":"2295:6:6","nodeType":"YulIdentifier","src":"2295:6:6"}]}]},{"nativeSrc":"2378:118:6","nodeType":"YulBlock","src":"2378:118:6","statements":[{"nativeSrc":"2393:16:6","nodeType":"YulVariableDeclaration","src":"2393:16:6","value":{"kind":"number","nativeSrc":"2407:2:6","nodeType":"YulLiteral","src":"2407:2:6","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2397:6:6","nodeType":"YulTypedName","src":"2397:6:6","type":""}]},{"nativeSrc":"2423:63:6","nodeType":"YulAssignment","src":"2423:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2458:9:6","nodeType":"YulIdentifier","src":"2458:9:6"},{"name":"offset","nativeSrc":"2469:6:6","nodeType":"YulIdentifier","src":"2469:6:6"}],"functionName":{"name":"add","nativeSrc":"2454:3:6","nodeType":"YulIdentifier","src":"2454:3:6"},"nativeSrc":"2454:22:6","nodeType":"YulFunctionCall","src":"2454:22:6"},{"name":"dataEnd","nativeSrc":"2478:7:6","nodeType":"YulIdentifier","src":"2478:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2433:20:6","nodeType":"YulIdentifier","src":"2433:20:6"},"nativeSrc":"2433:53:6","nodeType":"YulFunctionCall","src":"2433:53:6"},"variableNames":[{"name":"value1","nativeSrc":"2423:6:6","nodeType":"YulIdentifier","src":"2423:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nativeSrc":"2029:474:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2074:9:6","nodeType":"YulTypedName","src":"2074:9:6","type":""},{"name":"dataEnd","nativeSrc":"2085:7:6","nodeType":"YulTypedName","src":"2085:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2097:6:6","nodeType":"YulTypedName","src":"2097:6:6","type":""},{"name":"value1","nativeSrc":"2105:6:6","nodeType":"YulTypedName","src":"2105:6:6","type":""}],"src":"2029:474:6"},{"body":{"nativeSrc":"2564:53:6","nodeType":"YulBlock","src":"2564:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2581:3:6","nodeType":"YulIdentifier","src":"2581:3:6"},{"arguments":[{"name":"value","nativeSrc":"2604:5:6","nodeType":"YulIdentifier","src":"2604:5:6"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2586:17:6","nodeType":"YulIdentifier","src":"2586:17:6"},"nativeSrc":"2586:24:6","nodeType":"YulFunctionCall","src":"2586:24:6"}],"functionName":{"name":"mstore","nativeSrc":"2574:6:6","nodeType":"YulIdentifier","src":"2574:6:6"},"nativeSrc":"2574:37:6","nodeType":"YulFunctionCall","src":"2574:37:6"},"nativeSrc":"2574:37:6","nodeType":"YulExpressionStatement","src":"2574:37:6"}]},"name":"abi_encode_t_address_to_t_address","nativeSrc":"2509:108:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2552:5:6","nodeType":"YulTypedName","src":"2552:5:6","type":""},{"name":"pos","nativeSrc":"2559:3:6","nodeType":"YulTypedName","src":"2559:3:6","type":""}],"src":"2509:108:6"},{"body":{"nativeSrc":"2682:40:6","nodeType":"YulBlock","src":"2682:40:6","statements":[{"nativeSrc":"2693:22:6","nodeType":"YulAssignment","src":"2693:22:6","value":{"arguments":[{"name":"value","nativeSrc":"2709:5:6","nodeType":"YulIdentifier","src":"2709:5:6"}],"functionName":{"name":"mload","nativeSrc":"2703:5:6","nodeType":"YulIdentifier","src":"2703:5:6"},"nativeSrc":"2703:12:6","nodeType":"YulFunctionCall","src":"2703:12:6"},"variableNames":[{"name":"length","nativeSrc":"2693:6:6","nodeType":"YulIdentifier","src":"2693:6:6"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"2623:99:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2665:5:6","nodeType":"YulTypedName","src":"2665:5:6","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2675:6:6","nodeType":"YulTypedName","src":"2675:6:6","type":""}],"src":"2623:99:6"},{"body":{"nativeSrc":"2814:73:6","nodeType":"YulBlock","src":"2814:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2831:3:6","nodeType":"YulIdentifier","src":"2831:3:6"},{"name":"length","nativeSrc":"2836:6:6","nodeType":"YulIdentifier","src":"2836:6:6"}],"functionName":{"name":"mstore","nativeSrc":"2824:6:6","nodeType":"YulIdentifier","src":"2824:6:6"},"nativeSrc":"2824:19:6","nodeType":"YulFunctionCall","src":"2824:19:6"},"nativeSrc":"2824:19:6","nodeType":"YulExpressionStatement","src":"2824:19:6"},{"nativeSrc":"2852:29:6","nodeType":"YulAssignment","src":"2852:29:6","value":{"arguments":[{"name":"pos","nativeSrc":"2871:3:6","nodeType":"YulIdentifier","src":"2871:3:6"},{"kind":"number","nativeSrc":"2876:4:6","nodeType":"YulLiteral","src":"2876:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2867:3:6","nodeType":"YulIdentifier","src":"2867:3:6"},"nativeSrc":"2867:14:6","nodeType":"YulFunctionCall","src":"2867:14:6"},"variableNames":[{"name":"updated_pos","nativeSrc":"2852:11:6","nodeType":"YulIdentifier","src":"2852:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nativeSrc":"2728:159:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2786:3:6","nodeType":"YulTypedName","src":"2786:3:6","type":""},{"name":"length","nativeSrc":"2791:6:6","nodeType":"YulTypedName","src":"2791:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"2802:11:6","nodeType":"YulTypedName","src":"2802:11:6","type":""}],"src":"2728:159:6"},{"body":{"nativeSrc":"2955:184:6","nodeType":"YulBlock","src":"2955:184:6","statements":[{"nativeSrc":"2965:10:6","nodeType":"YulVariableDeclaration","src":"2965:10:6","value":{"kind":"number","nativeSrc":"2974:1:6","nodeType":"YulLiteral","src":"2974:1:6","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2969:1:6","nodeType":"YulTypedName","src":"2969:1:6","type":""}]},{"body":{"nativeSrc":"3034:63:6","nodeType":"YulBlock","src":"3034:63:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3059:3:6","nodeType":"YulIdentifier","src":"3059:3:6"},{"name":"i","nativeSrc":"3064:1:6","nodeType":"YulIdentifier","src":"3064:1:6"}],"functionName":{"name":"add","nativeSrc":"3055:3:6","nodeType":"YulIdentifier","src":"3055:3:6"},"nativeSrc":"3055:11:6","nodeType":"YulFunctionCall","src":"3055:11:6"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3078:3:6","nodeType":"YulIdentifier","src":"3078:3:6"},{"name":"i","nativeSrc":"3083:1:6","nodeType":"YulIdentifier","src":"3083:1:6"}],"functionName":{"name":"add","nativeSrc":"3074:3:6","nodeType":"YulIdentifier","src":"3074:3:6"},"nativeSrc":"3074:11:6","nodeType":"YulFunctionCall","src":"3074:11:6"}],"functionName":{"name":"mload","nativeSrc":"3068:5:6","nodeType":"YulIdentifier","src":"3068:5:6"},"nativeSrc":"3068:18:6","nodeType":"YulFunctionCall","src":"3068:18:6"}],"functionName":{"name":"mstore","nativeSrc":"3048:6:6","nodeType":"YulIdentifier","src":"3048:6:6"},"nativeSrc":"3048:39:6","nodeType":"YulFunctionCall","src":"3048:39:6"},"nativeSrc":"3048:39:6","nodeType":"YulExpressionStatement","src":"3048:39:6"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2995:1:6","nodeType":"YulIdentifier","src":"2995:1:6"},{"name":"length","nativeSrc":"2998:6:6","nodeType":"YulIdentifier","src":"2998:6:6"}],"functionName":{"name":"lt","nativeSrc":"2992:2:6","nodeType":"YulIdentifier","src":"2992:2:6"},"nativeSrc":"2992:13:6","nodeType":"YulFunctionCall","src":"2992:13:6"},"nativeSrc":"2984:113:6","nodeType":"YulForLoop","post":{"nativeSrc":"3006:19:6","nodeType":"YulBlock","src":"3006:19:6","statements":[{"nativeSrc":"3008:15:6","nodeType":"YulAssignment","src":"3008:15:6","value":{"arguments":[{"name":"i","nativeSrc":"3017:1:6","nodeType":"YulIdentifier","src":"3017:1:6"},{"kind":"number","nativeSrc":"3020:2:6","nodeType":"YulLiteral","src":"3020:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3013:3:6","nodeType":"YulIdentifier","src":"3013:3:6"},"nativeSrc":"3013:10:6","nodeType":"YulFunctionCall","src":"3013:10:6"},"variableNames":[{"name":"i","nativeSrc":"3008:1:6","nodeType":"YulIdentifier","src":"3008:1:6"}]}]},"pre":{"nativeSrc":"2988:3:6","nodeType":"YulBlock","src":"2988:3:6","statements":[]},"src":"2984:113:6"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3117:3:6","nodeType":"YulIdentifier","src":"3117:3:6"},{"name":"length","nativeSrc":"3122:6:6","nodeType":"YulIdentifier","src":"3122:6:6"}],"functionName":{"name":"add","nativeSrc":"3113:3:6","nodeType":"YulIdentifier","src":"3113:3:6"},"nativeSrc":"3113:16:6","nodeType":"YulFunctionCall","src":"3113:16:6"},{"kind":"number","nativeSrc":"3131:1:6","nodeType":"YulLiteral","src":"3131:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3106:6:6","nodeType":"YulIdentifier","src":"3106:6:6"},"nativeSrc":"3106:27:6","nodeType":"YulFunctionCall","src":"3106:27:6"},"nativeSrc":"3106:27:6","nodeType":"YulExpressionStatement","src":"3106:27:6"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2893:246:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2937:3:6","nodeType":"YulTypedName","src":"2937:3:6","type":""},{"name":"dst","nativeSrc":"2942:3:6","nodeType":"YulTypedName","src":"2942:3:6","type":""},{"name":"length","nativeSrc":"2947:6:6","nodeType":"YulTypedName","src":"2947:6:6","type":""}],"src":"2893:246:6"},{"body":{"nativeSrc":"3193:54:6","nodeType":"YulBlock","src":"3193:54:6","statements":[{"nativeSrc":"3203:38:6","nodeType":"YulAssignment","src":"3203:38:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3221:5:6","nodeType":"YulIdentifier","src":"3221:5:6"},{"kind":"number","nativeSrc":"3228:2:6","nodeType":"YulLiteral","src":"3228:2:6","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3217:3:6","nodeType":"YulIdentifier","src":"3217:3:6"},"nativeSrc":"3217:14:6","nodeType":"YulFunctionCall","src":"3217:14:6"},{"arguments":[{"kind":"number","nativeSrc":"3237:2:6","nodeType":"YulLiteral","src":"3237:2:6","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3233:3:6","nodeType":"YulIdentifier","src":"3233:3:6"},"nativeSrc":"3233:7:6","nodeType":"YulFunctionCall","src":"3233:7:6"}],"functionName":{"name":"and","nativeSrc":"3213:3:6","nodeType":"YulIdentifier","src":"3213:3:6"},"nativeSrc":"3213:28:6","nodeType":"YulFunctionCall","src":"3213:28:6"},"variableNames":[{"name":"result","nativeSrc":"3203:6:6","nodeType":"YulIdentifier","src":"3203:6:6"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"3145:102:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3176:5:6","nodeType":"YulTypedName","src":"3176:5:6","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3186:6:6","nodeType":"YulTypedName","src":"3186:6:6","type":""}],"src":"3145:102:6"},{"body":{"nativeSrc":"3335:275:6","nodeType":"YulBlock","src":"3335:275:6","statements":[{"nativeSrc":"3345:53:6","nodeType":"YulVariableDeclaration","src":"3345:53:6","value":{"arguments":[{"name":"value","nativeSrc":"3392:5:6","nodeType":"YulIdentifier","src":"3392:5:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"3359:32:6","nodeType":"YulIdentifier","src":"3359:32:6"},"nativeSrc":"3359:39:6","nodeType":"YulFunctionCall","src":"3359:39:6"},"variables":[{"name":"length","nativeSrc":"3349:6:6","nodeType":"YulTypedName","src":"3349:6:6","type":""}]},{"nativeSrc":"3407:68:6","nodeType":"YulAssignment","src":"3407:68:6","value":{"arguments":[{"name":"pos","nativeSrc":"3463:3:6","nodeType":"YulIdentifier","src":"3463:3:6"},{"name":"length","nativeSrc":"3468:6:6","nodeType":"YulIdentifier","src":"3468:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nativeSrc":"3414:48:6","nodeType":"YulIdentifier","src":"3414:48:6"},"nativeSrc":"3414:61:6","nodeType":"YulFunctionCall","src":"3414:61:6"},"variableNames":[{"name":"pos","nativeSrc":"3407:3:6","nodeType":"YulIdentifier","src":"3407:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3523:5:6","nodeType":"YulIdentifier","src":"3523:5:6"},{"kind":"number","nativeSrc":"3530:4:6","nodeType":"YulLiteral","src":"3530:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3519:3:6","nodeType":"YulIdentifier","src":"3519:3:6"},"nativeSrc":"3519:16:6","nodeType":"YulFunctionCall","src":"3519:16:6"},{"name":"pos","nativeSrc":"3537:3:6","nodeType":"YulIdentifier","src":"3537:3:6"},{"name":"length","nativeSrc":"3542:6:6","nodeType":"YulIdentifier","src":"3542:6:6"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3484:34:6","nodeType":"YulIdentifier","src":"3484:34:6"},"nativeSrc":"3484:65:6","nodeType":"YulFunctionCall","src":"3484:65:6"},"nativeSrc":"3484:65:6","nodeType":"YulExpressionStatement","src":"3484:65:6"},{"nativeSrc":"3558:46:6","nodeType":"YulAssignment","src":"3558:46:6","value":{"arguments":[{"name":"pos","nativeSrc":"3569:3:6","nodeType":"YulIdentifier","src":"3569:3:6"},{"arguments":[{"name":"length","nativeSrc":"3596:6:6","nodeType":"YulIdentifier","src":"3596:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"3574:21:6","nodeType":"YulIdentifier","src":"3574:21:6"},"nativeSrc":"3574:29:6","nodeType":"YulFunctionCall","src":"3574:29:6"}],"functionName":{"name":"add","nativeSrc":"3565:3:6","nodeType":"YulIdentifier","src":"3565:3:6"},"nativeSrc":"3565:39:6","nodeType":"YulFunctionCall","src":"3565:39:6"},"variableNames":[{"name":"end","nativeSrc":"3558:3:6","nodeType":"YulIdentifier","src":"3558:3:6"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"3253:357:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3316:5:6","nodeType":"YulTypedName","src":"3316:5:6","type":""},{"name":"pos","nativeSrc":"3323:3:6","nodeType":"YulTypedName","src":"3323:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3331:3:6","nodeType":"YulTypedName","src":"3331:3:6","type":""}],"src":"3253:357:6"},{"body":{"nativeSrc":"3658:48:6","nodeType":"YulBlock","src":"3658:48:6","statements":[{"nativeSrc":"3668:32:6","nodeType":"YulAssignment","src":"3668:32:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3693:5:6","nodeType":"YulIdentifier","src":"3693:5:6"}],"functionName":{"name":"iszero","nativeSrc":"3686:6:6","nodeType":"YulIdentifier","src":"3686:6:6"},"nativeSrc":"3686:13:6","nodeType":"YulFunctionCall","src":"3686:13:6"}],"functionName":{"name":"iszero","nativeSrc":"3679:6:6","nodeType":"YulIdentifier","src":"3679:6:6"},"nativeSrc":"3679:21:6","nodeType":"YulFunctionCall","src":"3679:21:6"},"variableNames":[{"name":"cleaned","nativeSrc":"3668:7:6","nodeType":"YulIdentifier","src":"3668:7:6"}]}]},"name":"cleanup_t_bool","nativeSrc":"3616:90:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3640:5:6","nodeType":"YulTypedName","src":"3640:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3650:7:6","nodeType":"YulTypedName","src":"3650:7:6","type":""}],"src":"3616:90:6"},{"body":{"nativeSrc":"3761:50:6","nodeType":"YulBlock","src":"3761:50:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3778:3:6","nodeType":"YulIdentifier","src":"3778:3:6"},{"arguments":[{"name":"value","nativeSrc":"3798:5:6","nodeType":"YulIdentifier","src":"3798:5:6"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3783:14:6","nodeType":"YulIdentifier","src":"3783:14:6"},"nativeSrc":"3783:21:6","nodeType":"YulFunctionCall","src":"3783:21:6"}],"functionName":{"name":"mstore","nativeSrc":"3771:6:6","nodeType":"YulIdentifier","src":"3771:6:6"},"nativeSrc":"3771:34:6","nodeType":"YulFunctionCall","src":"3771:34:6"},"nativeSrc":"3771:34:6","nodeType":"YulExpressionStatement","src":"3771:34:6"}]},"name":"abi_encode_t_bool_to_t_bool","nativeSrc":"3712:99:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3749:5:6","nodeType":"YulTypedName","src":"3749:5:6","type":""},{"name":"pos","nativeSrc":"3756:3:6","nodeType":"YulTypedName","src":"3756:3:6","type":""}],"src":"3712:99:6"},{"body":{"nativeSrc":"3872:53:6","nodeType":"YulBlock","src":"3872:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3889:3:6","nodeType":"YulIdentifier","src":"3889:3:6"},{"arguments":[{"name":"value","nativeSrc":"3912:5:6","nodeType":"YulIdentifier","src":"3912:5:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3894:17:6","nodeType":"YulIdentifier","src":"3894:17:6"},"nativeSrc":"3894:24:6","nodeType":"YulFunctionCall","src":"3894:24:6"}],"functionName":{"name":"mstore","nativeSrc":"3882:6:6","nodeType":"YulIdentifier","src":"3882:6:6"},"nativeSrc":"3882:37:6","nodeType":"YulFunctionCall","src":"3882:37:6"},"nativeSrc":"3882:37:6","nodeType":"YulExpressionStatement","src":"3882:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"3817:108:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3860:5:6","nodeType":"YulTypedName","src":"3860:5:6","type":""},{"name":"pos","nativeSrc":"3867:3:6","nodeType":"YulTypedName","src":"3867:3:6","type":""}],"src":"3817:108:6"},{"body":{"nativeSrc":"4145:849:6","nodeType":"YulBlock","src":"4145:849:6","statements":[{"nativeSrc":"4155:26:6","nodeType":"YulVariableDeclaration","src":"4155:26:6","value":{"arguments":[{"name":"pos","nativeSrc":"4171:3:6","nodeType":"YulIdentifier","src":"4171:3:6"},{"kind":"number","nativeSrc":"4176:4:6","nodeType":"YulLiteral","src":"4176:4:6","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"4167:3:6","nodeType":"YulIdentifier","src":"4167:3:6"},"nativeSrc":"4167:14:6","nodeType":"YulFunctionCall","src":"4167:14:6"},"variables":[{"name":"tail","nativeSrc":"4159:4:6","nodeType":"YulTypedName","src":"4159:4:6","type":""}]},{"nativeSrc":"4191:171:6","nodeType":"YulBlock","src":"4191:171:6","statements":[{"nativeSrc":"4233:43:6","nodeType":"YulVariableDeclaration","src":"4233:43:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4263:5:6","nodeType":"YulIdentifier","src":"4263:5:6"},{"kind":"number","nativeSrc":"4270:4:6","nodeType":"YulLiteral","src":"4270:4:6","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"4259:3:6","nodeType":"YulIdentifier","src":"4259:3:6"},"nativeSrc":"4259:16:6","nodeType":"YulFunctionCall","src":"4259:16:6"}],"functionName":{"name":"mload","nativeSrc":"4253:5:6","nodeType":"YulIdentifier","src":"4253:5:6"},"nativeSrc":"4253:23:6","nodeType":"YulFunctionCall","src":"4253:23:6"},"variables":[{"name":"memberValue0","nativeSrc":"4237:12:6","nodeType":"YulTypedName","src":"4237:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"4323:12:6","nodeType":"YulIdentifier","src":"4323:12:6"},{"arguments":[{"name":"pos","nativeSrc":"4341:3:6","nodeType":"YulIdentifier","src":"4341:3:6"},{"kind":"number","nativeSrc":"4346:4:6","nodeType":"YulLiteral","src":"4346:4:6","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"4337:3:6","nodeType":"YulIdentifier","src":"4337:3:6"},"nativeSrc":"4337:14:6","nodeType":"YulFunctionCall","src":"4337:14:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nativeSrc":"4289:33:6","nodeType":"YulIdentifier","src":"4289:33:6"},"nativeSrc":"4289:63:6","nodeType":"YulFunctionCall","src":"4289:63:6"},"nativeSrc":"4289:63:6","nodeType":"YulExpressionStatement","src":"4289:63:6"}]},{"nativeSrc":"4372:242:6","nodeType":"YulBlock","src":"4372:242:6","statements":[{"nativeSrc":"4414:43:6","nodeType":"YulVariableDeclaration","src":"4414:43:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4444:5:6","nodeType":"YulIdentifier","src":"4444:5:6"},{"kind":"number","nativeSrc":"4451:4:6","nodeType":"YulLiteral","src":"4451:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4440:3:6","nodeType":"YulIdentifier","src":"4440:3:6"},"nativeSrc":"4440:16:6","nodeType":"YulFunctionCall","src":"4440:16:6"}],"functionName":{"name":"mload","nativeSrc":"4434:5:6","nodeType":"YulIdentifier","src":"4434:5:6"},"nativeSrc":"4434:23:6","nodeType":"YulFunctionCall","src":"4434:23:6"},"variables":[{"name":"memberValue0","nativeSrc":"4418:12:6","nodeType":"YulTypedName","src":"4418:12:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4482:3:6","nodeType":"YulIdentifier","src":"4482:3:6"},{"kind":"number","nativeSrc":"4487:4:6","nodeType":"YulLiteral","src":"4487:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4478:3:6","nodeType":"YulIdentifier","src":"4478:3:6"},"nativeSrc":"4478:14:6","nodeType":"YulFunctionCall","src":"4478:14:6"},{"arguments":[{"name":"tail","nativeSrc":"4498:4:6","nodeType":"YulIdentifier","src":"4498:4:6"},{"name":"pos","nativeSrc":"4504:3:6","nodeType":"YulIdentifier","src":"4504:3:6"}],"functionName":{"name":"sub","nativeSrc":"4494:3:6","nodeType":"YulIdentifier","src":"4494:3:6"},"nativeSrc":"4494:14:6","nodeType":"YulFunctionCall","src":"4494:14:6"}],"functionName":{"name":"mstore","nativeSrc":"4471:6:6","nodeType":"YulIdentifier","src":"4471:6:6"},"nativeSrc":"4471:38:6","nodeType":"YulFunctionCall","src":"4471:38:6"},"nativeSrc":"4471:38:6","nodeType":"YulExpressionStatement","src":"4471:38:6"},{"nativeSrc":"4522:81:6","nodeType":"YulAssignment","src":"4522:81:6","value":{"arguments":[{"name":"memberValue0","nativeSrc":"4584:12:6","nodeType":"YulIdentifier","src":"4584:12:6"},{"name":"tail","nativeSrc":"4598:4:6","nodeType":"YulIdentifier","src":"4598:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"4530:53:6","nodeType":"YulIdentifier","src":"4530:53:6"},"nativeSrc":"4530:73:6","nodeType":"YulFunctionCall","src":"4530:73:6"},"variableNames":[{"name":"tail","nativeSrc":"4522:4:6","nodeType":"YulIdentifier","src":"4522:4:6"}]}]},{"nativeSrc":"4624:162:6","nodeType":"YulBlock","src":"4624:162:6","statements":[{"nativeSrc":"4663:43:6","nodeType":"YulVariableDeclaration","src":"4663:43:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4693:5:6","nodeType":"YulIdentifier","src":"4693:5:6"},{"kind":"number","nativeSrc":"4700:4:6","nodeType":"YulLiteral","src":"4700:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"4689:3:6","nodeType":"YulIdentifier","src":"4689:3:6"},"nativeSrc":"4689:16:6","nodeType":"YulFunctionCall","src":"4689:16:6"}],"functionName":{"name":"mload","nativeSrc":"4683:5:6","nodeType":"YulIdentifier","src":"4683:5:6"},"nativeSrc":"4683:23:6","nodeType":"YulFunctionCall","src":"4683:23:6"},"variables":[{"name":"memberValue0","nativeSrc":"4667:12:6","nodeType":"YulTypedName","src":"4667:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"4747:12:6","nodeType":"YulIdentifier","src":"4747:12:6"},{"arguments":[{"name":"pos","nativeSrc":"4765:3:6","nodeType":"YulIdentifier","src":"4765:3:6"},{"kind":"number","nativeSrc":"4770:4:6","nodeType":"YulLiteral","src":"4770:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"4761:3:6","nodeType":"YulIdentifier","src":"4761:3:6"},"nativeSrc":"4761:14:6","nodeType":"YulFunctionCall","src":"4761:14:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nativeSrc":"4719:27:6","nodeType":"YulIdentifier","src":"4719:27:6"},"nativeSrc":"4719:57:6","nodeType":"YulFunctionCall","src":"4719:57:6"},"nativeSrc":"4719:57:6","nodeType":"YulExpressionStatement","src":"4719:57:6"}]},{"nativeSrc":"4796:171:6","nodeType":"YulBlock","src":"4796:171:6","statements":[{"nativeSrc":"4838:43:6","nodeType":"YulVariableDeclaration","src":"4838:43:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4868:5:6","nodeType":"YulIdentifier","src":"4868:5:6"},{"kind":"number","nativeSrc":"4875:4:6","nodeType":"YulLiteral","src":"4875:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"4864:3:6","nodeType":"YulIdentifier","src":"4864:3:6"},"nativeSrc":"4864:16:6","nodeType":"YulFunctionCall","src":"4864:16:6"}],"functionName":{"name":"mload","nativeSrc":"4858:5:6","nodeType":"YulIdentifier","src":"4858:5:6"},"nativeSrc":"4858:23:6","nodeType":"YulFunctionCall","src":"4858:23:6"},"variables":[{"name":"memberValue0","nativeSrc":"4842:12:6","nodeType":"YulTypedName","src":"4842:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"4928:12:6","nodeType":"YulIdentifier","src":"4928:12:6"},{"arguments":[{"name":"pos","nativeSrc":"4946:3:6","nodeType":"YulIdentifier","src":"4946:3:6"},{"kind":"number","nativeSrc":"4951:4:6","nodeType":"YulLiteral","src":"4951:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"4942:3:6","nodeType":"YulIdentifier","src":"4942:3:6"},"nativeSrc":"4942:14:6","nodeType":"YulFunctionCall","src":"4942:14:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"4894:33:6","nodeType":"YulIdentifier","src":"4894:33:6"},"nativeSrc":"4894:63:6","nodeType":"YulFunctionCall","src":"4894:63:6"},"nativeSrc":"4894:63:6","nodeType":"YulExpressionStatement","src":"4894:63:6"}]},{"nativeSrc":"4977:11:6","nodeType":"YulAssignment","src":"4977:11:6","value":{"name":"tail","nativeSrc":"4984:4:6","nodeType":"YulIdentifier","src":"4984:4:6"},"variableNames":[{"name":"end","nativeSrc":"4977:3:6","nodeType":"YulIdentifier","src":"4977:3:6"}]}]},"name":"abi_encode_t_struct$_Contribution_$816_memory_ptr_to_t_struct$_Contribution_$816_memory_ptr_fromStack","nativeSrc":"4013:981:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4124:5:6","nodeType":"YulTypedName","src":"4124:5:6","type":""},{"name":"pos","nativeSrc":"4131:3:6","nodeType":"YulTypedName","src":"4131:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4140:3:6","nodeType":"YulTypedName","src":"4140:3:6","type":""}],"src":"4013:981:6"},{"body":{"nativeSrc":"5156:233:6","nodeType":"YulBlock","src":"5156:233:6","statements":[{"nativeSrc":"5166:26:6","nodeType":"YulAssignment","src":"5166:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"5178:9:6","nodeType":"YulIdentifier","src":"5178:9:6"},{"kind":"number","nativeSrc":"5189:2:6","nodeType":"YulLiteral","src":"5189:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5174:3:6","nodeType":"YulIdentifier","src":"5174:3:6"},"nativeSrc":"5174:18:6","nodeType":"YulFunctionCall","src":"5174:18:6"},"variableNames":[{"name":"tail","nativeSrc":"5166:4:6","nodeType":"YulIdentifier","src":"5166:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5213:9:6","nodeType":"YulIdentifier","src":"5213:9:6"},{"kind":"number","nativeSrc":"5224:1:6","nodeType":"YulLiteral","src":"5224:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5209:3:6","nodeType":"YulIdentifier","src":"5209:3:6"},"nativeSrc":"5209:17:6","nodeType":"YulFunctionCall","src":"5209:17:6"},{"arguments":[{"name":"tail","nativeSrc":"5232:4:6","nodeType":"YulIdentifier","src":"5232:4:6"},{"name":"headStart","nativeSrc":"5238:9:6","nodeType":"YulIdentifier","src":"5238:9:6"}],"functionName":{"name":"sub","nativeSrc":"5228:3:6","nodeType":"YulIdentifier","src":"5228:3:6"},"nativeSrc":"5228:20:6","nodeType":"YulFunctionCall","src":"5228:20:6"}],"functionName":{"name":"mstore","nativeSrc":"5202:6:6","nodeType":"YulIdentifier","src":"5202:6:6"},"nativeSrc":"5202:47:6","nodeType":"YulFunctionCall","src":"5202:47:6"},"nativeSrc":"5202:47:6","nodeType":"YulExpressionStatement","src":"5202:47:6"},{"nativeSrc":"5258:124:6","nodeType":"YulAssignment","src":"5258:124:6","value":{"arguments":[{"name":"value0","nativeSrc":"5368:6:6","nodeType":"YulIdentifier","src":"5368:6:6"},{"name":"tail","nativeSrc":"5377:4:6","nodeType":"YulIdentifier","src":"5377:4:6"}],"functionName":{"name":"abi_encode_t_struct$_Contribution_$816_memory_ptr_to_t_struct$_Contribution_$816_memory_ptr_fromStack","nativeSrc":"5266:101:6","nodeType":"YulIdentifier","src":"5266:101:6"},"nativeSrc":"5266:116:6","nodeType":"YulFunctionCall","src":"5266:116:6"},"variableNames":[{"name":"tail","nativeSrc":"5258:4:6","nodeType":"YulIdentifier","src":"5258:4:6"}]}]},"name":"abi_encode_tuple_t_struct$_Contribution_$816_memory_ptr__to_t_struct$_Contribution_$816_memory_ptr__fromStack_reversed","nativeSrc":"5000:389:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5128:9:6","nodeType":"YulTypedName","src":"5128:9:6","type":""},{"name":"value0","nativeSrc":"5140:6:6","nodeType":"YulTypedName","src":"5140:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5151:4:6","nodeType":"YulTypedName","src":"5151:4:6","type":""}],"src":"5000:389:6"},{"body":{"nativeSrc":"5461:263:6","nodeType":"YulBlock","src":"5461:263:6","statements":[{"body":{"nativeSrc":"5507:83:6","nodeType":"YulBlock","src":"5507:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5509:77:6","nodeType":"YulIdentifier","src":"5509:77:6"},"nativeSrc":"5509:79:6","nodeType":"YulFunctionCall","src":"5509:79:6"},"nativeSrc":"5509:79:6","nodeType":"YulExpressionStatement","src":"5509:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5482:7:6","nodeType":"YulIdentifier","src":"5482:7:6"},{"name":"headStart","nativeSrc":"5491:9:6","nodeType":"YulIdentifier","src":"5491:9:6"}],"functionName":{"name":"sub","nativeSrc":"5478:3:6","nodeType":"YulIdentifier","src":"5478:3:6"},"nativeSrc":"5478:23:6","nodeType":"YulFunctionCall","src":"5478:23:6"},{"kind":"number","nativeSrc":"5503:2:6","nodeType":"YulLiteral","src":"5503:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5474:3:6","nodeType":"YulIdentifier","src":"5474:3:6"},"nativeSrc":"5474:32:6","nodeType":"YulFunctionCall","src":"5474:32:6"},"nativeSrc":"5471:119:6","nodeType":"YulIf","src":"5471:119:6"},{"nativeSrc":"5600:117:6","nodeType":"YulBlock","src":"5600:117:6","statements":[{"nativeSrc":"5615:15:6","nodeType":"YulVariableDeclaration","src":"5615:15:6","value":{"kind":"number","nativeSrc":"5629:1:6","nodeType":"YulLiteral","src":"5629:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5619:6:6","nodeType":"YulTypedName","src":"5619:6:6","type":""}]},{"nativeSrc":"5644:63:6","nodeType":"YulAssignment","src":"5644:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5679:9:6","nodeType":"YulIdentifier","src":"5679:9:6"},{"name":"offset","nativeSrc":"5690:6:6","nodeType":"YulIdentifier","src":"5690:6:6"}],"functionName":{"name":"add","nativeSrc":"5675:3:6","nodeType":"YulIdentifier","src":"5675:3:6"},"nativeSrc":"5675:22:6","nodeType":"YulFunctionCall","src":"5675:22:6"},{"name":"dataEnd","nativeSrc":"5699:7:6","nodeType":"YulIdentifier","src":"5699:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5654:20:6","nodeType":"YulIdentifier","src":"5654:20:6"},"nativeSrc":"5654:53:6","nodeType":"YulFunctionCall","src":"5654:53:6"},"variableNames":[{"name":"value0","nativeSrc":"5644:6:6","nodeType":"YulIdentifier","src":"5644:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"5395:329:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5431:9:6","nodeType":"YulTypedName","src":"5431:9:6","type":""},{"name":"dataEnd","nativeSrc":"5442:7:6","nodeType":"YulTypedName","src":"5442:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5454:6:6","nodeType":"YulTypedName","src":"5454:6:6","type":""}],"src":"5395:329:6"},{"body":{"nativeSrc":"5795:53:6","nodeType":"YulBlock","src":"5795:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5812:3:6","nodeType":"YulIdentifier","src":"5812:3:6"},{"arguments":[{"name":"value","nativeSrc":"5835:5:6","nodeType":"YulIdentifier","src":"5835:5:6"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5817:17:6","nodeType":"YulIdentifier","src":"5817:17:6"},"nativeSrc":"5817:24:6","nodeType":"YulFunctionCall","src":"5817:24:6"}],"functionName":{"name":"mstore","nativeSrc":"5805:6:6","nodeType":"YulIdentifier","src":"5805:6:6"},"nativeSrc":"5805:37:6","nodeType":"YulFunctionCall","src":"5805:37:6"},"nativeSrc":"5805:37:6","nodeType":"YulExpressionStatement","src":"5805:37:6"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5730:118:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5783:5:6","nodeType":"YulTypedName","src":"5783:5:6","type":""},{"name":"pos","nativeSrc":"5790:3:6","nodeType":"YulTypedName","src":"5790:3:6","type":""}],"src":"5730:118:6"},{"body":{"nativeSrc":"5950:73:6","nodeType":"YulBlock","src":"5950:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5967:3:6","nodeType":"YulIdentifier","src":"5967:3:6"},{"name":"length","nativeSrc":"5972:6:6","nodeType":"YulIdentifier","src":"5972:6:6"}],"functionName":{"name":"mstore","nativeSrc":"5960:6:6","nodeType":"YulIdentifier","src":"5960:6:6"},"nativeSrc":"5960:19:6","nodeType":"YulFunctionCall","src":"5960:19:6"},"nativeSrc":"5960:19:6","nodeType":"YulExpressionStatement","src":"5960:19:6"},{"nativeSrc":"5988:29:6","nodeType":"YulAssignment","src":"5988:29:6","value":{"arguments":[{"name":"pos","nativeSrc":"6007:3:6","nodeType":"YulIdentifier","src":"6007:3:6"},{"kind":"number","nativeSrc":"6012:4:6","nodeType":"YulLiteral","src":"6012:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6003:3:6","nodeType":"YulIdentifier","src":"6003:3:6"},"nativeSrc":"6003:14:6","nodeType":"YulFunctionCall","src":"6003:14:6"},"variableNames":[{"name":"updated_pos","nativeSrc":"5988:11:6","nodeType":"YulIdentifier","src":"5988:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"5854:169:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5922:3:6","nodeType":"YulTypedName","src":"5922:3:6","type":""},{"name":"length","nativeSrc":"5927:6:6","nodeType":"YulTypedName","src":"5927:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"5938:11:6","nodeType":"YulTypedName","src":"5938:11:6","type":""}],"src":"5854:169:6"},{"body":{"nativeSrc":"6121:285:6","nodeType":"YulBlock","src":"6121:285:6","statements":[{"nativeSrc":"6131:53:6","nodeType":"YulVariableDeclaration","src":"6131:53:6","value":{"arguments":[{"name":"value","nativeSrc":"6178:5:6","nodeType":"YulIdentifier","src":"6178:5:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"6145:32:6","nodeType":"YulIdentifier","src":"6145:32:6"},"nativeSrc":"6145:39:6","nodeType":"YulFunctionCall","src":"6145:39:6"},"variables":[{"name":"length","nativeSrc":"6135:6:6","nodeType":"YulTypedName","src":"6135:6:6","type":""}]},{"nativeSrc":"6193:78:6","nodeType":"YulAssignment","src":"6193:78:6","value":{"arguments":[{"name":"pos","nativeSrc":"6259:3:6","nodeType":"YulIdentifier","src":"6259:3:6"},{"name":"length","nativeSrc":"6264:6:6","nodeType":"YulIdentifier","src":"6264:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6200:58:6","nodeType":"YulIdentifier","src":"6200:58:6"},"nativeSrc":"6200:71:6","nodeType":"YulFunctionCall","src":"6200:71:6"},"variableNames":[{"name":"pos","nativeSrc":"6193:3:6","nodeType":"YulIdentifier","src":"6193:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6319:5:6","nodeType":"YulIdentifier","src":"6319:5:6"},{"kind":"number","nativeSrc":"6326:4:6","nodeType":"YulLiteral","src":"6326:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6315:3:6","nodeType":"YulIdentifier","src":"6315:3:6"},"nativeSrc":"6315:16:6","nodeType":"YulFunctionCall","src":"6315:16:6"},{"name":"pos","nativeSrc":"6333:3:6","nodeType":"YulIdentifier","src":"6333:3:6"},{"name":"length","nativeSrc":"6338:6:6","nodeType":"YulIdentifier","src":"6338:6:6"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"6280:34:6","nodeType":"YulIdentifier","src":"6280:34:6"},"nativeSrc":"6280:65:6","nodeType":"YulFunctionCall","src":"6280:65:6"},"nativeSrc":"6280:65:6","nodeType":"YulExpressionStatement","src":"6280:65:6"},{"nativeSrc":"6354:46:6","nodeType":"YulAssignment","src":"6354:46:6","value":{"arguments":[{"name":"pos","nativeSrc":"6365:3:6","nodeType":"YulIdentifier","src":"6365:3:6"},{"arguments":[{"name":"length","nativeSrc":"6392:6:6","nodeType":"YulIdentifier","src":"6392:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6370:21:6","nodeType":"YulIdentifier","src":"6370:21:6"},"nativeSrc":"6370:29:6","nodeType":"YulFunctionCall","src":"6370:29:6"}],"functionName":{"name":"add","nativeSrc":"6361:3:6","nodeType":"YulIdentifier","src":"6361:3:6"},"nativeSrc":"6361:39:6","nodeType":"YulFunctionCall","src":"6361:39:6"},"variableNames":[{"name":"end","nativeSrc":"6354:3:6","nodeType":"YulIdentifier","src":"6354:3:6"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"6029:377:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6102:5:6","nodeType":"YulTypedName","src":"6102:5:6","type":""},{"name":"pos","nativeSrc":"6109:3:6","nodeType":"YulTypedName","src":"6109:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6117:3:6","nodeType":"YulTypedName","src":"6117:3:6","type":""}],"src":"6029:377:6"},{"body":{"nativeSrc":"6496:40:6","nodeType":"YulBlock","src":"6496:40:6","statements":[{"nativeSrc":"6507:22:6","nodeType":"YulAssignment","src":"6507:22:6","value":{"arguments":[{"name":"value","nativeSrc":"6523:5:6","nodeType":"YulIdentifier","src":"6523:5:6"}],"functionName":{"name":"mload","nativeSrc":"6517:5:6","nodeType":"YulIdentifier","src":"6517:5:6"},"nativeSrc":"6517:12:6","nodeType":"YulFunctionCall","src":"6517:12:6"},"variableNames":[{"name":"length","nativeSrc":"6507:6:6","nodeType":"YulIdentifier","src":"6507:6:6"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"6412:124:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6479:5:6","nodeType":"YulTypedName","src":"6479:5:6","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6489:6:6","nodeType":"YulTypedName","src":"6489:6:6","type":""}],"src":"6412:124:6"},{"body":{"nativeSrc":"6663:73:6","nodeType":"YulBlock","src":"6663:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6680:3:6","nodeType":"YulIdentifier","src":"6680:3:6"},{"name":"length","nativeSrc":"6685:6:6","nodeType":"YulIdentifier","src":"6685:6:6"}],"functionName":{"name":"mstore","nativeSrc":"6673:6:6","nodeType":"YulIdentifier","src":"6673:6:6"},"nativeSrc":"6673:19:6","nodeType":"YulFunctionCall","src":"6673:19:6"},"nativeSrc":"6673:19:6","nodeType":"YulExpressionStatement","src":"6673:19:6"},{"nativeSrc":"6701:29:6","nodeType":"YulAssignment","src":"6701:29:6","value":{"arguments":[{"name":"pos","nativeSrc":"6720:3:6","nodeType":"YulIdentifier","src":"6720:3:6"},{"kind":"number","nativeSrc":"6725:4:6","nodeType":"YulLiteral","src":"6725:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6716:3:6","nodeType":"YulIdentifier","src":"6716:3:6"},"nativeSrc":"6716:14:6","nodeType":"YulFunctionCall","src":"6716:14:6"},"variableNames":[{"name":"updated_pos","nativeSrc":"6701:11:6","nodeType":"YulIdentifier","src":"6701:11:6"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"6542:194:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6635:3:6","nodeType":"YulTypedName","src":"6635:3:6","type":""},{"name":"length","nativeSrc":"6640:6:6","nodeType":"YulTypedName","src":"6640:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6651:11:6","nodeType":"YulTypedName","src":"6651:11:6","type":""}],"src":"6542:194:6"},{"body":{"nativeSrc":"6824:60:6","nodeType":"YulBlock","src":"6824:60:6","statements":[{"nativeSrc":"6834:11:6","nodeType":"YulAssignment","src":"6834:11:6","value":{"name":"ptr","nativeSrc":"6842:3:6","nodeType":"YulIdentifier","src":"6842:3:6"},"variableNames":[{"name":"data","nativeSrc":"6834:4:6","nodeType":"YulIdentifier","src":"6834:4:6"}]},{"nativeSrc":"6855:22:6","nodeType":"YulAssignment","src":"6855:22:6","value":{"arguments":[{"name":"ptr","nativeSrc":"6867:3:6","nodeType":"YulIdentifier","src":"6867:3:6"},{"kind":"number","nativeSrc":"6872:4:6","nodeType":"YulLiteral","src":"6872:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6863:3:6","nodeType":"YulIdentifier","src":"6863:3:6"},"nativeSrc":"6863:14:6","nodeType":"YulFunctionCall","src":"6863:14:6"},"variableNames":[{"name":"data","nativeSrc":"6855:4:6","nodeType":"YulIdentifier","src":"6855:4:6"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"6742:142:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6811:3:6","nodeType":"YulTypedName","src":"6811:3:6","type":""}],"returnVariables":[{"name":"data","nativeSrc":"6819:4:6","nodeType":"YulTypedName","src":"6819:4:6","type":""}],"src":"6742:142:6"},{"body":{"nativeSrc":"6990:96:6","nodeType":"YulBlock","src":"6990:96:6","statements":[{"nativeSrc":"7000:80:6","nodeType":"YulAssignment","src":"7000:80:6","value":{"arguments":[{"name":"value0","nativeSrc":"7068:6:6","nodeType":"YulIdentifier","src":"7068:6:6"},{"name":"pos","nativeSrc":"7076:3:6","nodeType":"YulIdentifier","src":"7076:3:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"7014:53:6","nodeType":"YulIdentifier","src":"7014:53:6"},"nativeSrc":"7014:66:6","nodeType":"YulFunctionCall","src":"7014:66:6"},"variableNames":[{"name":"updatedPos","nativeSrc":"7000:10:6","nodeType":"YulIdentifier","src":"7000:10:6"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"6890:196:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"6963:6:6","nodeType":"YulTypedName","src":"6963:6:6","type":""},{"name":"pos","nativeSrc":"6971:3:6","nodeType":"YulTypedName","src":"6971:3:6","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"6979:10:6","nodeType":"YulTypedName","src":"6979:10:6","type":""}],"src":"6890:196:6"},{"body":{"nativeSrc":"7177:38:6","nodeType":"YulBlock","src":"7177:38:6","statements":[{"nativeSrc":"7187:22:6","nodeType":"YulAssignment","src":"7187:22:6","value":{"arguments":[{"name":"ptr","nativeSrc":"7199:3:6","nodeType":"YulIdentifier","src":"7199:3:6"},{"kind":"number","nativeSrc":"7204:4:6","nodeType":"YulLiteral","src":"7204:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7195:3:6","nodeType":"YulIdentifier","src":"7195:3:6"},"nativeSrc":"7195:14:6","nodeType":"YulFunctionCall","src":"7195:14:6"},"variableNames":[{"name":"next","nativeSrc":"7187:4:6","nodeType":"YulIdentifier","src":"7187:4:6"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"7092:123:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"7164:3:6","nodeType":"YulTypedName","src":"7164:3:6","type":""}],"returnVariables":[{"name":"next","nativeSrc":"7172:4:6","nodeType":"YulTypedName","src":"7172:4:6","type":""}],"src":"7092:123:6"},{"body":{"nativeSrc":"7393:847:6","nodeType":"YulBlock","src":"7393:847:6","statements":[{"nativeSrc":"7403:78:6","nodeType":"YulVariableDeclaration","src":"7403:78:6","value":{"arguments":[{"name":"value","nativeSrc":"7475:5:6","nodeType":"YulIdentifier","src":"7475:5:6"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"7417:57:6","nodeType":"YulIdentifier","src":"7417:57:6"},"nativeSrc":"7417:64:6","nodeType":"YulFunctionCall","src":"7417:64:6"},"variables":[{"name":"length","nativeSrc":"7407:6:6","nodeType":"YulTypedName","src":"7407:6:6","type":""}]},{"nativeSrc":"7490:103:6","nodeType":"YulAssignment","src":"7490:103:6","value":{"arguments":[{"name":"pos","nativeSrc":"7581:3:6","nodeType":"YulIdentifier","src":"7581:3:6"},{"name":"length","nativeSrc":"7586:6:6","nodeType":"YulIdentifier","src":"7586:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"7497:83:6","nodeType":"YulIdentifier","src":"7497:83:6"},"nativeSrc":"7497:96:6","nodeType":"YulFunctionCall","src":"7497:96:6"},"variableNames":[{"name":"pos","nativeSrc":"7490:3:6","nodeType":"YulIdentifier","src":"7490:3:6"}]},{"nativeSrc":"7602:20:6","nodeType":"YulVariableDeclaration","src":"7602:20:6","value":{"name":"pos","nativeSrc":"7619:3:6","nodeType":"YulIdentifier","src":"7619:3:6"},"variables":[{"name":"headStart","nativeSrc":"7606:9:6","nodeType":"YulTypedName","src":"7606:9:6","type":""}]},{"nativeSrc":"7631:39:6","nodeType":"YulVariableDeclaration","src":"7631:39:6","value":{"arguments":[{"name":"pos","nativeSrc":"7647:3:6","nodeType":"YulIdentifier","src":"7647:3:6"},{"arguments":[{"name":"length","nativeSrc":"7656:6:6","nodeType":"YulIdentifier","src":"7656:6:6"},{"kind":"number","nativeSrc":"7664:4:6","nodeType":"YulLiteral","src":"7664:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"7652:3:6","nodeType":"YulIdentifier","src":"7652:3:6"},"nativeSrc":"7652:17:6","nodeType":"YulFunctionCall","src":"7652:17:6"}],"functionName":{"name":"add","nativeSrc":"7643:3:6","nodeType":"YulIdentifier","src":"7643:3:6"},"nativeSrc":"7643:27:6","nodeType":"YulFunctionCall","src":"7643:27:6"},"variables":[{"name":"tail","nativeSrc":"7635:4:6","nodeType":"YulTypedName","src":"7635:4:6","type":""}]},{"nativeSrc":"7679:81:6","nodeType":"YulVariableDeclaration","src":"7679:81:6","value":{"arguments":[{"name":"value","nativeSrc":"7754:5:6","nodeType":"YulIdentifier","src":"7754:5:6"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"7694:59:6","nodeType":"YulIdentifier","src":"7694:59:6"},"nativeSrc":"7694:66:6","nodeType":"YulFunctionCall","src":"7694:66:6"},"variables":[{"name":"baseRef","nativeSrc":"7683:7:6","nodeType":"YulTypedName","src":"7683:7:6","type":""}]},{"nativeSrc":"7769:21:6","nodeType":"YulVariableDeclaration","src":"7769:21:6","value":{"name":"baseRef","nativeSrc":"7783:7:6","nodeType":"YulIdentifier","src":"7783:7:6"},"variables":[{"name":"srcPtr","nativeSrc":"7773:6:6","nodeType":"YulTypedName","src":"7773:6:6","type":""}]},{"body":{"nativeSrc":"7859:336:6","nodeType":"YulBlock","src":"7859:336:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7880:3:6","nodeType":"YulIdentifier","src":"7880:3:6"},{"arguments":[{"name":"tail","nativeSrc":"7889:4:6","nodeType":"YulIdentifier","src":"7889:4:6"},{"name":"headStart","nativeSrc":"7895:9:6","nodeType":"YulIdentifier","src":"7895:9:6"}],"functionName":{"name":"sub","nativeSrc":"7885:3:6","nodeType":"YulIdentifier","src":"7885:3:6"},"nativeSrc":"7885:20:6","nodeType":"YulFunctionCall","src":"7885:20:6"}],"functionName":{"name":"mstore","nativeSrc":"7873:6:6","nodeType":"YulIdentifier","src":"7873:6:6"},"nativeSrc":"7873:33:6","nodeType":"YulFunctionCall","src":"7873:33:6"},"nativeSrc":"7873:33:6","nodeType":"YulExpressionStatement","src":"7873:33:6"},{"nativeSrc":"7919:34:6","nodeType":"YulVariableDeclaration","src":"7919:34:6","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7946:6:6","nodeType":"YulIdentifier","src":"7946:6:6"}],"functionName":{"name":"mload","nativeSrc":"7940:5:6","nodeType":"YulIdentifier","src":"7940:5:6"},"nativeSrc":"7940:13:6","nodeType":"YulFunctionCall","src":"7940:13:6"},"variables":[{"name":"elementValue0","nativeSrc":"7923:13:6","nodeType":"YulTypedName","src":"7923:13:6","type":""}]},{"nativeSrc":"7966:92:6","nodeType":"YulAssignment","src":"7966:92:6","value":{"arguments":[{"name":"elementValue0","nativeSrc":"8038:13:6","nodeType":"YulIdentifier","src":"8038:13:6"},{"name":"tail","nativeSrc":"8053:4:6","nodeType":"YulIdentifier","src":"8053:4:6"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"7974:63:6","nodeType":"YulIdentifier","src":"7974:63:6"},"nativeSrc":"7974:84:6","nodeType":"YulFunctionCall","src":"7974:84:6"},"variableNames":[{"name":"tail","nativeSrc":"7966:4:6","nodeType":"YulIdentifier","src":"7966:4:6"}]},{"nativeSrc":"8071:80:6","nodeType":"YulAssignment","src":"8071:80:6","value":{"arguments":[{"name":"srcPtr","nativeSrc":"8144:6:6","nodeType":"YulIdentifier","src":"8144:6:6"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"8081:62:6","nodeType":"YulIdentifier","src":"8081:62:6"},"nativeSrc":"8081:70:6","nodeType":"YulFunctionCall","src":"8081:70:6"},"variableNames":[{"name":"srcPtr","nativeSrc":"8071:6:6","nodeType":"YulIdentifier","src":"8071:6:6"}]},{"nativeSrc":"8164:21:6","nodeType":"YulAssignment","src":"8164:21:6","value":{"arguments":[{"name":"pos","nativeSrc":"8175:3:6","nodeType":"YulIdentifier","src":"8175:3:6"},{"kind":"number","nativeSrc":"8180:4:6","nodeType":"YulLiteral","src":"8180:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8171:3:6","nodeType":"YulIdentifier","src":"8171:3:6"},"nativeSrc":"8171:14:6","nodeType":"YulFunctionCall","src":"8171:14:6"},"variableNames":[{"name":"pos","nativeSrc":"8164:3:6","nodeType":"YulIdentifier","src":"8164:3:6"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7821:1:6","nodeType":"YulIdentifier","src":"7821:1:6"},{"name":"length","nativeSrc":"7824:6:6","nodeType":"YulIdentifier","src":"7824:6:6"}],"functionName":{"name":"lt","nativeSrc":"7818:2:6","nodeType":"YulIdentifier","src":"7818:2:6"},"nativeSrc":"7818:13:6","nodeType":"YulFunctionCall","src":"7818:13:6"},"nativeSrc":"7799:396:6","nodeType":"YulForLoop","post":{"nativeSrc":"7832:18:6","nodeType":"YulBlock","src":"7832:18:6","statements":[{"nativeSrc":"7834:14:6","nodeType":"YulAssignment","src":"7834:14:6","value":{"arguments":[{"name":"i","nativeSrc":"7843:1:6","nodeType":"YulIdentifier","src":"7843:1:6"},{"kind":"number","nativeSrc":"7846:1:6","nodeType":"YulLiteral","src":"7846:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7839:3:6","nodeType":"YulIdentifier","src":"7839:3:6"},"nativeSrc":"7839:9:6","nodeType":"YulFunctionCall","src":"7839:9:6"},"variableNames":[{"name":"i","nativeSrc":"7834:1:6","nodeType":"YulIdentifier","src":"7834:1:6"}]}]},"pre":{"nativeSrc":"7803:14:6","nodeType":"YulBlock","src":"7803:14:6","statements":[{"nativeSrc":"7805:10:6","nodeType":"YulVariableDeclaration","src":"7805:10:6","value":{"kind":"number","nativeSrc":"7814:1:6","nodeType":"YulLiteral","src":"7814:1:6","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7809:1:6","nodeType":"YulTypedName","src":"7809:1:6","type":""}]}]},"src":"7799:396:6"},{"nativeSrc":"8204:11:6","nodeType":"YulAssignment","src":"8204:11:6","value":{"name":"tail","nativeSrc":"8211:4:6","nodeType":"YulIdentifier","src":"8211:4:6"},"variableNames":[{"name":"pos","nativeSrc":"8204:3:6","nodeType":"YulIdentifier","src":"8204:3:6"}]},{"nativeSrc":"8224:10:6","nodeType":"YulAssignment","src":"8224:10:6","value":{"name":"pos","nativeSrc":"8231:3:6","nodeType":"YulIdentifier","src":"8231:3:6"},"variableNames":[{"name":"end","nativeSrc":"8224:3:6","nodeType":"YulIdentifier","src":"8224:3:6"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"7249:991:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7372:5:6","nodeType":"YulTypedName","src":"7372:5:6","type":""},{"name":"pos","nativeSrc":"7379:3:6","nodeType":"YulTypedName","src":"7379:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7388:3:6","nodeType":"YulTypedName","src":"7388:3:6","type":""}],"src":"7249:991:6"},{"body":{"nativeSrc":"8594:800:6","nodeType":"YulBlock","src":"8594:800:6","statements":[{"nativeSrc":"8604:27:6","nodeType":"YulAssignment","src":"8604:27:6","value":{"arguments":[{"name":"headStart","nativeSrc":"8616:9:6","nodeType":"YulIdentifier","src":"8616:9:6"},{"kind":"number","nativeSrc":"8627:3:6","nodeType":"YulLiteral","src":"8627:3:6","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"8612:3:6","nodeType":"YulIdentifier","src":"8612:3:6"},"nativeSrc":"8612:19:6","nodeType":"YulFunctionCall","src":"8612:19:6"},"variableNames":[{"name":"tail","nativeSrc":"8604:4:6","nodeType":"YulIdentifier","src":"8604:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8685:6:6","nodeType":"YulIdentifier","src":"8685:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"8698:9:6","nodeType":"YulIdentifier","src":"8698:9:6"},{"kind":"number","nativeSrc":"8709:1:6","nodeType":"YulLiteral","src":"8709:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8694:3:6","nodeType":"YulIdentifier","src":"8694:3:6"},"nativeSrc":"8694:17:6","nodeType":"YulFunctionCall","src":"8694:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8641:43:6","nodeType":"YulIdentifier","src":"8641:43:6"},"nativeSrc":"8641:71:6","nodeType":"YulFunctionCall","src":"8641:71:6"},"nativeSrc":"8641:71:6","nodeType":"YulExpressionStatement","src":"8641:71:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8733:9:6","nodeType":"YulIdentifier","src":"8733:9:6"},{"kind":"number","nativeSrc":"8744:2:6","nodeType":"YulLiteral","src":"8744:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8729:3:6","nodeType":"YulIdentifier","src":"8729:3:6"},"nativeSrc":"8729:18:6","nodeType":"YulFunctionCall","src":"8729:18:6"},{"arguments":[{"name":"tail","nativeSrc":"8753:4:6","nodeType":"YulIdentifier","src":"8753:4:6"},{"name":"headStart","nativeSrc":"8759:9:6","nodeType":"YulIdentifier","src":"8759:9:6"}],"functionName":{"name":"sub","nativeSrc":"8749:3:6","nodeType":"YulIdentifier","src":"8749:3:6"},"nativeSrc":"8749:20:6","nodeType":"YulFunctionCall","src":"8749:20:6"}],"functionName":{"name":"mstore","nativeSrc":"8722:6:6","nodeType":"YulIdentifier","src":"8722:6:6"},"nativeSrc":"8722:48:6","nodeType":"YulFunctionCall","src":"8722:48:6"},"nativeSrc":"8722:48:6","nodeType":"YulExpressionStatement","src":"8722:48:6"},{"nativeSrc":"8779:86:6","nodeType":"YulAssignment","src":"8779:86:6","value":{"arguments":[{"name":"value1","nativeSrc":"8851:6:6","nodeType":"YulIdentifier","src":"8851:6:6"},{"name":"tail","nativeSrc":"8860:4:6","nodeType":"YulIdentifier","src":"8860:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8787:63:6","nodeType":"YulIdentifier","src":"8787:63:6"},"nativeSrc":"8787:78:6","nodeType":"YulFunctionCall","src":"8787:78:6"},"variableNames":[{"name":"tail","nativeSrc":"8779:4:6","nodeType":"YulIdentifier","src":"8779:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8886:9:6","nodeType":"YulIdentifier","src":"8886:9:6"},{"kind":"number","nativeSrc":"8897:2:6","nodeType":"YulLiteral","src":"8897:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8882:3:6","nodeType":"YulIdentifier","src":"8882:3:6"},"nativeSrc":"8882:18:6","nodeType":"YulFunctionCall","src":"8882:18:6"},{"arguments":[{"name":"tail","nativeSrc":"8906:4:6","nodeType":"YulIdentifier","src":"8906:4:6"},{"name":"headStart","nativeSrc":"8912:9:6","nodeType":"YulIdentifier","src":"8912:9:6"}],"functionName":{"name":"sub","nativeSrc":"8902:3:6","nodeType":"YulIdentifier","src":"8902:3:6"},"nativeSrc":"8902:20:6","nodeType":"YulFunctionCall","src":"8902:20:6"}],"functionName":{"name":"mstore","nativeSrc":"8875:6:6","nodeType":"YulIdentifier","src":"8875:6:6"},"nativeSrc":"8875:48:6","nodeType":"YulFunctionCall","src":"8875:48:6"},"nativeSrc":"8875:48:6","nodeType":"YulExpressionStatement","src":"8875:48:6"},{"nativeSrc":"8932:86:6","nodeType":"YulAssignment","src":"8932:86:6","value":{"arguments":[{"name":"value2","nativeSrc":"9004:6:6","nodeType":"YulIdentifier","src":"9004:6:6"},{"name":"tail","nativeSrc":"9013:4:6","nodeType":"YulIdentifier","src":"9013:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8940:63:6","nodeType":"YulIdentifier","src":"8940:63:6"},"nativeSrc":"8940:78:6","nodeType":"YulFunctionCall","src":"8940:78:6"},"variableNames":[{"name":"tail","nativeSrc":"8932:4:6","nodeType":"YulIdentifier","src":"8932:4:6"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"9072:6:6","nodeType":"YulIdentifier","src":"9072:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"9085:9:6","nodeType":"YulIdentifier","src":"9085:9:6"},{"kind":"number","nativeSrc":"9096:2:6","nodeType":"YulLiteral","src":"9096:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9081:3:6","nodeType":"YulIdentifier","src":"9081:3:6"},"nativeSrc":"9081:18:6","nodeType":"YulFunctionCall","src":"9081:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9028:43:6","nodeType":"YulIdentifier","src":"9028:43:6"},"nativeSrc":"9028:72:6","nodeType":"YulFunctionCall","src":"9028:72:6"},"nativeSrc":"9028:72:6","nodeType":"YulExpressionStatement","src":"9028:72:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9121:9:6","nodeType":"YulIdentifier","src":"9121:9:6"},{"kind":"number","nativeSrc":"9132:3:6","nodeType":"YulLiteral","src":"9132:3:6","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9117:3:6","nodeType":"YulIdentifier","src":"9117:3:6"},"nativeSrc":"9117:19:6","nodeType":"YulFunctionCall","src":"9117:19:6"},{"arguments":[{"name":"tail","nativeSrc":"9142:4:6","nodeType":"YulIdentifier","src":"9142:4:6"},{"name":"headStart","nativeSrc":"9148:9:6","nodeType":"YulIdentifier","src":"9148:9:6"}],"functionName":{"name":"sub","nativeSrc":"9138:3:6","nodeType":"YulIdentifier","src":"9138:3:6"},"nativeSrc":"9138:20:6","nodeType":"YulFunctionCall","src":"9138:20:6"}],"functionName":{"name":"mstore","nativeSrc":"9110:6:6","nodeType":"YulIdentifier","src":"9110:6:6"},"nativeSrc":"9110:49:6","nodeType":"YulFunctionCall","src":"9110:49:6"},"nativeSrc":"9110:49:6","nodeType":"YulExpressionStatement","src":"9110:49:6"},{"nativeSrc":"9168:136:6","nodeType":"YulAssignment","src":"9168:136:6","value":{"arguments":[{"name":"value4","nativeSrc":"9290:6:6","nodeType":"YulIdentifier","src":"9290:6:6"},{"name":"tail","nativeSrc":"9299:4:6","nodeType":"YulIdentifier","src":"9299:4:6"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"9176:113:6","nodeType":"YulIdentifier","src":"9176:113:6"},"nativeSrc":"9176:128:6","nodeType":"YulFunctionCall","src":"9176:128:6"},"variableNames":[{"name":"tail","nativeSrc":"9168:4:6","nodeType":"YulIdentifier","src":"9168:4:6"}]},{"expression":{"arguments":[{"name":"value5","nativeSrc":"9358:6:6","nodeType":"YulIdentifier","src":"9358:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"9371:9:6","nodeType":"YulIdentifier","src":"9371:9:6"},{"kind":"number","nativeSrc":"9382:3:6","nodeType":"YulLiteral","src":"9382:3:6","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"9367:3:6","nodeType":"YulIdentifier","src":"9367:3:6"},"nativeSrc":"9367:19:6","nodeType":"YulFunctionCall","src":"9367:19:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9314:43:6","nodeType":"YulIdentifier","src":"9314:43:6"},"nativeSrc":"9314:73:6","nodeType":"YulFunctionCall","src":"9314:73:6"},"nativeSrc":"9314:73:6","nodeType":"YulExpressionStatement","src":"9314:73:6"}]},"name":"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"8246:1148:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8526:9:6","nodeType":"YulTypedName","src":"8526:9:6","type":""},{"name":"value5","nativeSrc":"8538:6:6","nodeType":"YulTypedName","src":"8538:6:6","type":""},{"name":"value4","nativeSrc":"8546:6:6","nodeType":"YulTypedName","src":"8546:6:6","type":""},{"name":"value3","nativeSrc":"8554:6:6","nodeType":"YulTypedName","src":"8554:6:6","type":""},{"name":"value2","nativeSrc":"8562:6:6","nodeType":"YulTypedName","src":"8562:6:6","type":""},{"name":"value1","nativeSrc":"8570:6:6","nodeType":"YulTypedName","src":"8570:6:6","type":""},{"name":"value0","nativeSrc":"8578:6:6","nodeType":"YulTypedName","src":"8578:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8589:4:6","nodeType":"YulTypedName","src":"8589:4:6","type":""}],"src":"8246:1148:6"},{"body":{"nativeSrc":"9459:50:6","nodeType":"YulBlock","src":"9459:50:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9476:3:6","nodeType":"YulIdentifier","src":"9476:3:6"},{"arguments":[{"name":"value","nativeSrc":"9496:5:6","nodeType":"YulIdentifier","src":"9496:5:6"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"9481:14:6","nodeType":"YulIdentifier","src":"9481:14:6"},"nativeSrc":"9481:21:6","nodeType":"YulFunctionCall","src":"9481:21:6"}],"functionName":{"name":"mstore","nativeSrc":"9469:6:6","nodeType":"YulIdentifier","src":"9469:6:6"},"nativeSrc":"9469:34:6","nodeType":"YulFunctionCall","src":"9469:34:6"},"nativeSrc":"9469:34:6","nodeType":"YulExpressionStatement","src":"9469:34:6"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"9400:109:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9447:5:6","nodeType":"YulTypedName","src":"9447:5:6","type":""},{"name":"pos","nativeSrc":"9454:3:6","nodeType":"YulTypedName","src":"9454:3:6","type":""}],"src":"9400:109:6"},{"body":{"nativeSrc":"9787:673:6","nodeType":"YulBlock","src":"9787:673:6","statements":[{"nativeSrc":"9797:27:6","nodeType":"YulAssignment","src":"9797:27:6","value":{"arguments":[{"name":"headStart","nativeSrc":"9809:9:6","nodeType":"YulIdentifier","src":"9809:9:6"},{"kind":"number","nativeSrc":"9820:3:6","nodeType":"YulLiteral","src":"9820:3:6","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"9805:3:6","nodeType":"YulIdentifier","src":"9805:3:6"},"nativeSrc":"9805:19:6","nodeType":"YulFunctionCall","src":"9805:19:6"},"variableNames":[{"name":"tail","nativeSrc":"9797:4:6","nodeType":"YulIdentifier","src":"9797:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9878:6:6","nodeType":"YulIdentifier","src":"9878:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"9891:9:6","nodeType":"YulIdentifier","src":"9891:9:6"},{"kind":"number","nativeSrc":"9902:1:6","nodeType":"YulLiteral","src":"9902:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9887:3:6","nodeType":"YulIdentifier","src":"9887:3:6"},"nativeSrc":"9887:17:6","nodeType":"YulFunctionCall","src":"9887:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9834:43:6","nodeType":"YulIdentifier","src":"9834:43:6"},"nativeSrc":"9834:71:6","nodeType":"YulFunctionCall","src":"9834:71:6"},"nativeSrc":"9834:71:6","nodeType":"YulExpressionStatement","src":"9834:71:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9926:9:6","nodeType":"YulIdentifier","src":"9926:9:6"},{"kind":"number","nativeSrc":"9937:2:6","nodeType":"YulLiteral","src":"9937:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9922:3:6","nodeType":"YulIdentifier","src":"9922:3:6"},"nativeSrc":"9922:18:6","nodeType":"YulFunctionCall","src":"9922:18:6"},{"arguments":[{"name":"tail","nativeSrc":"9946:4:6","nodeType":"YulIdentifier","src":"9946:4:6"},{"name":"headStart","nativeSrc":"9952:9:6","nodeType":"YulIdentifier","src":"9952:9:6"}],"functionName":{"name":"sub","nativeSrc":"9942:3:6","nodeType":"YulIdentifier","src":"9942:3:6"},"nativeSrc":"9942:20:6","nodeType":"YulFunctionCall","src":"9942:20:6"}],"functionName":{"name":"mstore","nativeSrc":"9915:6:6","nodeType":"YulIdentifier","src":"9915:6:6"},"nativeSrc":"9915:48:6","nodeType":"YulFunctionCall","src":"9915:48:6"},"nativeSrc":"9915:48:6","nodeType":"YulExpressionStatement","src":"9915:48:6"},{"nativeSrc":"9972:86:6","nodeType":"YulAssignment","src":"9972:86:6","value":{"arguments":[{"name":"value1","nativeSrc":"10044:6:6","nodeType":"YulIdentifier","src":"10044:6:6"},{"name":"tail","nativeSrc":"10053:4:6","nodeType":"YulIdentifier","src":"10053:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9980:63:6","nodeType":"YulIdentifier","src":"9980:63:6"},"nativeSrc":"9980:78:6","nodeType":"YulFunctionCall","src":"9980:78:6"},"variableNames":[{"name":"tail","nativeSrc":"9972:4:6","nodeType":"YulIdentifier","src":"9972:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10079:9:6","nodeType":"YulIdentifier","src":"10079:9:6"},{"kind":"number","nativeSrc":"10090:2:6","nodeType":"YulLiteral","src":"10090:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10075:3:6","nodeType":"YulIdentifier","src":"10075:3:6"},"nativeSrc":"10075:18:6","nodeType":"YulFunctionCall","src":"10075:18:6"},{"arguments":[{"name":"tail","nativeSrc":"10099:4:6","nodeType":"YulIdentifier","src":"10099:4:6"},{"name":"headStart","nativeSrc":"10105:9:6","nodeType":"YulIdentifier","src":"10105:9:6"}],"functionName":{"name":"sub","nativeSrc":"10095:3:6","nodeType":"YulIdentifier","src":"10095:3:6"},"nativeSrc":"10095:20:6","nodeType":"YulFunctionCall","src":"10095:20:6"}],"functionName":{"name":"mstore","nativeSrc":"10068:6:6","nodeType":"YulIdentifier","src":"10068:6:6"},"nativeSrc":"10068:48:6","nodeType":"YulFunctionCall","src":"10068:48:6"},"nativeSrc":"10068:48:6","nodeType":"YulExpressionStatement","src":"10068:48:6"},{"nativeSrc":"10125:86:6","nodeType":"YulAssignment","src":"10125:86:6","value":{"arguments":[{"name":"value2","nativeSrc":"10197:6:6","nodeType":"YulIdentifier","src":"10197:6:6"},{"name":"tail","nativeSrc":"10206:4:6","nodeType":"YulIdentifier","src":"10206:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10133:63:6","nodeType":"YulIdentifier","src":"10133:63:6"},"nativeSrc":"10133:78:6","nodeType":"YulFunctionCall","src":"10133:78:6"},"variableNames":[{"name":"tail","nativeSrc":"10125:4:6","nodeType":"YulIdentifier","src":"10125:4:6"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"10265:6:6","nodeType":"YulIdentifier","src":"10265:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"10278:9:6","nodeType":"YulIdentifier","src":"10278:9:6"},{"kind":"number","nativeSrc":"10289:2:6","nodeType":"YulLiteral","src":"10289:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10274:3:6","nodeType":"YulIdentifier","src":"10274:3:6"},"nativeSrc":"10274:18:6","nodeType":"YulFunctionCall","src":"10274:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10221:43:6","nodeType":"YulIdentifier","src":"10221:43:6"},"nativeSrc":"10221:72:6","nodeType":"YulFunctionCall","src":"10221:72:6"},"nativeSrc":"10221:72:6","nodeType":"YulExpressionStatement","src":"10221:72:6"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"10341:6:6","nodeType":"YulIdentifier","src":"10341:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"10354:9:6","nodeType":"YulIdentifier","src":"10354:9:6"},{"kind":"number","nativeSrc":"10365:3:6","nodeType":"YulLiteral","src":"10365:3:6","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10350:3:6","nodeType":"YulIdentifier","src":"10350:3:6"},"nativeSrc":"10350:19:6","nodeType":"YulFunctionCall","src":"10350:19:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"10303:37:6","nodeType":"YulIdentifier","src":"10303:37:6"},"nativeSrc":"10303:67:6","nodeType":"YulFunctionCall","src":"10303:67:6"},"nativeSrc":"10303:67:6","nodeType":"YulExpressionStatement","src":"10303:67:6"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"10424:6:6","nodeType":"YulIdentifier","src":"10424:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"10437:9:6","nodeType":"YulIdentifier","src":"10437:9:6"},{"kind":"number","nativeSrc":"10448:3:6","nodeType":"YulLiteral","src":"10448:3:6","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"10433:3:6","nodeType":"YulIdentifier","src":"10433:3:6"},"nativeSrc":"10433:19:6","nodeType":"YulFunctionCall","src":"10433:19:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10380:43:6","nodeType":"YulIdentifier","src":"10380:43:6"},"nativeSrc":"10380:73:6","nodeType":"YulFunctionCall","src":"10380:73:6"},"nativeSrc":"10380:73:6","nodeType":"YulExpressionStatement","src":"10380:73:6"}]},"name":"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_uint256__fromStack_reversed","nativeSrc":"9515:945:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9719:9:6","nodeType":"YulTypedName","src":"9719:9:6","type":""},{"name":"value5","nativeSrc":"9731:6:6","nodeType":"YulTypedName","src":"9731:6:6","type":""},{"name":"value4","nativeSrc":"9739:6:6","nodeType":"YulTypedName","src":"9739:6:6","type":""},{"name":"value3","nativeSrc":"9747:6:6","nodeType":"YulTypedName","src":"9747:6:6","type":""},{"name":"value2","nativeSrc":"9755:6:6","nodeType":"YulTypedName","src":"9755:6:6","type":""},{"name":"value1","nativeSrc":"9763:6:6","nodeType":"YulTypedName","src":"9763:6:6","type":""},{"name":"value0","nativeSrc":"9771:6:6","nodeType":"YulTypedName","src":"9771:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9782:4:6","nodeType":"YulTypedName","src":"9782:4:6","type":""}],"src":"9515:945:6"},{"body":{"nativeSrc":"10532:263:6","nodeType":"YulBlock","src":"10532:263:6","statements":[{"body":{"nativeSrc":"10578:83:6","nodeType":"YulBlock","src":"10578:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10580:77:6","nodeType":"YulIdentifier","src":"10580:77:6"},"nativeSrc":"10580:79:6","nodeType":"YulFunctionCall","src":"10580:79:6"},"nativeSrc":"10580:79:6","nodeType":"YulExpressionStatement","src":"10580:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10553:7:6","nodeType":"YulIdentifier","src":"10553:7:6"},{"name":"headStart","nativeSrc":"10562:9:6","nodeType":"YulIdentifier","src":"10562:9:6"}],"functionName":{"name":"sub","nativeSrc":"10549:3:6","nodeType":"YulIdentifier","src":"10549:3:6"},"nativeSrc":"10549:23:6","nodeType":"YulFunctionCall","src":"10549:23:6"},{"kind":"number","nativeSrc":"10574:2:6","nodeType":"YulLiteral","src":"10574:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"10545:3:6","nodeType":"YulIdentifier","src":"10545:3:6"},"nativeSrc":"10545:32:6","nodeType":"YulFunctionCall","src":"10545:32:6"},"nativeSrc":"10542:119:6","nodeType":"YulIf","src":"10542:119:6"},{"nativeSrc":"10671:117:6","nodeType":"YulBlock","src":"10671:117:6","statements":[{"nativeSrc":"10686:15:6","nodeType":"YulVariableDeclaration","src":"10686:15:6","value":{"kind":"number","nativeSrc":"10700:1:6","nodeType":"YulLiteral","src":"10700:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10690:6:6","nodeType":"YulTypedName","src":"10690:6:6","type":""}]},{"nativeSrc":"10715:63:6","nodeType":"YulAssignment","src":"10715:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10750:9:6","nodeType":"YulIdentifier","src":"10750:9:6"},{"name":"offset","nativeSrc":"10761:6:6","nodeType":"YulIdentifier","src":"10761:6:6"}],"functionName":{"name":"add","nativeSrc":"10746:3:6","nodeType":"YulIdentifier","src":"10746:3:6"},"nativeSrc":"10746:22:6","nodeType":"YulFunctionCall","src":"10746:22:6"},{"name":"dataEnd","nativeSrc":"10770:7:6","nodeType":"YulIdentifier","src":"10770:7:6"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10725:20:6","nodeType":"YulIdentifier","src":"10725:20:6"},"nativeSrc":"10725:53:6","nodeType":"YulFunctionCall","src":"10725:53:6"},"variableNames":[{"name":"value0","nativeSrc":"10715:6:6","nodeType":"YulIdentifier","src":"10715:6:6"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"10466:329:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10502:9:6","nodeType":"YulTypedName","src":"10502:9:6","type":""},{"name":"dataEnd","nativeSrc":"10513:7:6","nodeType":"YulTypedName","src":"10513:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10525:6:6","nodeType":"YulTypedName","src":"10525:6:6","type":""}],"src":"10466:329:6"},{"body":{"nativeSrc":"10875:40:6","nodeType":"YulBlock","src":"10875:40:6","statements":[{"nativeSrc":"10886:22:6","nodeType":"YulAssignment","src":"10886:22:6","value":{"arguments":[{"name":"value","nativeSrc":"10902:5:6","nodeType":"YulIdentifier","src":"10902:5:6"}],"functionName":{"name":"mload","nativeSrc":"10896:5:6","nodeType":"YulIdentifier","src":"10896:5:6"},"nativeSrc":"10896:12:6","nodeType":"YulFunctionCall","src":"10896:12:6"},"variableNames":[{"name":"length","nativeSrc":"10886:6:6","nodeType":"YulIdentifier","src":"10886:6:6"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10801:114:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10858:5:6","nodeType":"YulTypedName","src":"10858:5:6","type":""}],"returnVariables":[{"name":"length","nativeSrc":"10868:6:6","nodeType":"YulTypedName","src":"10868:6:6","type":""}],"src":"10801:114:6"},{"body":{"nativeSrc":"11032:73:6","nodeType":"YulBlock","src":"11032:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11049:3:6","nodeType":"YulIdentifier","src":"11049:3:6"},{"name":"length","nativeSrc":"11054:6:6","nodeType":"YulIdentifier","src":"11054:6:6"}],"functionName":{"name":"mstore","nativeSrc":"11042:6:6","nodeType":"YulIdentifier","src":"11042:6:6"},"nativeSrc":"11042:19:6","nodeType":"YulFunctionCall","src":"11042:19:6"},"nativeSrc":"11042:19:6","nodeType":"YulExpressionStatement","src":"11042:19:6"},{"nativeSrc":"11070:29:6","nodeType":"YulAssignment","src":"11070:29:6","value":{"arguments":[{"name":"pos","nativeSrc":"11089:3:6","nodeType":"YulIdentifier","src":"11089:3:6"},{"kind":"number","nativeSrc":"11094:4:6","nodeType":"YulLiteral","src":"11094:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11085:3:6","nodeType":"YulIdentifier","src":"11085:3:6"},"nativeSrc":"11085:14:6","nodeType":"YulFunctionCall","src":"11085:14:6"},"variableNames":[{"name":"updated_pos","nativeSrc":"11070:11:6","nodeType":"YulIdentifier","src":"11070:11:6"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"10921:184:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11004:3:6","nodeType":"YulTypedName","src":"11004:3:6","type":""},{"name":"length","nativeSrc":"11009:6:6","nodeType":"YulTypedName","src":"11009:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"11020:11:6","nodeType":"YulTypedName","src":"11020:11:6","type":""}],"src":"10921:184:6"},{"body":{"nativeSrc":"11183:60:6","nodeType":"YulBlock","src":"11183:60:6","statements":[{"nativeSrc":"11193:11:6","nodeType":"YulAssignment","src":"11193:11:6","value":{"name":"ptr","nativeSrc":"11201:3:6","nodeType":"YulIdentifier","src":"11201:3:6"},"variableNames":[{"name":"data","nativeSrc":"11193:4:6","nodeType":"YulIdentifier","src":"11193:4:6"}]},{"nativeSrc":"11214:22:6","nodeType":"YulAssignment","src":"11214:22:6","value":{"arguments":[{"name":"ptr","nativeSrc":"11226:3:6","nodeType":"YulIdentifier","src":"11226:3:6"},{"kind":"number","nativeSrc":"11231:4:6","nodeType":"YulLiteral","src":"11231:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11222:3:6","nodeType":"YulIdentifier","src":"11222:3:6"},"nativeSrc":"11222:14:6","nodeType":"YulFunctionCall","src":"11222:14:6"},"variableNames":[{"name":"data","nativeSrc":"11214:4:6","nodeType":"YulIdentifier","src":"11214:4:6"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"11111:132:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"11170:3:6","nodeType":"YulTypedName","src":"11170:3:6","type":""}],"returnVariables":[{"name":"data","nativeSrc":"11178:4:6","nodeType":"YulTypedName","src":"11178:4:6","type":""}],"src":"11111:132:6"},{"body":{"nativeSrc":"11329:99:6","nodeType":"YulBlock","src":"11329:99:6","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"11373:6:6","nodeType":"YulIdentifier","src":"11373:6:6"},{"name":"pos","nativeSrc":"11381:3:6","nodeType":"YulIdentifier","src":"11381:3:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"11339:33:6","nodeType":"YulIdentifier","src":"11339:33:6"},"nativeSrc":"11339:46:6","nodeType":"YulFunctionCall","src":"11339:46:6"},"nativeSrc":"11339:46:6","nodeType":"YulExpressionStatement","src":"11339:46:6"},{"nativeSrc":"11394:28:6","nodeType":"YulAssignment","src":"11394:28:6","value":{"arguments":[{"name":"pos","nativeSrc":"11412:3:6","nodeType":"YulIdentifier","src":"11412:3:6"},{"kind":"number","nativeSrc":"11417:4:6","nodeType":"YulLiteral","src":"11417:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11408:3:6","nodeType":"YulIdentifier","src":"11408:3:6"},"nativeSrc":"11408:14:6","nodeType":"YulFunctionCall","src":"11408:14:6"},"variableNames":[{"name":"updatedPos","nativeSrc":"11394:10:6","nodeType":"YulIdentifier","src":"11394:10:6"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"11249:179:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"11302:6:6","nodeType":"YulTypedName","src":"11302:6:6","type":""},{"name":"pos","nativeSrc":"11310:3:6","nodeType":"YulTypedName","src":"11310:3:6","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"11318:10:6","nodeType":"YulTypedName","src":"11318:10:6","type":""}],"src":"11249:179:6"},{"body":{"nativeSrc":"11509:38:6","nodeType":"YulBlock","src":"11509:38:6","statements":[{"nativeSrc":"11519:22:6","nodeType":"YulAssignment","src":"11519:22:6","value":{"arguments":[{"name":"ptr","nativeSrc":"11531:3:6","nodeType":"YulIdentifier","src":"11531:3:6"},{"kind":"number","nativeSrc":"11536:4:6","nodeType":"YulLiteral","src":"11536:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11527:3:6","nodeType":"YulIdentifier","src":"11527:3:6"},"nativeSrc":"11527:14:6","nodeType":"YulFunctionCall","src":"11527:14:6"},"variableNames":[{"name":"next","nativeSrc":"11519:4:6","nodeType":"YulIdentifier","src":"11519:4:6"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"11434:113:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"11496:3:6","nodeType":"YulTypedName","src":"11496:3:6","type":""}],"returnVariables":[{"name":"next","nativeSrc":"11504:4:6","nodeType":"YulTypedName","src":"11504:4:6","type":""}],"src":"11434:113:6"},{"body":{"nativeSrc":"11707:608:6","nodeType":"YulBlock","src":"11707:608:6","statements":[{"nativeSrc":"11717:68:6","nodeType":"YulVariableDeclaration","src":"11717:68:6","value":{"arguments":[{"name":"value","nativeSrc":"11779:5:6","nodeType":"YulIdentifier","src":"11779:5:6"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"11731:47:6","nodeType":"YulIdentifier","src":"11731:47:6"},"nativeSrc":"11731:54:6","nodeType":"YulFunctionCall","src":"11731:54:6"},"variables":[{"name":"length","nativeSrc":"11721:6:6","nodeType":"YulTypedName","src":"11721:6:6","type":""}]},{"nativeSrc":"11794:93:6","nodeType":"YulAssignment","src":"11794:93:6","value":{"arguments":[{"name":"pos","nativeSrc":"11875:3:6","nodeType":"YulIdentifier","src":"11875:3:6"},{"name":"length","nativeSrc":"11880:6:6","nodeType":"YulIdentifier","src":"11880:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"11801:73:6","nodeType":"YulIdentifier","src":"11801:73:6"},"nativeSrc":"11801:86:6","nodeType":"YulFunctionCall","src":"11801:86:6"},"variableNames":[{"name":"pos","nativeSrc":"11794:3:6","nodeType":"YulIdentifier","src":"11794:3:6"}]},{"nativeSrc":"11896:71:6","nodeType":"YulVariableDeclaration","src":"11896:71:6","value":{"arguments":[{"name":"value","nativeSrc":"11961:5:6","nodeType":"YulIdentifier","src":"11961:5:6"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"11911:49:6","nodeType":"YulIdentifier","src":"11911:49:6"},"nativeSrc":"11911:56:6","nodeType":"YulFunctionCall","src":"11911:56:6"},"variables":[{"name":"baseRef","nativeSrc":"11900:7:6","nodeType":"YulTypedName","src":"11900:7:6","type":""}]},{"nativeSrc":"11976:21:6","nodeType":"YulVariableDeclaration","src":"11976:21:6","value":{"name":"baseRef","nativeSrc":"11990:7:6","nodeType":"YulIdentifier","src":"11990:7:6"},"variables":[{"name":"srcPtr","nativeSrc":"11980:6:6","nodeType":"YulTypedName","src":"11980:6:6","type":""}]},{"body":{"nativeSrc":"12066:224:6","nodeType":"YulBlock","src":"12066:224:6","statements":[{"nativeSrc":"12080:34:6","nodeType":"YulVariableDeclaration","src":"12080:34:6","value":{"arguments":[{"name":"srcPtr","nativeSrc":"12107:6:6","nodeType":"YulIdentifier","src":"12107:6:6"}],"functionName":{"name":"mload","nativeSrc":"12101:5:6","nodeType":"YulIdentifier","src":"12101:5:6"},"nativeSrc":"12101:13:6","nodeType":"YulFunctionCall","src":"12101:13:6"},"variables":[{"name":"elementValue0","nativeSrc":"12084:13:6","nodeType":"YulTypedName","src":"12084:13:6","type":""}]},{"nativeSrc":"12127:70:6","nodeType":"YulAssignment","src":"12127:70:6","value":{"arguments":[{"name":"elementValue0","nativeSrc":"12178:13:6","nodeType":"YulIdentifier","src":"12178:13:6"},{"name":"pos","nativeSrc":"12193:3:6","nodeType":"YulIdentifier","src":"12193:3:6"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"12134:43:6","nodeType":"YulIdentifier","src":"12134:43:6"},"nativeSrc":"12134:63:6","nodeType":"YulFunctionCall","src":"12134:63:6"},"variableNames":[{"name":"pos","nativeSrc":"12127:3:6","nodeType":"YulIdentifier","src":"12127:3:6"}]},{"nativeSrc":"12210:70:6","nodeType":"YulAssignment","src":"12210:70:6","value":{"arguments":[{"name":"srcPtr","nativeSrc":"12273:6:6","nodeType":"YulIdentifier","src":"12273:6:6"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"12220:52:6","nodeType":"YulIdentifier","src":"12220:52:6"},"nativeSrc":"12220:60:6","nodeType":"YulFunctionCall","src":"12220:60:6"},"variableNames":[{"name":"srcPtr","nativeSrc":"12210:6:6","nodeType":"YulIdentifier","src":"12210:6:6"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"12028:1:6","nodeType":"YulIdentifier","src":"12028:1:6"},{"name":"length","nativeSrc":"12031:6:6","nodeType":"YulIdentifier","src":"12031:6:6"}],"functionName":{"name":"lt","nativeSrc":"12025:2:6","nodeType":"YulIdentifier","src":"12025:2:6"},"nativeSrc":"12025:13:6","nodeType":"YulFunctionCall","src":"12025:13:6"},"nativeSrc":"12006:284:6","nodeType":"YulForLoop","post":{"nativeSrc":"12039:18:6","nodeType":"YulBlock","src":"12039:18:6","statements":[{"nativeSrc":"12041:14:6","nodeType":"YulAssignment","src":"12041:14:6","value":{"arguments":[{"name":"i","nativeSrc":"12050:1:6","nodeType":"YulIdentifier","src":"12050:1:6"},{"kind":"number","nativeSrc":"12053:1:6","nodeType":"YulLiteral","src":"12053:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"12046:3:6","nodeType":"YulIdentifier","src":"12046:3:6"},"nativeSrc":"12046:9:6","nodeType":"YulFunctionCall","src":"12046:9:6"},"variableNames":[{"name":"i","nativeSrc":"12041:1:6","nodeType":"YulIdentifier","src":"12041:1:6"}]}]},"pre":{"nativeSrc":"12010:14:6","nodeType":"YulBlock","src":"12010:14:6","statements":[{"nativeSrc":"12012:10:6","nodeType":"YulVariableDeclaration","src":"12012:10:6","value":{"kind":"number","nativeSrc":"12021:1:6","nodeType":"YulLiteral","src":"12021:1:6","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"12016:1:6","nodeType":"YulTypedName","src":"12016:1:6","type":""}]}]},"src":"12006:284:6"},{"nativeSrc":"12299:10:6","nodeType":"YulAssignment","src":"12299:10:6","value":{"name":"pos","nativeSrc":"12306:3:6","nodeType":"YulIdentifier","src":"12306:3:6"},"variableNames":[{"name":"end","nativeSrc":"12299:3:6","nodeType":"YulIdentifier","src":"12299:3:6"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"11583:732:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11686:5:6","nodeType":"YulTypedName","src":"11686:5:6","type":""},{"name":"pos","nativeSrc":"11693:3:6","nodeType":"YulTypedName","src":"11693:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11702:3:6","nodeType":"YulTypedName","src":"11702:3:6","type":""}],"src":"11583:732:6"},{"body":{"nativeSrc":"12469:225:6","nodeType":"YulBlock","src":"12469:225:6","statements":[{"nativeSrc":"12479:26:6","nodeType":"YulAssignment","src":"12479:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"12491:9:6","nodeType":"YulIdentifier","src":"12491:9:6"},{"kind":"number","nativeSrc":"12502:2:6","nodeType":"YulLiteral","src":"12502:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12487:3:6","nodeType":"YulIdentifier","src":"12487:3:6"},"nativeSrc":"12487:18:6","nodeType":"YulFunctionCall","src":"12487:18:6"},"variableNames":[{"name":"tail","nativeSrc":"12479:4:6","nodeType":"YulIdentifier","src":"12479:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12526:9:6","nodeType":"YulIdentifier","src":"12526:9:6"},{"kind":"number","nativeSrc":"12537:1:6","nodeType":"YulLiteral","src":"12537:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12522:3:6","nodeType":"YulIdentifier","src":"12522:3:6"},"nativeSrc":"12522:17:6","nodeType":"YulFunctionCall","src":"12522:17:6"},{"arguments":[{"name":"tail","nativeSrc":"12545:4:6","nodeType":"YulIdentifier","src":"12545:4:6"},{"name":"headStart","nativeSrc":"12551:9:6","nodeType":"YulIdentifier","src":"12551:9:6"}],"functionName":{"name":"sub","nativeSrc":"12541:3:6","nodeType":"YulIdentifier","src":"12541:3:6"},"nativeSrc":"12541:20:6","nodeType":"YulFunctionCall","src":"12541:20:6"}],"functionName":{"name":"mstore","nativeSrc":"12515:6:6","nodeType":"YulIdentifier","src":"12515:6:6"},"nativeSrc":"12515:47:6","nodeType":"YulFunctionCall","src":"12515:47:6"},"nativeSrc":"12515:47:6","nodeType":"YulExpressionStatement","src":"12515:47:6"},{"nativeSrc":"12571:116:6","nodeType":"YulAssignment","src":"12571:116:6","value":{"arguments":[{"name":"value0","nativeSrc":"12673:6:6","nodeType":"YulIdentifier","src":"12673:6:6"},{"name":"tail","nativeSrc":"12682:4:6","nodeType":"YulIdentifier","src":"12682:4:6"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"12579:93:6","nodeType":"YulIdentifier","src":"12579:93:6"},"nativeSrc":"12579:108:6","nodeType":"YulFunctionCall","src":"12579:108:6"},"variableNames":[{"name":"tail","nativeSrc":"12571:4:6","nodeType":"YulIdentifier","src":"12571:4:6"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"12321:373:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12441:9:6","nodeType":"YulTypedName","src":"12441:9:6","type":""},{"name":"value0","nativeSrc":"12453:6:6","nodeType":"YulTypedName","src":"12453:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12464:4:6","nodeType":"YulTypedName","src":"12464:4:6","type":""}],"src":"12321:373:6"},{"body":{"nativeSrc":"12896:436:6","nodeType":"YulBlock","src":"12896:436:6","statements":[{"nativeSrc":"12906:27:6","nodeType":"YulAssignment","src":"12906:27:6","value":{"arguments":[{"name":"headStart","nativeSrc":"12918:9:6","nodeType":"YulIdentifier","src":"12918:9:6"},{"kind":"number","nativeSrc":"12929:3:6","nodeType":"YulLiteral","src":"12929:3:6","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12914:3:6","nodeType":"YulIdentifier","src":"12914:3:6"},"nativeSrc":"12914:19:6","nodeType":"YulFunctionCall","src":"12914:19:6"},"variableNames":[{"name":"tail","nativeSrc":"12906:4:6","nodeType":"YulIdentifier","src":"12906:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12987:6:6","nodeType":"YulIdentifier","src":"12987:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"13000:9:6","nodeType":"YulIdentifier","src":"13000:9:6"},{"kind":"number","nativeSrc":"13011:1:6","nodeType":"YulLiteral","src":"13011:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12996:3:6","nodeType":"YulIdentifier","src":"12996:3:6"},"nativeSrc":"12996:17:6","nodeType":"YulFunctionCall","src":"12996:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12943:43:6","nodeType":"YulIdentifier","src":"12943:43:6"},"nativeSrc":"12943:71:6","nodeType":"YulFunctionCall","src":"12943:71:6"},"nativeSrc":"12943:71:6","nodeType":"YulExpressionStatement","src":"12943:71:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13035:9:6","nodeType":"YulIdentifier","src":"13035:9:6"},{"kind":"number","nativeSrc":"13046:2:6","nodeType":"YulLiteral","src":"13046:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13031:3:6","nodeType":"YulIdentifier","src":"13031:3:6"},"nativeSrc":"13031:18:6","nodeType":"YulFunctionCall","src":"13031:18:6"},{"arguments":[{"name":"tail","nativeSrc":"13055:4:6","nodeType":"YulIdentifier","src":"13055:4:6"},{"name":"headStart","nativeSrc":"13061:9:6","nodeType":"YulIdentifier","src":"13061:9:6"}],"functionName":{"name":"sub","nativeSrc":"13051:3:6","nodeType":"YulIdentifier","src":"13051:3:6"},"nativeSrc":"13051:20:6","nodeType":"YulFunctionCall","src":"13051:20:6"}],"functionName":{"name":"mstore","nativeSrc":"13024:6:6","nodeType":"YulIdentifier","src":"13024:6:6"},"nativeSrc":"13024:48:6","nodeType":"YulFunctionCall","src":"13024:48:6"},"nativeSrc":"13024:48:6","nodeType":"YulExpressionStatement","src":"13024:48:6"},{"nativeSrc":"13081:86:6","nodeType":"YulAssignment","src":"13081:86:6","value":{"arguments":[{"name":"value1","nativeSrc":"13153:6:6","nodeType":"YulIdentifier","src":"13153:6:6"},{"name":"tail","nativeSrc":"13162:4:6","nodeType":"YulIdentifier","src":"13162:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"13089:63:6","nodeType":"YulIdentifier","src":"13089:63:6"},"nativeSrc":"13089:78:6","nodeType":"YulFunctionCall","src":"13089:78:6"},"variableNames":[{"name":"tail","nativeSrc":"13081:4:6","nodeType":"YulIdentifier","src":"13081:4:6"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"13215:6:6","nodeType":"YulIdentifier","src":"13215:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"13228:9:6","nodeType":"YulIdentifier","src":"13228:9:6"},{"kind":"number","nativeSrc":"13239:2:6","nodeType":"YulLiteral","src":"13239:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13224:3:6","nodeType":"YulIdentifier","src":"13224:3:6"},"nativeSrc":"13224:18:6","nodeType":"YulFunctionCall","src":"13224:18:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"13177:37:6","nodeType":"YulIdentifier","src":"13177:37:6"},"nativeSrc":"13177:66:6","nodeType":"YulFunctionCall","src":"13177:66:6"},"nativeSrc":"13177:66:6","nodeType":"YulExpressionStatement","src":"13177:66:6"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"13297:6:6","nodeType":"YulIdentifier","src":"13297:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"13310:9:6","nodeType":"YulIdentifier","src":"13310:9:6"},{"kind":"number","nativeSrc":"13321:2:6","nodeType":"YulLiteral","src":"13321:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13306:3:6","nodeType":"YulIdentifier","src":"13306:3:6"},"nativeSrc":"13306:18:6","nodeType":"YulFunctionCall","src":"13306:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13253:43:6","nodeType":"YulIdentifier","src":"13253:43:6"},"nativeSrc":"13253:72:6","nodeType":"YulFunctionCall","src":"13253:72:6"},"nativeSrc":"13253:72:6","nodeType":"YulExpressionStatement","src":"13253:72:6"}]},"name":"abi_encode_tuple_t_address_t_string_memory_ptr_t_bool_t_uint256__to_t_address_t_string_memory_ptr_t_bool_t_uint256__fromStack_reversed","nativeSrc":"12700:632:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12844:9:6","nodeType":"YulTypedName","src":"12844:9:6","type":""},{"name":"value3","nativeSrc":"12856:6:6","nodeType":"YulTypedName","src":"12856:6:6","type":""},{"name":"value2","nativeSrc":"12864:6:6","nodeType":"YulTypedName","src":"12864:6:6","type":""},{"name":"value1","nativeSrc":"12872:6:6","nodeType":"YulTypedName","src":"12872:6:6","type":""},{"name":"value0","nativeSrc":"12880:6:6","nodeType":"YulTypedName","src":"12880:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12891:4:6","nodeType":"YulTypedName","src":"12891:4:6","type":""}],"src":"12700:632:6"},{"body":{"nativeSrc":"13430:118:6","nodeType":"YulBlock","src":"13430:118:6","statements":[{"nativeSrc":"13440:26:6","nodeType":"YulAssignment","src":"13440:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"13452:9:6","nodeType":"YulIdentifier","src":"13452:9:6"},{"kind":"number","nativeSrc":"13463:2:6","nodeType":"YulLiteral","src":"13463:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13448:3:6","nodeType":"YulIdentifier","src":"13448:3:6"},"nativeSrc":"13448:18:6","nodeType":"YulFunctionCall","src":"13448:18:6"},"variableNames":[{"name":"tail","nativeSrc":"13440:4:6","nodeType":"YulIdentifier","src":"13440:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13514:6:6","nodeType":"YulIdentifier","src":"13514:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"13527:9:6","nodeType":"YulIdentifier","src":"13527:9:6"},{"kind":"number","nativeSrc":"13538:1:6","nodeType":"YulLiteral","src":"13538:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13523:3:6","nodeType":"YulIdentifier","src":"13523:3:6"},"nativeSrc":"13523:17:6","nodeType":"YulFunctionCall","src":"13523:17:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"13476:37:6","nodeType":"YulIdentifier","src":"13476:37:6"},"nativeSrc":"13476:65:6","nodeType":"YulFunctionCall","src":"13476:65:6"},"nativeSrc":"13476:65:6","nodeType":"YulExpressionStatement","src":"13476:65:6"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"13338:210:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13402:9:6","nodeType":"YulTypedName","src":"13402:9:6","type":""},{"name":"value0","nativeSrc":"13414:6:6","nodeType":"YulTypedName","src":"13414:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13425:4:6","nodeType":"YulTypedName","src":"13425:4:6","type":""}],"src":"13338:210:6"},{"body":{"nativeSrc":"13643:28:6","nodeType":"YulBlock","src":"13643:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13660:1:6","nodeType":"YulLiteral","src":"13660:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"13663:1:6","nodeType":"YulLiteral","src":"13663:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13653:6:6","nodeType":"YulIdentifier","src":"13653:6:6"},"nativeSrc":"13653:12:6","nodeType":"YulFunctionCall","src":"13653:12:6"},"nativeSrc":"13653:12:6","nodeType":"YulExpressionStatement","src":"13653:12:6"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"13554:117:6","nodeType":"YulFunctionDefinition","src":"13554:117:6"},{"body":{"nativeSrc":"13766:28:6","nodeType":"YulBlock","src":"13766:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13783:1:6","nodeType":"YulLiteral","src":"13783:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"13786:1:6","nodeType":"YulLiteral","src":"13786:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13776:6:6","nodeType":"YulIdentifier","src":"13776:6:6"},"nativeSrc":"13776:12:6","nodeType":"YulFunctionCall","src":"13776:12:6"},"nativeSrc":"13776:12:6","nodeType":"YulExpressionStatement","src":"13776:12:6"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"13677:117:6","nodeType":"YulFunctionDefinition","src":"13677:117:6"},{"body":{"nativeSrc":"13828:152:6","nodeType":"YulBlock","src":"13828:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13845:1:6","nodeType":"YulLiteral","src":"13845:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"13848:77:6","nodeType":"YulLiteral","src":"13848:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13838:6:6","nodeType":"YulIdentifier","src":"13838:6:6"},"nativeSrc":"13838:88:6","nodeType":"YulFunctionCall","src":"13838:88:6"},"nativeSrc":"13838:88:6","nodeType":"YulExpressionStatement","src":"13838:88:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13942:1:6","nodeType":"YulLiteral","src":"13942:1:6","type":"","value":"4"},{"kind":"number","nativeSrc":"13945:4:6","nodeType":"YulLiteral","src":"13945:4:6","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"13935:6:6","nodeType":"YulIdentifier","src":"13935:6:6"},"nativeSrc":"13935:15:6","nodeType":"YulFunctionCall","src":"13935:15:6"},"nativeSrc":"13935:15:6","nodeType":"YulExpressionStatement","src":"13935:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13966:1:6","nodeType":"YulLiteral","src":"13966:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"13969:4:6","nodeType":"YulLiteral","src":"13969:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13959:6:6","nodeType":"YulIdentifier","src":"13959:6:6"},"nativeSrc":"13959:15:6","nodeType":"YulFunctionCall","src":"13959:15:6"},"nativeSrc":"13959:15:6","nodeType":"YulExpressionStatement","src":"13959:15:6"}]},"name":"panic_error_0x41","nativeSrc":"13800:180:6","nodeType":"YulFunctionDefinition","src":"13800:180:6"},{"body":{"nativeSrc":"14029:238:6","nodeType":"YulBlock","src":"14029:238:6","statements":[{"nativeSrc":"14039:58:6","nodeType":"YulVariableDeclaration","src":"14039:58:6","value":{"arguments":[{"name":"memPtr","nativeSrc":"14061:6:6","nodeType":"YulIdentifier","src":"14061:6:6"},{"arguments":[{"name":"size","nativeSrc":"14091:4:6","nodeType":"YulIdentifier","src":"14091:4:6"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"14069:21:6","nodeType":"YulIdentifier","src":"14069:21:6"},"nativeSrc":"14069:27:6","nodeType":"YulFunctionCall","src":"14069:27:6"}],"functionName":{"name":"add","nativeSrc":"14057:3:6","nodeType":"YulIdentifier","src":"14057:3:6"},"nativeSrc":"14057:40:6","nodeType":"YulFunctionCall","src":"14057:40:6"},"variables":[{"name":"newFreePtr","nativeSrc":"14043:10:6","nodeType":"YulTypedName","src":"14043:10:6","type":""}]},{"body":{"nativeSrc":"14208:22:6","nodeType":"YulBlock","src":"14208:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"14210:16:6","nodeType":"YulIdentifier","src":"14210:16:6"},"nativeSrc":"14210:18:6","nodeType":"YulFunctionCall","src":"14210:18:6"},"nativeSrc":"14210:18:6","nodeType":"YulExpressionStatement","src":"14210:18:6"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"14151:10:6","nodeType":"YulIdentifier","src":"14151:10:6"},{"kind":"number","nativeSrc":"14163:18:6","nodeType":"YulLiteral","src":"14163:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14148:2:6","nodeType":"YulIdentifier","src":"14148:2:6"},"nativeSrc":"14148:34:6","nodeType":"YulFunctionCall","src":"14148:34:6"},{"arguments":[{"name":"newFreePtr","nativeSrc":"14187:10:6","nodeType":"YulIdentifier","src":"14187:10:6"},{"name":"memPtr","nativeSrc":"14199:6:6","nodeType":"YulIdentifier","src":"14199:6:6"}],"functionName":{"name":"lt","nativeSrc":"14184:2:6","nodeType":"YulIdentifier","src":"14184:2:6"},"nativeSrc":"14184:22:6","nodeType":"YulFunctionCall","src":"14184:22:6"}],"functionName":{"name":"or","nativeSrc":"14145:2:6","nodeType":"YulIdentifier","src":"14145:2:6"},"nativeSrc":"14145:62:6","nodeType":"YulFunctionCall","src":"14145:62:6"},"nativeSrc":"14142:88:6","nodeType":"YulIf","src":"14142:88:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14246:2:6","nodeType":"YulLiteral","src":"14246:2:6","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"14250:10:6","nodeType":"YulIdentifier","src":"14250:10:6"}],"functionName":{"name":"mstore","nativeSrc":"14239:6:6","nodeType":"YulIdentifier","src":"14239:6:6"},"nativeSrc":"14239:22:6","nodeType":"YulFunctionCall","src":"14239:22:6"},"nativeSrc":"14239:22:6","nodeType":"YulExpressionStatement","src":"14239:22:6"}]},"name":"finalize_allocation","nativeSrc":"13986:281:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14015:6:6","nodeType":"YulTypedName","src":"14015:6:6","type":""},{"name":"size","nativeSrc":"14023:4:6","nodeType":"YulTypedName","src":"14023:4:6","type":""}],"src":"13986:281:6"},{"body":{"nativeSrc":"14314:88:6","nodeType":"YulBlock","src":"14314:88:6","statements":[{"nativeSrc":"14324:30:6","nodeType":"YulAssignment","src":"14324:30:6","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"14334:18:6","nodeType":"YulIdentifier","src":"14334:18:6"},"nativeSrc":"14334:20:6","nodeType":"YulFunctionCall","src":"14334:20:6"},"variableNames":[{"name":"memPtr","nativeSrc":"14324:6:6","nodeType":"YulIdentifier","src":"14324:6:6"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"14383:6:6","nodeType":"YulIdentifier","src":"14383:6:6"},{"name":"size","nativeSrc":"14391:4:6","nodeType":"YulIdentifier","src":"14391:4:6"}],"functionName":{"name":"finalize_allocation","nativeSrc":"14363:19:6","nodeType":"YulIdentifier","src":"14363:19:6"},"nativeSrc":"14363:33:6","nodeType":"YulFunctionCall","src":"14363:33:6"},"nativeSrc":"14363:33:6","nodeType":"YulExpressionStatement","src":"14363:33:6"}]},"name":"allocate_memory","nativeSrc":"14273:129:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"14298:4:6","nodeType":"YulTypedName","src":"14298:4:6","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"14307:6:6","nodeType":"YulTypedName","src":"14307:6:6","type":""}],"src":"14273:129:6"},{"body":{"nativeSrc":"14475:241:6","nodeType":"YulBlock","src":"14475:241:6","statements":[{"body":{"nativeSrc":"14580:22:6","nodeType":"YulBlock","src":"14580:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"14582:16:6","nodeType":"YulIdentifier","src":"14582:16:6"},"nativeSrc":"14582:18:6","nodeType":"YulFunctionCall","src":"14582:18:6"},"nativeSrc":"14582:18:6","nodeType":"YulExpressionStatement","src":"14582:18:6"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"14552:6:6","nodeType":"YulIdentifier","src":"14552:6:6"},{"kind":"number","nativeSrc":"14560:18:6","nodeType":"YulLiteral","src":"14560:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14549:2:6","nodeType":"YulIdentifier","src":"14549:2:6"},"nativeSrc":"14549:30:6","nodeType":"YulFunctionCall","src":"14549:30:6"},"nativeSrc":"14546:56:6","nodeType":"YulIf","src":"14546:56:6"},{"nativeSrc":"14612:37:6","nodeType":"YulAssignment","src":"14612:37:6","value":{"arguments":[{"name":"length","nativeSrc":"14642:6:6","nodeType":"YulIdentifier","src":"14642:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"14620:21:6","nodeType":"YulIdentifier","src":"14620:21:6"},"nativeSrc":"14620:29:6","nodeType":"YulFunctionCall","src":"14620:29:6"},"variableNames":[{"name":"size","nativeSrc":"14612:4:6","nodeType":"YulIdentifier","src":"14612:4:6"}]},{"nativeSrc":"14686:23:6","nodeType":"YulAssignment","src":"14686:23:6","value":{"arguments":[{"name":"size","nativeSrc":"14698:4:6","nodeType":"YulIdentifier","src":"14698:4:6"},{"kind":"number","nativeSrc":"14704:4:6","nodeType":"YulLiteral","src":"14704:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14694:3:6","nodeType":"YulIdentifier","src":"14694:3:6"},"nativeSrc":"14694:15:6","nodeType":"YulFunctionCall","src":"14694:15:6"},"variableNames":[{"name":"size","nativeSrc":"14686:4:6","nodeType":"YulIdentifier","src":"14686:4:6"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"14408:308:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"14459:6:6","nodeType":"YulTypedName","src":"14459:6:6","type":""}],"returnVariables":[{"name":"size","nativeSrc":"14470:4:6","nodeType":"YulTypedName","src":"14470:4:6","type":""}],"src":"14408:308:6"},{"body":{"nativeSrc":"14786:82:6","nodeType":"YulBlock","src":"14786:82:6","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"14809:3:6","nodeType":"YulIdentifier","src":"14809:3:6"},{"name":"src","nativeSrc":"14814:3:6","nodeType":"YulIdentifier","src":"14814:3:6"},{"name":"length","nativeSrc":"14819:6:6","nodeType":"YulIdentifier","src":"14819:6:6"}],"functionName":{"name":"calldatacopy","nativeSrc":"14796:12:6","nodeType":"YulIdentifier","src":"14796:12:6"},"nativeSrc":"14796:30:6","nodeType":"YulFunctionCall","src":"14796:30:6"},"nativeSrc":"14796:30:6","nodeType":"YulExpressionStatement","src":"14796:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"14846:3:6","nodeType":"YulIdentifier","src":"14846:3:6"},{"name":"length","nativeSrc":"14851:6:6","nodeType":"YulIdentifier","src":"14851:6:6"}],"functionName":{"name":"add","nativeSrc":"14842:3:6","nodeType":"YulIdentifier","src":"14842:3:6"},"nativeSrc":"14842:16:6","nodeType":"YulFunctionCall","src":"14842:16:6"},{"kind":"number","nativeSrc":"14860:1:6","nodeType":"YulLiteral","src":"14860:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"14835:6:6","nodeType":"YulIdentifier","src":"14835:6:6"},"nativeSrc":"14835:27:6","nodeType":"YulFunctionCall","src":"14835:27:6"},"nativeSrc":"14835:27:6","nodeType":"YulExpressionStatement","src":"14835:27:6"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"14722:146:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"14768:3:6","nodeType":"YulTypedName","src":"14768:3:6","type":""},{"name":"dst","nativeSrc":"14773:3:6","nodeType":"YulTypedName","src":"14773:3:6","type":""},{"name":"length","nativeSrc":"14778:6:6","nodeType":"YulTypedName","src":"14778:6:6","type":""}],"src":"14722:146:6"},{"body":{"nativeSrc":"14958:341:6","nodeType":"YulBlock","src":"14958:341:6","statements":[{"nativeSrc":"14968:75:6","nodeType":"YulAssignment","src":"14968:75:6","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"15035:6:6","nodeType":"YulIdentifier","src":"15035:6:6"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"14993:41:6","nodeType":"YulIdentifier","src":"14993:41:6"},"nativeSrc":"14993:49:6","nodeType":"YulFunctionCall","src":"14993:49:6"}],"functionName":{"name":"allocate_memory","nativeSrc":"14977:15:6","nodeType":"YulIdentifier","src":"14977:15:6"},"nativeSrc":"14977:66:6","nodeType":"YulFunctionCall","src":"14977:66:6"},"variableNames":[{"name":"array","nativeSrc":"14968:5:6","nodeType":"YulIdentifier","src":"14968:5:6"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"15059:5:6","nodeType":"YulIdentifier","src":"15059:5:6"},{"name":"length","nativeSrc":"15066:6:6","nodeType":"YulIdentifier","src":"15066:6:6"}],"functionName":{"name":"mstore","nativeSrc":"15052:6:6","nodeType":"YulIdentifier","src":"15052:6:6"},"nativeSrc":"15052:21:6","nodeType":"YulFunctionCall","src":"15052:21:6"},"nativeSrc":"15052:21:6","nodeType":"YulExpressionStatement","src":"15052:21:6"},{"nativeSrc":"15082:27:6","nodeType":"YulVariableDeclaration","src":"15082:27:6","value":{"arguments":[{"name":"array","nativeSrc":"15097:5:6","nodeType":"YulIdentifier","src":"15097:5:6"},{"kind":"number","nativeSrc":"15104:4:6","nodeType":"YulLiteral","src":"15104:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15093:3:6","nodeType":"YulIdentifier","src":"15093:3:6"},"nativeSrc":"15093:16:6","nodeType":"YulFunctionCall","src":"15093:16:6"},"variables":[{"name":"dst","nativeSrc":"15086:3:6","nodeType":"YulTypedName","src":"15086:3:6","type":""}]},{"body":{"nativeSrc":"15147:83:6","nodeType":"YulBlock","src":"15147:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"15149:77:6","nodeType":"YulIdentifier","src":"15149:77:6"},"nativeSrc":"15149:79:6","nodeType":"YulFunctionCall","src":"15149:79:6"},"nativeSrc":"15149:79:6","nodeType":"YulExpressionStatement","src":"15149:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"15128:3:6","nodeType":"YulIdentifier","src":"15128:3:6"},{"name":"length","nativeSrc":"15133:6:6","nodeType":"YulIdentifier","src":"15133:6:6"}],"functionName":{"name":"add","nativeSrc":"15124:3:6","nodeType":"YulIdentifier","src":"15124:3:6"},"nativeSrc":"15124:16:6","nodeType":"YulFunctionCall","src":"15124:16:6"},{"name":"end","nativeSrc":"15142:3:6","nodeType":"YulIdentifier","src":"15142:3:6"}],"functionName":{"name":"gt","nativeSrc":"15121:2:6","nodeType":"YulIdentifier","src":"15121:2:6"},"nativeSrc":"15121:25:6","nodeType":"YulFunctionCall","src":"15121:25:6"},"nativeSrc":"15118:112:6","nodeType":"YulIf","src":"15118:112:6"},{"expression":{"arguments":[{"name":"src","nativeSrc":"15276:3:6","nodeType":"YulIdentifier","src":"15276:3:6"},{"name":"dst","nativeSrc":"15281:3:6","nodeType":"YulIdentifier","src":"15281:3:6"},{"name":"length","nativeSrc":"15286:6:6","nodeType":"YulIdentifier","src":"15286:6:6"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"15239:36:6","nodeType":"YulIdentifier","src":"15239:36:6"},"nativeSrc":"15239:54:6","nodeType":"YulFunctionCall","src":"15239:54:6"},"nativeSrc":"15239:54:6","nodeType":"YulExpressionStatement","src":"15239:54:6"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"14874:425:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"14931:3:6","nodeType":"YulTypedName","src":"14931:3:6","type":""},{"name":"length","nativeSrc":"14936:6:6","nodeType":"YulTypedName","src":"14936:6:6","type":""},{"name":"end","nativeSrc":"14944:3:6","nodeType":"YulTypedName","src":"14944:3:6","type":""}],"returnVariables":[{"name":"array","nativeSrc":"14952:5:6","nodeType":"YulTypedName","src":"14952:5:6","type":""}],"src":"14874:425:6"},{"body":{"nativeSrc":"15381:278:6","nodeType":"YulBlock","src":"15381:278:6","statements":[{"body":{"nativeSrc":"15430:83:6","nodeType":"YulBlock","src":"15430:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"15432:77:6","nodeType":"YulIdentifier","src":"15432:77:6"},"nativeSrc":"15432:79:6","nodeType":"YulFunctionCall","src":"15432:79:6"},"nativeSrc":"15432:79:6","nodeType":"YulExpressionStatement","src":"15432:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"15409:6:6","nodeType":"YulIdentifier","src":"15409:6:6"},{"kind":"number","nativeSrc":"15417:4:6","nodeType":"YulLiteral","src":"15417:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"15405:3:6","nodeType":"YulIdentifier","src":"15405:3:6"},"nativeSrc":"15405:17:6","nodeType":"YulFunctionCall","src":"15405:17:6"},{"name":"end","nativeSrc":"15424:3:6","nodeType":"YulIdentifier","src":"15424:3:6"}],"functionName":{"name":"slt","nativeSrc":"15401:3:6","nodeType":"YulIdentifier","src":"15401:3:6"},"nativeSrc":"15401:27:6","nodeType":"YulFunctionCall","src":"15401:27:6"}],"functionName":{"name":"iszero","nativeSrc":"15394:6:6","nodeType":"YulIdentifier","src":"15394:6:6"},"nativeSrc":"15394:35:6","nodeType":"YulFunctionCall","src":"15394:35:6"},"nativeSrc":"15391:122:6","nodeType":"YulIf","src":"15391:122:6"},{"nativeSrc":"15522:34:6","nodeType":"YulVariableDeclaration","src":"15522:34:6","value":{"arguments":[{"name":"offset","nativeSrc":"15549:6:6","nodeType":"YulIdentifier","src":"15549:6:6"}],"functionName":{"name":"calldataload","nativeSrc":"15536:12:6","nodeType":"YulIdentifier","src":"15536:12:6"},"nativeSrc":"15536:20:6","nodeType":"YulFunctionCall","src":"15536:20:6"},"variables":[{"name":"length","nativeSrc":"15526:6:6","nodeType":"YulTypedName","src":"15526:6:6","type":""}]},{"nativeSrc":"15565:88:6","nodeType":"YulAssignment","src":"15565:88:6","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"15626:6:6","nodeType":"YulIdentifier","src":"15626:6:6"},{"kind":"number","nativeSrc":"15634:4:6","nodeType":"YulLiteral","src":"15634:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15622:3:6","nodeType":"YulIdentifier","src":"15622:3:6"},"nativeSrc":"15622:17:6","nodeType":"YulFunctionCall","src":"15622:17:6"},{"name":"length","nativeSrc":"15641:6:6","nodeType":"YulIdentifier","src":"15641:6:6"},{"name":"end","nativeSrc":"15649:3:6","nodeType":"YulIdentifier","src":"15649:3:6"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"15574:47:6","nodeType":"YulIdentifier","src":"15574:47:6"},"nativeSrc":"15574:79:6","nodeType":"YulFunctionCall","src":"15574:79:6"},"variableNames":[{"name":"array","nativeSrc":"15565:5:6","nodeType":"YulIdentifier","src":"15565:5:6"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"15319:340:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"15359:6:6","nodeType":"YulTypedName","src":"15359:6:6","type":""},{"name":"end","nativeSrc":"15367:3:6","nodeType":"YulTypedName","src":"15367:3:6","type":""}],"returnVariables":[{"name":"array","nativeSrc":"15375:5:6","nodeType":"YulTypedName","src":"15375:5:6","type":""}],"src":"15319:340:6"},{"body":{"nativeSrc":"15757:229:6","nodeType":"YulBlock","src":"15757:229:6","statements":[{"body":{"nativeSrc":"15862:22:6","nodeType":"YulBlock","src":"15862:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"15864:16:6","nodeType":"YulIdentifier","src":"15864:16:6"},"nativeSrc":"15864:18:6","nodeType":"YulFunctionCall","src":"15864:18:6"},"nativeSrc":"15864:18:6","nodeType":"YulExpressionStatement","src":"15864:18:6"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"15834:6:6","nodeType":"YulIdentifier","src":"15834:6:6"},{"kind":"number","nativeSrc":"15842:18:6","nodeType":"YulLiteral","src":"15842:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"15831:2:6","nodeType":"YulIdentifier","src":"15831:2:6"},"nativeSrc":"15831:30:6","nodeType":"YulFunctionCall","src":"15831:30:6"},"nativeSrc":"15828:56:6","nodeType":"YulIf","src":"15828:56:6"},{"nativeSrc":"15894:25:6","nodeType":"YulAssignment","src":"15894:25:6","value":{"arguments":[{"name":"length","nativeSrc":"15906:6:6","nodeType":"YulIdentifier","src":"15906:6:6"},{"kind":"number","nativeSrc":"15914:4:6","nodeType":"YulLiteral","src":"15914:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"15902:3:6","nodeType":"YulIdentifier","src":"15902:3:6"},"nativeSrc":"15902:17:6","nodeType":"YulFunctionCall","src":"15902:17:6"},"variableNames":[{"name":"size","nativeSrc":"15894:4:6","nodeType":"YulIdentifier","src":"15894:4:6"}]},{"nativeSrc":"15956:23:6","nodeType":"YulAssignment","src":"15956:23:6","value":{"arguments":[{"name":"size","nativeSrc":"15968:4:6","nodeType":"YulIdentifier","src":"15968:4:6"},{"kind":"number","nativeSrc":"15974:4:6","nodeType":"YulLiteral","src":"15974:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15964:3:6","nodeType":"YulIdentifier","src":"15964:3:6"},"nativeSrc":"15964:15:6","nodeType":"YulFunctionCall","src":"15964:15:6"},"variableNames":[{"name":"size","nativeSrc":"15956:4:6","nodeType":"YulIdentifier","src":"15956:4:6"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"15665:321:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"15741:6:6","nodeType":"YulTypedName","src":"15741:6:6","type":""}],"returnVariables":[{"name":"size","nativeSrc":"15752:4:6","nodeType":"YulTypedName","src":"15752:4:6","type":""}],"src":"15665:321:6"},{"body":{"nativeSrc":"16081:28:6","nodeType":"YulBlock","src":"16081:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16098:1:6","nodeType":"YulLiteral","src":"16098:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"16101:1:6","nodeType":"YulLiteral","src":"16101:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16091:6:6","nodeType":"YulIdentifier","src":"16091:6:6"},"nativeSrc":"16091:12:6","nodeType":"YulFunctionCall","src":"16091:12:6"},"nativeSrc":"16091:12:6","nodeType":"YulExpressionStatement","src":"16091:12:6"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"15992:117:6","nodeType":"YulFunctionDefinition","src":"15992:117:6"},{"body":{"nativeSrc":"16243:833:6","nodeType":"YulBlock","src":"16243:833:6","statements":[{"nativeSrc":"16253:100:6","nodeType":"YulAssignment","src":"16253:100:6","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"16345:6:6","nodeType":"YulIdentifier","src":"16345:6:6"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"16278:66:6","nodeType":"YulIdentifier","src":"16278:66:6"},"nativeSrc":"16278:74:6","nodeType":"YulFunctionCall","src":"16278:74:6"}],"functionName":{"name":"allocate_memory","nativeSrc":"16262:15:6","nodeType":"YulIdentifier","src":"16262:15:6"},"nativeSrc":"16262:91:6","nodeType":"YulFunctionCall","src":"16262:91:6"},"variableNames":[{"name":"array","nativeSrc":"16253:5:6","nodeType":"YulIdentifier","src":"16253:5:6"}]},{"nativeSrc":"16362:16:6","nodeType":"YulVariableDeclaration","src":"16362:16:6","value":{"name":"array","nativeSrc":"16373:5:6","nodeType":"YulIdentifier","src":"16373:5:6"},"variables":[{"name":"dst","nativeSrc":"16366:3:6","nodeType":"YulTypedName","src":"16366:3:6","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"16395:5:6","nodeType":"YulIdentifier","src":"16395:5:6"},{"name":"length","nativeSrc":"16402:6:6","nodeType":"YulIdentifier","src":"16402:6:6"}],"functionName":{"name":"mstore","nativeSrc":"16388:6:6","nodeType":"YulIdentifier","src":"16388:6:6"},"nativeSrc":"16388:21:6","nodeType":"YulFunctionCall","src":"16388:21:6"},"nativeSrc":"16388:21:6","nodeType":"YulExpressionStatement","src":"16388:21:6"},{"nativeSrc":"16418:23:6","nodeType":"YulAssignment","src":"16418:23:6","value":{"arguments":[{"name":"array","nativeSrc":"16429:5:6","nodeType":"YulIdentifier","src":"16429:5:6"},{"kind":"number","nativeSrc":"16436:4:6","nodeType":"YulLiteral","src":"16436:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16425:3:6","nodeType":"YulIdentifier","src":"16425:3:6"},"nativeSrc":"16425:16:6","nodeType":"YulFunctionCall","src":"16425:16:6"},"variableNames":[{"name":"dst","nativeSrc":"16418:3:6","nodeType":"YulIdentifier","src":"16418:3:6"}]},{"nativeSrc":"16451:44:6","nodeType":"YulVariableDeclaration","src":"16451:44:6","value":{"arguments":[{"name":"offset","nativeSrc":"16469:6:6","nodeType":"YulIdentifier","src":"16469:6:6"},{"arguments":[{"name":"length","nativeSrc":"16481:6:6","nodeType":"YulIdentifier","src":"16481:6:6"},{"kind":"number","nativeSrc":"16489:4:6","nodeType":"YulLiteral","src":"16489:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16477:3:6","nodeType":"YulIdentifier","src":"16477:3:6"},"nativeSrc":"16477:17:6","nodeType":"YulFunctionCall","src":"16477:17:6"}],"functionName":{"name":"add","nativeSrc":"16465:3:6","nodeType":"YulIdentifier","src":"16465:3:6"},"nativeSrc":"16465:30:6","nodeType":"YulFunctionCall","src":"16465:30:6"},"variables":[{"name":"srcEnd","nativeSrc":"16455:6:6","nodeType":"YulTypedName","src":"16455:6:6","type":""}]},{"body":{"nativeSrc":"16523:103:6","nodeType":"YulBlock","src":"16523:103:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"16537:77:6","nodeType":"YulIdentifier","src":"16537:77:6"},"nativeSrc":"16537:79:6","nodeType":"YulFunctionCall","src":"16537:79:6"},"nativeSrc":"16537:79:6","nodeType":"YulExpressionStatement","src":"16537:79:6"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"16510:6:6","nodeType":"YulIdentifier","src":"16510:6:6"},{"name":"end","nativeSrc":"16518:3:6","nodeType":"YulIdentifier","src":"16518:3:6"}],"functionName":{"name":"gt","nativeSrc":"16507:2:6","nodeType":"YulIdentifier","src":"16507:2:6"},"nativeSrc":"16507:15:6","nodeType":"YulFunctionCall","src":"16507:15:6"},"nativeSrc":"16504:122:6","nodeType":"YulIf","src":"16504:122:6"},{"body":{"nativeSrc":"16711:359:6","nodeType":"YulBlock","src":"16711:359:6","statements":[{"nativeSrc":"16726:36:6","nodeType":"YulVariableDeclaration","src":"16726:36:6","value":{"arguments":[{"name":"src","nativeSrc":"16758:3:6","nodeType":"YulIdentifier","src":"16758:3:6"}],"functionName":{"name":"calldataload","nativeSrc":"16745:12:6","nodeType":"YulIdentifier","src":"16745:12:6"},"nativeSrc":"16745:17:6","nodeType":"YulFunctionCall","src":"16745:17:6"},"variables":[{"name":"innerOffset","nativeSrc":"16730:11:6","nodeType":"YulTypedName","src":"16730:11:6","type":""}]},{"body":{"nativeSrc":"16814:83:6","nodeType":"YulBlock","src":"16814:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"16816:77:6","nodeType":"YulIdentifier","src":"16816:77:6"},"nativeSrc":"16816:79:6","nodeType":"YulFunctionCall","src":"16816:79:6"},"nativeSrc":"16816:79:6","nodeType":"YulExpressionStatement","src":"16816:79:6"}]},"condition":{"arguments":[{"name":"innerOffset","nativeSrc":"16781:11:6","nodeType":"YulIdentifier","src":"16781:11:6"},{"kind":"number","nativeSrc":"16794:18:6","nodeType":"YulLiteral","src":"16794:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"16778:2:6","nodeType":"YulIdentifier","src":"16778:2:6"},"nativeSrc":"16778:35:6","nodeType":"YulFunctionCall","src":"16778:35:6"},"nativeSrc":"16775:122:6","nodeType":"YulIf","src":"16775:122:6"},{"nativeSrc":"16910:42:6","nodeType":"YulVariableDeclaration","src":"16910:42:6","value":{"arguments":[{"name":"offset","nativeSrc":"16932:6:6","nodeType":"YulIdentifier","src":"16932:6:6"},{"name":"innerOffset","nativeSrc":"16940:11:6","nodeType":"YulIdentifier","src":"16940:11:6"}],"functionName":{"name":"add","nativeSrc":"16928:3:6","nodeType":"YulIdentifier","src":"16928:3:6"},"nativeSrc":"16928:24:6","nodeType":"YulFunctionCall","src":"16928:24:6"},"variables":[{"name":"elementPos","nativeSrc":"16914:10:6","nodeType":"YulTypedName","src":"16914:10:6","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"16973:3:6","nodeType":"YulIdentifier","src":"16973:3:6"},{"arguments":[{"name":"elementPos","nativeSrc":"17009:10:6","nodeType":"YulIdentifier","src":"17009:10:6"},{"name":"end","nativeSrc":"17021:3:6","nodeType":"YulIdentifier","src":"17021:3:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"16978:30:6","nodeType":"YulIdentifier","src":"16978:30:6"},"nativeSrc":"16978:47:6","nodeType":"YulFunctionCall","src":"16978:47:6"}],"functionName":{"name":"mstore","nativeSrc":"16966:6:6","nodeType":"YulIdentifier","src":"16966:6:6"},"nativeSrc":"16966:60:6","nodeType":"YulFunctionCall","src":"16966:60:6"},"nativeSrc":"16966:60:6","nodeType":"YulExpressionStatement","src":"16966:60:6"},{"nativeSrc":"17039:21:6","nodeType":"YulAssignment","src":"17039:21:6","value":{"arguments":[{"name":"dst","nativeSrc":"17050:3:6","nodeType":"YulIdentifier","src":"17050:3:6"},{"kind":"number","nativeSrc":"17055:4:6","nodeType":"YulLiteral","src":"17055:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17046:3:6","nodeType":"YulIdentifier","src":"17046:3:6"},"nativeSrc":"17046:14:6","nodeType":"YulFunctionCall","src":"17046:14:6"},"variableNames":[{"name":"dst","nativeSrc":"17039:3:6","nodeType":"YulIdentifier","src":"17039:3:6"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"16664:3:6","nodeType":"YulIdentifier","src":"16664:3:6"},{"name":"srcEnd","nativeSrc":"16669:6:6","nodeType":"YulIdentifier","src":"16669:6:6"}],"functionName":{"name":"lt","nativeSrc":"16661:2:6","nodeType":"YulIdentifier","src":"16661:2:6"},"nativeSrc":"16661:15:6","nodeType":"YulFunctionCall","src":"16661:15:6"},"nativeSrc":"16635:435:6","nodeType":"YulForLoop","post":{"nativeSrc":"16677:25:6","nodeType":"YulBlock","src":"16677:25:6","statements":[{"nativeSrc":"16679:21:6","nodeType":"YulAssignment","src":"16679:21:6","value":{"arguments":[{"name":"src","nativeSrc":"16690:3:6","nodeType":"YulIdentifier","src":"16690:3:6"},{"kind":"number","nativeSrc":"16695:4:6","nodeType":"YulLiteral","src":"16695:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16686:3:6","nodeType":"YulIdentifier","src":"16686:3:6"},"nativeSrc":"16686:14:6","nodeType":"YulFunctionCall","src":"16686:14:6"},"variableNames":[{"name":"src","nativeSrc":"16679:3:6","nodeType":"YulIdentifier","src":"16679:3:6"}]}]},"pre":{"nativeSrc":"16639:21:6","nodeType":"YulBlock","src":"16639:21:6","statements":[{"nativeSrc":"16641:17:6","nodeType":"YulVariableDeclaration","src":"16641:17:6","value":{"name":"offset","nativeSrc":"16652:6:6","nodeType":"YulIdentifier","src":"16652:6:6"},"variables":[{"name":"src","nativeSrc":"16645:3:6","nodeType":"YulTypedName","src":"16645:3:6","type":""}]}]},"src":"16635:435:6"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"16131:945:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"16213:6:6","nodeType":"YulTypedName","src":"16213:6:6","type":""},{"name":"length","nativeSrc":"16221:6:6","nodeType":"YulTypedName","src":"16221:6:6","type":""},{"name":"end","nativeSrc":"16229:3:6","nodeType":"YulTypedName","src":"16229:3:6","type":""}],"returnVariables":[{"name":"array","nativeSrc":"16237:5:6","nodeType":"YulTypedName","src":"16237:5:6","type":""}],"src":"16131:945:6"},{"body":{"nativeSrc":"17185:303:6","nodeType":"YulBlock","src":"17185:303:6","statements":[{"body":{"nativeSrc":"17234:83:6","nodeType":"YulBlock","src":"17234:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"17236:77:6","nodeType":"YulIdentifier","src":"17236:77:6"},"nativeSrc":"17236:79:6","nodeType":"YulFunctionCall","src":"17236:79:6"},"nativeSrc":"17236:79:6","nodeType":"YulExpressionStatement","src":"17236:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"17213:6:6","nodeType":"YulIdentifier","src":"17213:6:6"},{"kind":"number","nativeSrc":"17221:4:6","nodeType":"YulLiteral","src":"17221:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"17209:3:6","nodeType":"YulIdentifier","src":"17209:3:6"},"nativeSrc":"17209:17:6","nodeType":"YulFunctionCall","src":"17209:17:6"},{"name":"end","nativeSrc":"17228:3:6","nodeType":"YulIdentifier","src":"17228:3:6"}],"functionName":{"name":"slt","nativeSrc":"17205:3:6","nodeType":"YulIdentifier","src":"17205:3:6"},"nativeSrc":"17205:27:6","nodeType":"YulFunctionCall","src":"17205:27:6"}],"functionName":{"name":"iszero","nativeSrc":"17198:6:6","nodeType":"YulIdentifier","src":"17198:6:6"},"nativeSrc":"17198:35:6","nodeType":"YulFunctionCall","src":"17198:35:6"},"nativeSrc":"17195:122:6","nodeType":"YulIf","src":"17195:122:6"},{"nativeSrc":"17326:34:6","nodeType":"YulVariableDeclaration","src":"17326:34:6","value":{"arguments":[{"name":"offset","nativeSrc":"17353:6:6","nodeType":"YulIdentifier","src":"17353:6:6"}],"functionName":{"name":"calldataload","nativeSrc":"17340:12:6","nodeType":"YulIdentifier","src":"17340:12:6"},"nativeSrc":"17340:20:6","nodeType":"YulFunctionCall","src":"17340:20:6"},"variables":[{"name":"length","nativeSrc":"17330:6:6","nodeType":"YulTypedName","src":"17330:6:6","type":""}]},{"nativeSrc":"17369:113:6","nodeType":"YulAssignment","src":"17369:113:6","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"17455:6:6","nodeType":"YulIdentifier","src":"17455:6:6"},{"kind":"number","nativeSrc":"17463:4:6","nodeType":"YulLiteral","src":"17463:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17451:3:6","nodeType":"YulIdentifier","src":"17451:3:6"},"nativeSrc":"17451:17:6","nodeType":"YulFunctionCall","src":"17451:17:6"},{"name":"length","nativeSrc":"17470:6:6","nodeType":"YulIdentifier","src":"17470:6:6"},{"name":"end","nativeSrc":"17478:3:6","nodeType":"YulIdentifier","src":"17478:3:6"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"17378:72:6","nodeType":"YulIdentifier","src":"17378:72:6"},"nativeSrc":"17378:104:6","nodeType":"YulFunctionCall","src":"17378:104:6"},"variableNames":[{"name":"array","nativeSrc":"17369:5:6","nodeType":"YulIdentifier","src":"17369:5:6"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"17098:390:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"17163:6:6","nodeType":"YulTypedName","src":"17163:6:6","type":""},{"name":"end","nativeSrc":"17171:3:6","nodeType":"YulTypedName","src":"17171:3:6","type":""}],"returnVariables":[{"name":"array","nativeSrc":"17179:5:6","nodeType":"YulTypedName","src":"17179:5:6","type":""}],"src":"17098:390:6"},{"body":{"nativeSrc":"17666:1183:6","nodeType":"YulBlock","src":"17666:1183:6","statements":[{"body":{"nativeSrc":"17713:83:6","nodeType":"YulBlock","src":"17713:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17715:77:6","nodeType":"YulIdentifier","src":"17715:77:6"},"nativeSrc":"17715:79:6","nodeType":"YulFunctionCall","src":"17715:79:6"},"nativeSrc":"17715:79:6","nodeType":"YulExpressionStatement","src":"17715:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17687:7:6","nodeType":"YulIdentifier","src":"17687:7:6"},{"name":"headStart","nativeSrc":"17696:9:6","nodeType":"YulIdentifier","src":"17696:9:6"}],"functionName":{"name":"sub","nativeSrc":"17683:3:6","nodeType":"YulIdentifier","src":"17683:3:6"},"nativeSrc":"17683:23:6","nodeType":"YulFunctionCall","src":"17683:23:6"},{"kind":"number","nativeSrc":"17708:3:6","nodeType":"YulLiteral","src":"17708:3:6","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"17679:3:6","nodeType":"YulIdentifier","src":"17679:3:6"},"nativeSrc":"17679:33:6","nodeType":"YulFunctionCall","src":"17679:33:6"},"nativeSrc":"17676:120:6","nodeType":"YulIf","src":"17676:120:6"},{"nativeSrc":"17806:287:6","nodeType":"YulBlock","src":"17806:287:6","statements":[{"nativeSrc":"17821:45:6","nodeType":"YulVariableDeclaration","src":"17821:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17852:9:6","nodeType":"YulIdentifier","src":"17852:9:6"},{"kind":"number","nativeSrc":"17863:1:6","nodeType":"YulLiteral","src":"17863:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17848:3:6","nodeType":"YulIdentifier","src":"17848:3:6"},"nativeSrc":"17848:17:6","nodeType":"YulFunctionCall","src":"17848:17:6"}],"functionName":{"name":"calldataload","nativeSrc":"17835:12:6","nodeType":"YulIdentifier","src":"17835:12:6"},"nativeSrc":"17835:31:6","nodeType":"YulFunctionCall","src":"17835:31:6"},"variables":[{"name":"offset","nativeSrc":"17825:6:6","nodeType":"YulTypedName","src":"17825:6:6","type":""}]},{"body":{"nativeSrc":"17913:83:6","nodeType":"YulBlock","src":"17913:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"17915:77:6","nodeType":"YulIdentifier","src":"17915:77:6"},"nativeSrc":"17915:79:6","nodeType":"YulFunctionCall","src":"17915:79:6"},"nativeSrc":"17915:79:6","nodeType":"YulExpressionStatement","src":"17915:79:6"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"17885:6:6","nodeType":"YulIdentifier","src":"17885:6:6"},{"kind":"number","nativeSrc":"17893:18:6","nodeType":"YulLiteral","src":"17893:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"17882:2:6","nodeType":"YulIdentifier","src":"17882:2:6"},"nativeSrc":"17882:30:6","nodeType":"YulFunctionCall","src":"17882:30:6"},"nativeSrc":"17879:117:6","nodeType":"YulIf","src":"17879:117:6"},{"nativeSrc":"18010:73:6","nodeType":"YulAssignment","src":"18010:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18055:9:6","nodeType":"YulIdentifier","src":"18055:9:6"},{"name":"offset","nativeSrc":"18066:6:6","nodeType":"YulIdentifier","src":"18066:6:6"}],"functionName":{"name":"add","nativeSrc":"18051:3:6","nodeType":"YulIdentifier","src":"18051:3:6"},"nativeSrc":"18051:22:6","nodeType":"YulFunctionCall","src":"18051:22:6"},{"name":"dataEnd","nativeSrc":"18075:7:6","nodeType":"YulIdentifier","src":"18075:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"18020:30:6","nodeType":"YulIdentifier","src":"18020:30:6"},"nativeSrc":"18020:63:6","nodeType":"YulFunctionCall","src":"18020:63:6"},"variableNames":[{"name":"value0","nativeSrc":"18010:6:6","nodeType":"YulIdentifier","src":"18010:6:6"}]}]},{"nativeSrc":"18103:288:6","nodeType":"YulBlock","src":"18103:288:6","statements":[{"nativeSrc":"18118:46:6","nodeType":"YulVariableDeclaration","src":"18118:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18149:9:6","nodeType":"YulIdentifier","src":"18149:9:6"},{"kind":"number","nativeSrc":"18160:2:6","nodeType":"YulLiteral","src":"18160:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18145:3:6","nodeType":"YulIdentifier","src":"18145:3:6"},"nativeSrc":"18145:18:6","nodeType":"YulFunctionCall","src":"18145:18:6"}],"functionName":{"name":"calldataload","nativeSrc":"18132:12:6","nodeType":"YulIdentifier","src":"18132:12:6"},"nativeSrc":"18132:32:6","nodeType":"YulFunctionCall","src":"18132:32:6"},"variables":[{"name":"offset","nativeSrc":"18122:6:6","nodeType":"YulTypedName","src":"18122:6:6","type":""}]},{"body":{"nativeSrc":"18211:83:6","nodeType":"YulBlock","src":"18211:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"18213:77:6","nodeType":"YulIdentifier","src":"18213:77:6"},"nativeSrc":"18213:79:6","nodeType":"YulFunctionCall","src":"18213:79:6"},"nativeSrc":"18213:79:6","nodeType":"YulExpressionStatement","src":"18213:79:6"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"18183:6:6","nodeType":"YulIdentifier","src":"18183:6:6"},{"kind":"number","nativeSrc":"18191:18:6","nodeType":"YulLiteral","src":"18191:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"18180:2:6","nodeType":"YulIdentifier","src":"18180:2:6"},"nativeSrc":"18180:30:6","nodeType":"YulFunctionCall","src":"18180:30:6"},"nativeSrc":"18177:117:6","nodeType":"YulIf","src":"18177:117:6"},{"nativeSrc":"18308:73:6","nodeType":"YulAssignment","src":"18308:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18353:9:6","nodeType":"YulIdentifier","src":"18353:9:6"},{"name":"offset","nativeSrc":"18364:6:6","nodeType":"YulIdentifier","src":"18364:6:6"}],"functionName":{"name":"add","nativeSrc":"18349:3:6","nodeType":"YulIdentifier","src":"18349:3:6"},"nativeSrc":"18349:22:6","nodeType":"YulFunctionCall","src":"18349:22:6"},{"name":"dataEnd","nativeSrc":"18373:7:6","nodeType":"YulIdentifier","src":"18373:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"18318:30:6","nodeType":"YulIdentifier","src":"18318:30:6"},"nativeSrc":"18318:63:6","nodeType":"YulFunctionCall","src":"18318:63:6"},"variableNames":[{"name":"value1","nativeSrc":"18308:6:6","nodeType":"YulIdentifier","src":"18308:6:6"}]}]},{"nativeSrc":"18401:118:6","nodeType":"YulBlock","src":"18401:118:6","statements":[{"nativeSrc":"18416:16:6","nodeType":"YulVariableDeclaration","src":"18416:16:6","value":{"kind":"number","nativeSrc":"18430:2:6","nodeType":"YulLiteral","src":"18430:2:6","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"18420:6:6","nodeType":"YulTypedName","src":"18420:6:6","type":""}]},{"nativeSrc":"18446:63:6","nodeType":"YulAssignment","src":"18446:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18481:9:6","nodeType":"YulIdentifier","src":"18481:9:6"},{"name":"offset","nativeSrc":"18492:6:6","nodeType":"YulIdentifier","src":"18492:6:6"}],"functionName":{"name":"add","nativeSrc":"18477:3:6","nodeType":"YulIdentifier","src":"18477:3:6"},"nativeSrc":"18477:22:6","nodeType":"YulFunctionCall","src":"18477:22:6"},{"name":"dataEnd","nativeSrc":"18501:7:6","nodeType":"YulIdentifier","src":"18501:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"18456:20:6","nodeType":"YulIdentifier","src":"18456:20:6"},"nativeSrc":"18456:53:6","nodeType":"YulFunctionCall","src":"18456:53:6"},"variableNames":[{"name":"value2","nativeSrc":"18446:6:6","nodeType":"YulIdentifier","src":"18446:6:6"}]}]},{"nativeSrc":"18529:313:6","nodeType":"YulBlock","src":"18529:313:6","statements":[{"nativeSrc":"18544:46:6","nodeType":"YulVariableDeclaration","src":"18544:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18575:9:6","nodeType":"YulIdentifier","src":"18575:9:6"},{"kind":"number","nativeSrc":"18586:2:6","nodeType":"YulLiteral","src":"18586:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18571:3:6","nodeType":"YulIdentifier","src":"18571:3:6"},"nativeSrc":"18571:18:6","nodeType":"YulFunctionCall","src":"18571:18:6"}],"functionName":{"name":"calldataload","nativeSrc":"18558:12:6","nodeType":"YulIdentifier","src":"18558:12:6"},"nativeSrc":"18558:32:6","nodeType":"YulFunctionCall","src":"18558:32:6"},"variables":[{"name":"offset","nativeSrc":"18548:6:6","nodeType":"YulTypedName","src":"18548:6:6","type":""}]},{"body":{"nativeSrc":"18637:83:6","nodeType":"YulBlock","src":"18637:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"18639:77:6","nodeType":"YulIdentifier","src":"18639:77:6"},"nativeSrc":"18639:79:6","nodeType":"YulFunctionCall","src":"18639:79:6"},"nativeSrc":"18639:79:6","nodeType":"YulExpressionStatement","src":"18639:79:6"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"18609:6:6","nodeType":"YulIdentifier","src":"18609:6:6"},{"kind":"number","nativeSrc":"18617:18:6","nodeType":"YulLiteral","src":"18617:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"18606:2:6","nodeType":"YulIdentifier","src":"18606:2:6"},"nativeSrc":"18606:30:6","nodeType":"YulFunctionCall","src":"18606:30:6"},"nativeSrc":"18603:117:6","nodeType":"YulIf","src":"18603:117:6"},{"nativeSrc":"18734:98:6","nodeType":"YulAssignment","src":"18734:98:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18804:9:6","nodeType":"YulIdentifier","src":"18804:9:6"},{"name":"offset","nativeSrc":"18815:6:6","nodeType":"YulIdentifier","src":"18815:6:6"}],"functionName":{"name":"add","nativeSrc":"18800:3:6","nodeType":"YulIdentifier","src":"18800:3:6"},"nativeSrc":"18800:22:6","nodeType":"YulFunctionCall","src":"18800:22:6"},{"name":"dataEnd","nativeSrc":"18824:7:6","nodeType":"YulIdentifier","src":"18824:7:6"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"18744:55:6","nodeType":"YulIdentifier","src":"18744:55:6"},"nativeSrc":"18744:88:6","nodeType":"YulFunctionCall","src":"18744:88:6"},"variableNames":[{"name":"value3","nativeSrc":"18734:6:6","nodeType":"YulIdentifier","src":"18734:6:6"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"17494:1355:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17612:9:6","nodeType":"YulTypedName","src":"17612:9:6","type":""},{"name":"dataEnd","nativeSrc":"17623:7:6","nodeType":"YulTypedName","src":"17623:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17635:6:6","nodeType":"YulTypedName","src":"17635:6:6","type":""},{"name":"value1","nativeSrc":"17643:6:6","nodeType":"YulTypedName","src":"17643:6:6","type":""},{"name":"value2","nativeSrc":"17651:6:6","nodeType":"YulTypedName","src":"17651:6:6","type":""},{"name":"value3","nativeSrc":"17659:6:6","nodeType":"YulTypedName","src":"17659:6:6","type":""}],"src":"17494:1355:6"},{"body":{"nativeSrc":"18965:689:6","nodeType":"YulBlock","src":"18965:689:6","statements":[{"body":{"nativeSrc":"19011:83:6","nodeType":"YulBlock","src":"19011:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19013:77:6","nodeType":"YulIdentifier","src":"19013:77:6"},"nativeSrc":"19013:79:6","nodeType":"YulFunctionCall","src":"19013:79:6"},"nativeSrc":"19013:79:6","nodeType":"YulExpressionStatement","src":"19013:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"18986:7:6","nodeType":"YulIdentifier","src":"18986:7:6"},{"name":"headStart","nativeSrc":"18995:9:6","nodeType":"YulIdentifier","src":"18995:9:6"}],"functionName":{"name":"sub","nativeSrc":"18982:3:6","nodeType":"YulIdentifier","src":"18982:3:6"},"nativeSrc":"18982:23:6","nodeType":"YulFunctionCall","src":"18982:23:6"},{"kind":"number","nativeSrc":"19007:2:6","nodeType":"YulLiteral","src":"19007:2:6","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"18978:3:6","nodeType":"YulIdentifier","src":"18978:3:6"},"nativeSrc":"18978:32:6","nodeType":"YulFunctionCall","src":"18978:32:6"},"nativeSrc":"18975:119:6","nodeType":"YulIf","src":"18975:119:6"},{"nativeSrc":"19104:117:6","nodeType":"YulBlock","src":"19104:117:6","statements":[{"nativeSrc":"19119:15:6","nodeType":"YulVariableDeclaration","src":"19119:15:6","value":{"kind":"number","nativeSrc":"19133:1:6","nodeType":"YulLiteral","src":"19133:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"19123:6:6","nodeType":"YulTypedName","src":"19123:6:6","type":""}]},{"nativeSrc":"19148:63:6","nodeType":"YulAssignment","src":"19148:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19183:9:6","nodeType":"YulIdentifier","src":"19183:9:6"},{"name":"offset","nativeSrc":"19194:6:6","nodeType":"YulIdentifier","src":"19194:6:6"}],"functionName":{"name":"add","nativeSrc":"19179:3:6","nodeType":"YulIdentifier","src":"19179:3:6"},"nativeSrc":"19179:22:6","nodeType":"YulFunctionCall","src":"19179:22:6"},{"name":"dataEnd","nativeSrc":"19203:7:6","nodeType":"YulIdentifier","src":"19203:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"19158:20:6","nodeType":"YulIdentifier","src":"19158:20:6"},"nativeSrc":"19158:53:6","nodeType":"YulFunctionCall","src":"19158:53:6"},"variableNames":[{"name":"value0","nativeSrc":"19148:6:6","nodeType":"YulIdentifier","src":"19148:6:6"}]}]},{"nativeSrc":"19231:288:6","nodeType":"YulBlock","src":"19231:288:6","statements":[{"nativeSrc":"19246:46:6","nodeType":"YulVariableDeclaration","src":"19246:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19277:9:6","nodeType":"YulIdentifier","src":"19277:9:6"},{"kind":"number","nativeSrc":"19288:2:6","nodeType":"YulLiteral","src":"19288:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19273:3:6","nodeType":"YulIdentifier","src":"19273:3:6"},"nativeSrc":"19273:18:6","nodeType":"YulFunctionCall","src":"19273:18:6"}],"functionName":{"name":"calldataload","nativeSrc":"19260:12:6","nodeType":"YulIdentifier","src":"19260:12:6"},"nativeSrc":"19260:32:6","nodeType":"YulFunctionCall","src":"19260:32:6"},"variables":[{"name":"offset","nativeSrc":"19250:6:6","nodeType":"YulTypedName","src":"19250:6:6","type":""}]},{"body":{"nativeSrc":"19339:83:6","nodeType":"YulBlock","src":"19339:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"19341:77:6","nodeType":"YulIdentifier","src":"19341:77:6"},"nativeSrc":"19341:79:6","nodeType":"YulFunctionCall","src":"19341:79:6"},"nativeSrc":"19341:79:6","nodeType":"YulExpressionStatement","src":"19341:79:6"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"19311:6:6","nodeType":"YulIdentifier","src":"19311:6:6"},{"kind":"number","nativeSrc":"19319:18:6","nodeType":"YulLiteral","src":"19319:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"19308:2:6","nodeType":"YulIdentifier","src":"19308:2:6"},"nativeSrc":"19308:30:6","nodeType":"YulFunctionCall","src":"19308:30:6"},"nativeSrc":"19305:117:6","nodeType":"YulIf","src":"19305:117:6"},{"nativeSrc":"19436:73:6","nodeType":"YulAssignment","src":"19436:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19481:9:6","nodeType":"YulIdentifier","src":"19481:9:6"},{"name":"offset","nativeSrc":"19492:6:6","nodeType":"YulIdentifier","src":"19492:6:6"}],"functionName":{"name":"add","nativeSrc":"19477:3:6","nodeType":"YulIdentifier","src":"19477:3:6"},"nativeSrc":"19477:22:6","nodeType":"YulFunctionCall","src":"19477:22:6"},{"name":"dataEnd","nativeSrc":"19501:7:6","nodeType":"YulIdentifier","src":"19501:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"19446:30:6","nodeType":"YulIdentifier","src":"19446:30:6"},"nativeSrc":"19446:63:6","nodeType":"YulFunctionCall","src":"19446:63:6"},"variableNames":[{"name":"value1","nativeSrc":"19436:6:6","nodeType":"YulIdentifier","src":"19436:6:6"}]}]},{"nativeSrc":"19529:118:6","nodeType":"YulBlock","src":"19529:118:6","statements":[{"nativeSrc":"19544:16:6","nodeType":"YulVariableDeclaration","src":"19544:16:6","value":{"kind":"number","nativeSrc":"19558:2:6","nodeType":"YulLiteral","src":"19558:2:6","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"19548:6:6","nodeType":"YulTypedName","src":"19548:6:6","type":""}]},{"nativeSrc":"19574:63:6","nodeType":"YulAssignment","src":"19574:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19609:9:6","nodeType":"YulIdentifier","src":"19609:9:6"},{"name":"offset","nativeSrc":"19620:6:6","nodeType":"YulIdentifier","src":"19620:6:6"}],"functionName":{"name":"add","nativeSrc":"19605:3:6","nodeType":"YulIdentifier","src":"19605:3:6"},"nativeSrc":"19605:22:6","nodeType":"YulFunctionCall","src":"19605:22:6"},{"name":"dataEnd","nativeSrc":"19629:7:6","nodeType":"YulIdentifier","src":"19629:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"19584:20:6","nodeType":"YulIdentifier","src":"19584:20:6"},"nativeSrc":"19584:53:6","nodeType":"YulFunctionCall","src":"19584:53:6"},"variableNames":[{"name":"value2","nativeSrc":"19574:6:6","nodeType":"YulIdentifier","src":"19574:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256","nativeSrc":"18855:799:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18919:9:6","nodeType":"YulTypedName","src":"18919:9:6","type":""},{"name":"dataEnd","nativeSrc":"18930:7:6","nodeType":"YulTypedName","src":"18930:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"18942:6:6","nodeType":"YulTypedName","src":"18942:6:6","type":""},{"name":"value1","nativeSrc":"18950:6:6","nodeType":"YulTypedName","src":"18950:6:6","type":""},{"name":"value2","nativeSrc":"18958:6:6","nodeType":"YulTypedName","src":"18958:6:6","type":""}],"src":"18855:799:6"},{"body":{"nativeSrc":"19692:28:6","nodeType":"YulBlock","src":"19692:28:6","statements":[{"nativeSrc":"19702:12:6","nodeType":"YulAssignment","src":"19702:12:6","value":{"name":"value","nativeSrc":"19709:5:6","nodeType":"YulIdentifier","src":"19709:5:6"},"variableNames":[{"name":"ret","nativeSrc":"19702:3:6","nodeType":"YulIdentifier","src":"19702:3:6"}]}]},"name":"identity","nativeSrc":"19660:60:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19678:5:6","nodeType":"YulTypedName","src":"19678:5:6","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"19688:3:6","nodeType":"YulTypedName","src":"19688:3:6","type":""}],"src":"19660:60:6"},{"body":{"nativeSrc":"19786:82:6","nodeType":"YulBlock","src":"19786:82:6","statements":[{"nativeSrc":"19796:66:6","nodeType":"YulAssignment","src":"19796:66:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"19854:5:6","nodeType":"YulIdentifier","src":"19854:5:6"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"19836:17:6","nodeType":"YulIdentifier","src":"19836:17:6"},"nativeSrc":"19836:24:6","nodeType":"YulFunctionCall","src":"19836:24:6"}],"functionName":{"name":"identity","nativeSrc":"19827:8:6","nodeType":"YulIdentifier","src":"19827:8:6"},"nativeSrc":"19827:34:6","nodeType":"YulFunctionCall","src":"19827:34:6"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"19809:17:6","nodeType":"YulIdentifier","src":"19809:17:6"},"nativeSrc":"19809:53:6","nodeType":"YulFunctionCall","src":"19809:53:6"},"variableNames":[{"name":"converted","nativeSrc":"19796:9:6","nodeType":"YulIdentifier","src":"19796:9:6"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"19726:142:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19766:5:6","nodeType":"YulTypedName","src":"19766:5:6","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"19776:9:6","nodeType":"YulTypedName","src":"19776:9:6","type":""}],"src":"19726:142:6"},{"body":{"nativeSrc":"19934:66:6","nodeType":"YulBlock","src":"19934:66:6","statements":[{"nativeSrc":"19944:50:6","nodeType":"YulAssignment","src":"19944:50:6","value":{"arguments":[{"name":"value","nativeSrc":"19988:5:6","nodeType":"YulIdentifier","src":"19988:5:6"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"19957:30:6","nodeType":"YulIdentifier","src":"19957:30:6"},"nativeSrc":"19957:37:6","nodeType":"YulFunctionCall","src":"19957:37:6"},"variableNames":[{"name":"converted","nativeSrc":"19944:9:6","nodeType":"YulIdentifier","src":"19944:9:6"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"19874:126:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19914:5:6","nodeType":"YulTypedName","src":"19914:5:6","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"19924:9:6","nodeType":"YulTypedName","src":"19924:9:6","type":""}],"src":"19874:126:6"},{"body":{"nativeSrc":"20079:66:6","nodeType":"YulBlock","src":"20079:66:6","statements":[{"nativeSrc":"20089:50:6","nodeType":"YulAssignment","src":"20089:50:6","value":{"arguments":[{"name":"value","nativeSrc":"20133:5:6","nodeType":"YulIdentifier","src":"20133:5:6"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"20102:30:6","nodeType":"YulIdentifier","src":"20102:30:6"},"nativeSrc":"20102:37:6","nodeType":"YulFunctionCall","src":"20102:37:6"},"variableNames":[{"name":"converted","nativeSrc":"20089:9:6","nodeType":"YulIdentifier","src":"20089:9:6"}]}]},"name":"convert_t_contract$_ERC20_$651_to_t_address","nativeSrc":"20006:139:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20059:5:6","nodeType":"YulTypedName","src":"20059:5:6","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"20069:9:6","nodeType":"YulTypedName","src":"20069:9:6","type":""}],"src":"20006:139:6"},{"body":{"nativeSrc":"20229:79:6","nodeType":"YulBlock","src":"20229:79:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"20246:3:6","nodeType":"YulIdentifier","src":"20246:3:6"},{"arguments":[{"name":"value","nativeSrc":"20295:5:6","nodeType":"YulIdentifier","src":"20295:5:6"}],"functionName":{"name":"convert_t_contract$_ERC20_$651_to_t_address","nativeSrc":"20251:43:6","nodeType":"YulIdentifier","src":"20251:43:6"},"nativeSrc":"20251:50:6","nodeType":"YulFunctionCall","src":"20251:50:6"}],"functionName":{"name":"mstore","nativeSrc":"20239:6:6","nodeType":"YulIdentifier","src":"20239:6:6"},"nativeSrc":"20239:63:6","nodeType":"YulFunctionCall","src":"20239:63:6"},"nativeSrc":"20239:63:6","nodeType":"YulExpressionStatement","src":"20239:63:6"}]},"name":"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack","nativeSrc":"20151:157:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20217:5:6","nodeType":"YulTypedName","src":"20217:5:6","type":""},{"name":"pos","nativeSrc":"20224:3:6","nodeType":"YulTypedName","src":"20224:3:6","type":""}],"src":"20151:157:6"},{"body":{"nativeSrc":"20425:137:6","nodeType":"YulBlock","src":"20425:137:6","statements":[{"nativeSrc":"20435:26:6","nodeType":"YulAssignment","src":"20435:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"20447:9:6","nodeType":"YulIdentifier","src":"20447:9:6"},{"kind":"number","nativeSrc":"20458:2:6","nodeType":"YulLiteral","src":"20458:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20443:3:6","nodeType":"YulIdentifier","src":"20443:3:6"},"nativeSrc":"20443:18:6","nodeType":"YulFunctionCall","src":"20443:18:6"},"variableNames":[{"name":"tail","nativeSrc":"20435:4:6","nodeType":"YulIdentifier","src":"20435:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20528:6:6","nodeType":"YulIdentifier","src":"20528:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"20541:9:6","nodeType":"YulIdentifier","src":"20541:9:6"},{"kind":"number","nativeSrc":"20552:1:6","nodeType":"YulLiteral","src":"20552:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20537:3:6","nodeType":"YulIdentifier","src":"20537:3:6"},"nativeSrc":"20537:17:6","nodeType":"YulFunctionCall","src":"20537:17:6"}],"functionName":{"name":"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack","nativeSrc":"20471:56:6","nodeType":"YulIdentifier","src":"20471:56:6"},"nativeSrc":"20471:84:6","nodeType":"YulFunctionCall","src":"20471:84:6"},"nativeSrc":"20471:84:6","nodeType":"YulExpressionStatement","src":"20471:84:6"}]},"name":"abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed","nativeSrc":"20314:248:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20397:9:6","nodeType":"YulTypedName","src":"20397:9:6","type":""},{"name":"value0","nativeSrc":"20409:6:6","nodeType":"YulTypedName","src":"20409:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20420:4:6","nodeType":"YulTypedName","src":"20420:4:6","type":""}],"src":"20314:248:6"},{"body":{"nativeSrc":"20674:63:6","nodeType":"YulBlock","src":"20674:63:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20696:6:6","nodeType":"YulIdentifier","src":"20696:6:6"},{"kind":"number","nativeSrc":"20704:1:6","nodeType":"YulLiteral","src":"20704:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20692:3:6","nodeType":"YulIdentifier","src":"20692:3:6"},"nativeSrc":"20692:14:6","nodeType":"YulFunctionCall","src":"20692:14:6"},{"hexValue":"496e646578206f7574206f6620626f756e6473","kind":"string","nativeSrc":"20708:21:6","nodeType":"YulLiteral","src":"20708:21:6","type":"","value":"Index out of bounds"}],"functionName":{"name":"mstore","nativeSrc":"20685:6:6","nodeType":"YulIdentifier","src":"20685:6:6"},"nativeSrc":"20685:45:6","nodeType":"YulFunctionCall","src":"20685:45:6"},"nativeSrc":"20685:45:6","nodeType":"YulExpressionStatement","src":"20685:45:6"}]},"name":"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","nativeSrc":"20568:169:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"20666:6:6","nodeType":"YulTypedName","src":"20666:6:6","type":""}],"src":"20568:169:6"},{"body":{"nativeSrc":"20889:220:6","nodeType":"YulBlock","src":"20889:220:6","statements":[{"nativeSrc":"20899:74:6","nodeType":"YulAssignment","src":"20899:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"20965:3:6","nodeType":"YulIdentifier","src":"20965:3:6"},{"kind":"number","nativeSrc":"20970:2:6","nodeType":"YulLiteral","src":"20970:2:6","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"20906:58:6","nodeType":"YulIdentifier","src":"20906:58:6"},"nativeSrc":"20906:67:6","nodeType":"YulFunctionCall","src":"20906:67:6"},"variableNames":[{"name":"pos","nativeSrc":"20899:3:6","nodeType":"YulIdentifier","src":"20899:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"21071:3:6","nodeType":"YulIdentifier","src":"21071:3:6"}],"functionName":{"name":"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","nativeSrc":"20982:88:6","nodeType":"YulIdentifier","src":"20982:88:6"},"nativeSrc":"20982:93:6","nodeType":"YulFunctionCall","src":"20982:93:6"},"nativeSrc":"20982:93:6","nodeType":"YulExpressionStatement","src":"20982:93:6"},{"nativeSrc":"21084:19:6","nodeType":"YulAssignment","src":"21084:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"21095:3:6","nodeType":"YulIdentifier","src":"21095:3:6"},{"kind":"number","nativeSrc":"21100:2:6","nodeType":"YulLiteral","src":"21100:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21091:3:6","nodeType":"YulIdentifier","src":"21091:3:6"},"nativeSrc":"21091:12:6","nodeType":"YulFunctionCall","src":"21091:12:6"},"variableNames":[{"name":"end","nativeSrc":"21084:3:6","nodeType":"YulIdentifier","src":"21084:3:6"}]}]},"name":"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack","nativeSrc":"20743:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20877:3:6","nodeType":"YulTypedName","src":"20877:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20885:3:6","nodeType":"YulTypedName","src":"20885:3:6","type":""}],"src":"20743:366:6"},{"body":{"nativeSrc":"21286:248:6","nodeType":"YulBlock","src":"21286:248:6","statements":[{"nativeSrc":"21296:26:6","nodeType":"YulAssignment","src":"21296:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"21308:9:6","nodeType":"YulIdentifier","src":"21308:9:6"},{"kind":"number","nativeSrc":"21319:2:6","nodeType":"YulLiteral","src":"21319:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21304:3:6","nodeType":"YulIdentifier","src":"21304:3:6"},"nativeSrc":"21304:18:6","nodeType":"YulFunctionCall","src":"21304:18:6"},"variableNames":[{"name":"tail","nativeSrc":"21296:4:6","nodeType":"YulIdentifier","src":"21296:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21343:9:6","nodeType":"YulIdentifier","src":"21343:9:6"},{"kind":"number","nativeSrc":"21354:1:6","nodeType":"YulLiteral","src":"21354:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21339:3:6","nodeType":"YulIdentifier","src":"21339:3:6"},"nativeSrc":"21339:17:6","nodeType":"YulFunctionCall","src":"21339:17:6"},{"arguments":[{"name":"tail","nativeSrc":"21362:4:6","nodeType":"YulIdentifier","src":"21362:4:6"},{"name":"headStart","nativeSrc":"21368:9:6","nodeType":"YulIdentifier","src":"21368:9:6"}],"functionName":{"name":"sub","nativeSrc":"21358:3:6","nodeType":"YulIdentifier","src":"21358:3:6"},"nativeSrc":"21358:20:6","nodeType":"YulFunctionCall","src":"21358:20:6"}],"functionName":{"name":"mstore","nativeSrc":"21332:6:6","nodeType":"YulIdentifier","src":"21332:6:6"},"nativeSrc":"21332:47:6","nodeType":"YulFunctionCall","src":"21332:47:6"},"nativeSrc":"21332:47:6","nodeType":"YulExpressionStatement","src":"21332:47:6"},{"nativeSrc":"21388:139:6","nodeType":"YulAssignment","src":"21388:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"21522:4:6","nodeType":"YulIdentifier","src":"21522:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack","nativeSrc":"21396:124:6","nodeType":"YulIdentifier","src":"21396:124:6"},"nativeSrc":"21396:131:6","nodeType":"YulFunctionCall","src":"21396:131:6"},"variableNames":[{"name":"tail","nativeSrc":"21388:4:6","nodeType":"YulIdentifier","src":"21388:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21115:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21266:9:6","nodeType":"YulTypedName","src":"21266:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21281:4:6","nodeType":"YulTypedName","src":"21281:4:6","type":""}],"src":"21115:419:6"},{"body":{"nativeSrc":"21568:152:6","nodeType":"YulBlock","src":"21568:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21585:1:6","nodeType":"YulLiteral","src":"21585:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"21588:77:6","nodeType":"YulLiteral","src":"21588:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"21578:6:6","nodeType":"YulIdentifier","src":"21578:6:6"},"nativeSrc":"21578:88:6","nodeType":"YulFunctionCall","src":"21578:88:6"},"nativeSrc":"21578:88:6","nodeType":"YulExpressionStatement","src":"21578:88:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21682:1:6","nodeType":"YulLiteral","src":"21682:1:6","type":"","value":"4"},{"kind":"number","nativeSrc":"21685:4:6","nodeType":"YulLiteral","src":"21685:4:6","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"21675:6:6","nodeType":"YulIdentifier","src":"21675:6:6"},"nativeSrc":"21675:15:6","nodeType":"YulFunctionCall","src":"21675:15:6"},"nativeSrc":"21675:15:6","nodeType":"YulExpressionStatement","src":"21675:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21706:1:6","nodeType":"YulLiteral","src":"21706:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"21709:4:6","nodeType":"YulLiteral","src":"21709:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"21699:6:6","nodeType":"YulIdentifier","src":"21699:6:6"},"nativeSrc":"21699:15:6","nodeType":"YulFunctionCall","src":"21699:15:6"},"nativeSrc":"21699:15:6","nodeType":"YulExpressionStatement","src":"21699:15:6"}]},"name":"panic_error_0x22","nativeSrc":"21540:180:6","nodeType":"YulFunctionDefinition","src":"21540:180:6"},{"body":{"nativeSrc":"21777:269:6","nodeType":"YulBlock","src":"21777:269:6","statements":[{"nativeSrc":"21787:22:6","nodeType":"YulAssignment","src":"21787:22:6","value":{"arguments":[{"name":"data","nativeSrc":"21801:4:6","nodeType":"YulIdentifier","src":"21801:4:6"},{"kind":"number","nativeSrc":"21807:1:6","nodeType":"YulLiteral","src":"21807:1:6","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"21797:3:6","nodeType":"YulIdentifier","src":"21797:3:6"},"nativeSrc":"21797:12:6","nodeType":"YulFunctionCall","src":"21797:12:6"},"variableNames":[{"name":"length","nativeSrc":"21787:6:6","nodeType":"YulIdentifier","src":"21787:6:6"}]},{"nativeSrc":"21818:38:6","nodeType":"YulVariableDeclaration","src":"21818:38:6","value":{"arguments":[{"name":"data","nativeSrc":"21848:4:6","nodeType":"YulIdentifier","src":"21848:4:6"},{"kind":"number","nativeSrc":"21854:1:6","nodeType":"YulLiteral","src":"21854:1:6","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"21844:3:6","nodeType":"YulIdentifier","src":"21844:3:6"},"nativeSrc":"21844:12:6","nodeType":"YulFunctionCall","src":"21844:12:6"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"21822:18:6","nodeType":"YulTypedName","src":"21822:18:6","type":""}]},{"body":{"nativeSrc":"21895:51:6","nodeType":"YulBlock","src":"21895:51:6","statements":[{"nativeSrc":"21909:27:6","nodeType":"YulAssignment","src":"21909:27:6","value":{"arguments":[{"name":"length","nativeSrc":"21923:6:6","nodeType":"YulIdentifier","src":"21923:6:6"},{"kind":"number","nativeSrc":"21931:4:6","nodeType":"YulLiteral","src":"21931:4:6","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"21919:3:6","nodeType":"YulIdentifier","src":"21919:3:6"},"nativeSrc":"21919:17:6","nodeType":"YulFunctionCall","src":"21919:17:6"},"variableNames":[{"name":"length","nativeSrc":"21909:6:6","nodeType":"YulIdentifier","src":"21909:6:6"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"21875:18:6","nodeType":"YulIdentifier","src":"21875:18:6"}],"functionName":{"name":"iszero","nativeSrc":"21868:6:6","nodeType":"YulIdentifier","src":"21868:6:6"},"nativeSrc":"21868:26:6","nodeType":"YulFunctionCall","src":"21868:26:6"},"nativeSrc":"21865:81:6","nodeType":"YulIf","src":"21865:81:6"},{"body":{"nativeSrc":"21998:42:6","nodeType":"YulBlock","src":"21998:42:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"22012:16:6","nodeType":"YulIdentifier","src":"22012:16:6"},"nativeSrc":"22012:18:6","nodeType":"YulFunctionCall","src":"22012:18:6"},"nativeSrc":"22012:18:6","nodeType":"YulExpressionStatement","src":"22012:18:6"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"21962:18:6","nodeType":"YulIdentifier","src":"21962:18:6"},{"arguments":[{"name":"length","nativeSrc":"21985:6:6","nodeType":"YulIdentifier","src":"21985:6:6"},{"kind":"number","nativeSrc":"21993:2:6","nodeType":"YulLiteral","src":"21993:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"21982:2:6","nodeType":"YulIdentifier","src":"21982:2:6"},"nativeSrc":"21982:14:6","nodeType":"YulFunctionCall","src":"21982:14:6"}],"functionName":{"name":"eq","nativeSrc":"21959:2:6","nodeType":"YulIdentifier","src":"21959:2:6"},"nativeSrc":"21959:38:6","nodeType":"YulFunctionCall","src":"21959:38:6"},"nativeSrc":"21956:84:6","nodeType":"YulIf","src":"21956:84:6"}]},"name":"extract_byte_array_length","nativeSrc":"21726:320:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"21761:4:6","nodeType":"YulTypedName","src":"21761:4:6","type":""}],"returnVariables":[{"name":"length","nativeSrc":"21770:6:6","nodeType":"YulTypedName","src":"21770:6:6","type":""}],"src":"21726:320:6"},{"body":{"nativeSrc":"22158:64:6","nodeType":"YulBlock","src":"22158:64:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22180:6:6","nodeType":"YulIdentifier","src":"22180:6:6"},{"kind":"number","nativeSrc":"22188:1:6","nodeType":"YulLiteral","src":"22188:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22176:3:6","nodeType":"YulIdentifier","src":"22176:3:6"},"nativeSrc":"22176:14:6","nodeType":"YulFunctionCall","src":"22176:14:6"},{"hexValue":"506170657220646f6573206e6f74206578697374","kind":"string","nativeSrc":"22192:22:6","nodeType":"YulLiteral","src":"22192:22:6","type":"","value":"Paper does not exist"}],"functionName":{"name":"mstore","nativeSrc":"22169:6:6","nodeType":"YulIdentifier","src":"22169:6:6"},"nativeSrc":"22169:46:6","nodeType":"YulFunctionCall","src":"22169:46:6"},"nativeSrc":"22169:46:6","nodeType":"YulExpressionStatement","src":"22169:46:6"}]},"name":"store_literal_in_memory_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","nativeSrc":"22052:170:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"22150:6:6","nodeType":"YulTypedName","src":"22150:6:6","type":""}],"src":"22052:170:6"},{"body":{"nativeSrc":"22374:220:6","nodeType":"YulBlock","src":"22374:220:6","statements":[{"nativeSrc":"22384:74:6","nodeType":"YulAssignment","src":"22384:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"22450:3:6","nodeType":"YulIdentifier","src":"22450:3:6"},{"kind":"number","nativeSrc":"22455:2:6","nodeType":"YulLiteral","src":"22455:2:6","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"22391:58:6","nodeType":"YulIdentifier","src":"22391:58:6"},"nativeSrc":"22391:67:6","nodeType":"YulFunctionCall","src":"22391:67:6"},"variableNames":[{"name":"pos","nativeSrc":"22384:3:6","nodeType":"YulIdentifier","src":"22384:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"22556:3:6","nodeType":"YulIdentifier","src":"22556:3:6"}],"functionName":{"name":"store_literal_in_memory_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","nativeSrc":"22467:88:6","nodeType":"YulIdentifier","src":"22467:88:6"},"nativeSrc":"22467:93:6","nodeType":"YulFunctionCall","src":"22467:93:6"},"nativeSrc":"22467:93:6","nodeType":"YulExpressionStatement","src":"22467:93:6"},{"nativeSrc":"22569:19:6","nodeType":"YulAssignment","src":"22569:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"22580:3:6","nodeType":"YulIdentifier","src":"22580:3:6"},{"kind":"number","nativeSrc":"22585:2:6","nodeType":"YulLiteral","src":"22585:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22576:3:6","nodeType":"YulIdentifier","src":"22576:3:6"},"nativeSrc":"22576:12:6","nodeType":"YulFunctionCall","src":"22576:12:6"},"variableNames":[{"name":"end","nativeSrc":"22569:3:6","nodeType":"YulIdentifier","src":"22569:3:6"}]}]},"name":"abi_encode_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf_to_t_string_memory_ptr_fromStack","nativeSrc":"22228:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22362:3:6","nodeType":"YulTypedName","src":"22362:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22370:3:6","nodeType":"YulTypedName","src":"22370:3:6","type":""}],"src":"22228:366:6"},{"body":{"nativeSrc":"22771:248:6","nodeType":"YulBlock","src":"22771:248:6","statements":[{"nativeSrc":"22781:26:6","nodeType":"YulAssignment","src":"22781:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"22793:9:6","nodeType":"YulIdentifier","src":"22793:9:6"},{"kind":"number","nativeSrc":"22804:2:6","nodeType":"YulLiteral","src":"22804:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22789:3:6","nodeType":"YulIdentifier","src":"22789:3:6"},"nativeSrc":"22789:18:6","nodeType":"YulFunctionCall","src":"22789:18:6"},"variableNames":[{"name":"tail","nativeSrc":"22781:4:6","nodeType":"YulIdentifier","src":"22781:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22828:9:6","nodeType":"YulIdentifier","src":"22828:9:6"},{"kind":"number","nativeSrc":"22839:1:6","nodeType":"YulLiteral","src":"22839:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22824:3:6","nodeType":"YulIdentifier","src":"22824:3:6"},"nativeSrc":"22824:17:6","nodeType":"YulFunctionCall","src":"22824:17:6"},{"arguments":[{"name":"tail","nativeSrc":"22847:4:6","nodeType":"YulIdentifier","src":"22847:4:6"},{"name":"headStart","nativeSrc":"22853:9:6","nodeType":"YulIdentifier","src":"22853:9:6"}],"functionName":{"name":"sub","nativeSrc":"22843:3:6","nodeType":"YulIdentifier","src":"22843:3:6"},"nativeSrc":"22843:20:6","nodeType":"YulFunctionCall","src":"22843:20:6"}],"functionName":{"name":"mstore","nativeSrc":"22817:6:6","nodeType":"YulIdentifier","src":"22817:6:6"},"nativeSrc":"22817:47:6","nodeType":"YulFunctionCall","src":"22817:47:6"},"nativeSrc":"22817:47:6","nodeType":"YulExpressionStatement","src":"22817:47:6"},{"nativeSrc":"22873:139:6","nodeType":"YulAssignment","src":"22873:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"23007:4:6","nodeType":"YulIdentifier","src":"23007:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf_to_t_string_memory_ptr_fromStack","nativeSrc":"22881:124:6","nodeType":"YulIdentifier","src":"22881:124:6"},"nativeSrc":"22881:131:6","nodeType":"YulFunctionCall","src":"22881:131:6"},"variableNames":[{"name":"tail","nativeSrc":"22873:4:6","nodeType":"YulIdentifier","src":"22873:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22600:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22751:9:6","nodeType":"YulTypedName","src":"22751:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22766:4:6","nodeType":"YulTypedName","src":"22766:4:6","type":""}],"src":"22600:419:6"},{"body":{"nativeSrc":"23131:122:6","nodeType":"YulBlock","src":"23131:122:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"23153:6:6","nodeType":"YulIdentifier","src":"23153:6:6"},{"kind":"number","nativeSrc":"23161:1:6","nodeType":"YulLiteral","src":"23161:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23149:3:6","nodeType":"YulIdentifier","src":"23149:3:6"},"nativeSrc":"23149:14:6","nodeType":"YulFunctionCall","src":"23149:14:6"},{"hexValue":"4f6e6c792074686520617574686f722063616e20617070726f766520636f6e74","kind":"string","nativeSrc":"23165:34:6","nodeType":"YulLiteral","src":"23165:34:6","type":"","value":"Only the author can approve cont"}],"functionName":{"name":"mstore","nativeSrc":"23142:6:6","nodeType":"YulIdentifier","src":"23142:6:6"},"nativeSrc":"23142:58:6","nodeType":"YulFunctionCall","src":"23142:58:6"},"nativeSrc":"23142:58:6","nodeType":"YulExpressionStatement","src":"23142:58:6"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"23221:6:6","nodeType":"YulIdentifier","src":"23221:6:6"},{"kind":"number","nativeSrc":"23229:2:6","nodeType":"YulLiteral","src":"23229:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23217:3:6","nodeType":"YulIdentifier","src":"23217:3:6"},"nativeSrc":"23217:15:6","nodeType":"YulFunctionCall","src":"23217:15:6"},{"hexValue":"7269627574696f6e73","kind":"string","nativeSrc":"23234:11:6","nodeType":"YulLiteral","src":"23234:11:6","type":"","value":"ributions"}],"functionName":{"name":"mstore","nativeSrc":"23210:6:6","nodeType":"YulIdentifier","src":"23210:6:6"},"nativeSrc":"23210:36:6","nodeType":"YulFunctionCall","src":"23210:36:6"},"nativeSrc":"23210:36:6","nodeType":"YulExpressionStatement","src":"23210:36:6"}]},"name":"store_literal_in_memory_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1","nativeSrc":"23025:228:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"23123:6:6","nodeType":"YulTypedName","src":"23123:6:6","type":""}],"src":"23025:228:6"},{"body":{"nativeSrc":"23405:220:6","nodeType":"YulBlock","src":"23405:220:6","statements":[{"nativeSrc":"23415:74:6","nodeType":"YulAssignment","src":"23415:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"23481:3:6","nodeType":"YulIdentifier","src":"23481:3:6"},{"kind":"number","nativeSrc":"23486:2:6","nodeType":"YulLiteral","src":"23486:2:6","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"23422:58:6","nodeType":"YulIdentifier","src":"23422:58:6"},"nativeSrc":"23422:67:6","nodeType":"YulFunctionCall","src":"23422:67:6"},"variableNames":[{"name":"pos","nativeSrc":"23415:3:6","nodeType":"YulIdentifier","src":"23415:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"23587:3:6","nodeType":"YulIdentifier","src":"23587:3:6"}],"functionName":{"name":"store_literal_in_memory_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1","nativeSrc":"23498:88:6","nodeType":"YulIdentifier","src":"23498:88:6"},"nativeSrc":"23498:93:6","nodeType":"YulFunctionCall","src":"23498:93:6"},"nativeSrc":"23498:93:6","nodeType":"YulExpressionStatement","src":"23498:93:6"},{"nativeSrc":"23600:19:6","nodeType":"YulAssignment","src":"23600:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"23611:3:6","nodeType":"YulIdentifier","src":"23611:3:6"},{"kind":"number","nativeSrc":"23616:2:6","nodeType":"YulLiteral","src":"23616:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23607:3:6","nodeType":"YulIdentifier","src":"23607:3:6"},"nativeSrc":"23607:12:6","nodeType":"YulFunctionCall","src":"23607:12:6"},"variableNames":[{"name":"end","nativeSrc":"23600:3:6","nodeType":"YulIdentifier","src":"23600:3:6"}]}]},"name":"abi_encode_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1_to_t_string_memory_ptr_fromStack","nativeSrc":"23259:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"23393:3:6","nodeType":"YulTypedName","src":"23393:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23401:3:6","nodeType":"YulTypedName","src":"23401:3:6","type":""}],"src":"23259:366:6"},{"body":{"nativeSrc":"23802:248:6","nodeType":"YulBlock","src":"23802:248:6","statements":[{"nativeSrc":"23812:26:6","nodeType":"YulAssignment","src":"23812:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"23824:9:6","nodeType":"YulIdentifier","src":"23824:9:6"},{"kind":"number","nativeSrc":"23835:2:6","nodeType":"YulLiteral","src":"23835:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23820:3:6","nodeType":"YulIdentifier","src":"23820:3:6"},"nativeSrc":"23820:18:6","nodeType":"YulFunctionCall","src":"23820:18:6"},"variableNames":[{"name":"tail","nativeSrc":"23812:4:6","nodeType":"YulIdentifier","src":"23812:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23859:9:6","nodeType":"YulIdentifier","src":"23859:9:6"},{"kind":"number","nativeSrc":"23870:1:6","nodeType":"YulLiteral","src":"23870:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23855:3:6","nodeType":"YulIdentifier","src":"23855:3:6"},"nativeSrc":"23855:17:6","nodeType":"YulFunctionCall","src":"23855:17:6"},{"arguments":[{"name":"tail","nativeSrc":"23878:4:6","nodeType":"YulIdentifier","src":"23878:4:6"},{"name":"headStart","nativeSrc":"23884:9:6","nodeType":"YulIdentifier","src":"23884:9:6"}],"functionName":{"name":"sub","nativeSrc":"23874:3:6","nodeType":"YulIdentifier","src":"23874:3:6"},"nativeSrc":"23874:20:6","nodeType":"YulFunctionCall","src":"23874:20:6"}],"functionName":{"name":"mstore","nativeSrc":"23848:6:6","nodeType":"YulIdentifier","src":"23848:6:6"},"nativeSrc":"23848:47:6","nodeType":"YulFunctionCall","src":"23848:47:6"},"nativeSrc":"23848:47:6","nodeType":"YulExpressionStatement","src":"23848:47:6"},{"nativeSrc":"23904:139:6","nodeType":"YulAssignment","src":"23904:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"24038:4:6","nodeType":"YulIdentifier","src":"24038:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1_to_t_string_memory_ptr_fromStack","nativeSrc":"23912:124:6","nodeType":"YulIdentifier","src":"23912:124:6"},"nativeSrc":"23912:131:6","nodeType":"YulFunctionCall","src":"23912:131:6"},"variableNames":[{"name":"tail","nativeSrc":"23904:4:6","nodeType":"YulIdentifier","src":"23904:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"23631:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23782:9:6","nodeType":"YulTypedName","src":"23782:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23797:4:6","nodeType":"YulTypedName","src":"23797:4:6","type":""}],"src":"23631:419:6"},{"body":{"nativeSrc":"24162:70:6","nodeType":"YulBlock","src":"24162:70:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"24184:6:6","nodeType":"YulIdentifier","src":"24184:6:6"},{"kind":"number","nativeSrc":"24192:1:6","nodeType":"YulLiteral","src":"24192:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24180:3:6","nodeType":"YulIdentifier","src":"24180:3:6"},"nativeSrc":"24180:14:6","nodeType":"YulFunctionCall","src":"24180:14:6"},{"hexValue":"496e76616c696420636f6e747269627574696f6e20696e646578","kind":"string","nativeSrc":"24196:28:6","nodeType":"YulLiteral","src":"24196:28:6","type":"","value":"Invalid contribution index"}],"functionName":{"name":"mstore","nativeSrc":"24173:6:6","nodeType":"YulIdentifier","src":"24173:6:6"},"nativeSrc":"24173:52:6","nodeType":"YulFunctionCall","src":"24173:52:6"},"nativeSrc":"24173:52:6","nodeType":"YulExpressionStatement","src":"24173:52:6"}]},"name":"store_literal_in_memory_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340","nativeSrc":"24056:176:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"24154:6:6","nodeType":"YulTypedName","src":"24154:6:6","type":""}],"src":"24056:176:6"},{"body":{"nativeSrc":"24384:220:6","nodeType":"YulBlock","src":"24384:220:6","statements":[{"nativeSrc":"24394:74:6","nodeType":"YulAssignment","src":"24394:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"24460:3:6","nodeType":"YulIdentifier","src":"24460:3:6"},{"kind":"number","nativeSrc":"24465:2:6","nodeType":"YulLiteral","src":"24465:2:6","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"24401:58:6","nodeType":"YulIdentifier","src":"24401:58:6"},"nativeSrc":"24401:67:6","nodeType":"YulFunctionCall","src":"24401:67:6"},"variableNames":[{"name":"pos","nativeSrc":"24394:3:6","nodeType":"YulIdentifier","src":"24394:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"24566:3:6","nodeType":"YulIdentifier","src":"24566:3:6"}],"functionName":{"name":"store_literal_in_memory_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340","nativeSrc":"24477:88:6","nodeType":"YulIdentifier","src":"24477:88:6"},"nativeSrc":"24477:93:6","nodeType":"YulFunctionCall","src":"24477:93:6"},"nativeSrc":"24477:93:6","nodeType":"YulExpressionStatement","src":"24477:93:6"},{"nativeSrc":"24579:19:6","nodeType":"YulAssignment","src":"24579:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"24590:3:6","nodeType":"YulIdentifier","src":"24590:3:6"},{"kind":"number","nativeSrc":"24595:2:6","nodeType":"YulLiteral","src":"24595:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24586:3:6","nodeType":"YulIdentifier","src":"24586:3:6"},"nativeSrc":"24586:12:6","nodeType":"YulFunctionCall","src":"24586:12:6"},"variableNames":[{"name":"end","nativeSrc":"24579:3:6","nodeType":"YulIdentifier","src":"24579:3:6"}]}]},"name":"abi_encode_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340_to_t_string_memory_ptr_fromStack","nativeSrc":"24238:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"24372:3:6","nodeType":"YulTypedName","src":"24372:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"24380:3:6","nodeType":"YulTypedName","src":"24380:3:6","type":""}],"src":"24238:366:6"},{"body":{"nativeSrc":"24781:248:6","nodeType":"YulBlock","src":"24781:248:6","statements":[{"nativeSrc":"24791:26:6","nodeType":"YulAssignment","src":"24791:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"24803:9:6","nodeType":"YulIdentifier","src":"24803:9:6"},{"kind":"number","nativeSrc":"24814:2:6","nodeType":"YulLiteral","src":"24814:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24799:3:6","nodeType":"YulIdentifier","src":"24799:3:6"},"nativeSrc":"24799:18:6","nodeType":"YulFunctionCall","src":"24799:18:6"},"variableNames":[{"name":"tail","nativeSrc":"24791:4:6","nodeType":"YulIdentifier","src":"24791:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24838:9:6","nodeType":"YulIdentifier","src":"24838:9:6"},{"kind":"number","nativeSrc":"24849:1:6","nodeType":"YulLiteral","src":"24849:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24834:3:6","nodeType":"YulIdentifier","src":"24834:3:6"},"nativeSrc":"24834:17:6","nodeType":"YulFunctionCall","src":"24834:17:6"},{"arguments":[{"name":"tail","nativeSrc":"24857:4:6","nodeType":"YulIdentifier","src":"24857:4:6"},{"name":"headStart","nativeSrc":"24863:9:6","nodeType":"YulIdentifier","src":"24863:9:6"}],"functionName":{"name":"sub","nativeSrc":"24853:3:6","nodeType":"YulIdentifier","src":"24853:3:6"},"nativeSrc":"24853:20:6","nodeType":"YulFunctionCall","src":"24853:20:6"}],"functionName":{"name":"mstore","nativeSrc":"24827:6:6","nodeType":"YulIdentifier","src":"24827:6:6"},"nativeSrc":"24827:47:6","nodeType":"YulFunctionCall","src":"24827:47:6"},"nativeSrc":"24827:47:6","nodeType":"YulExpressionStatement","src":"24827:47:6"},{"nativeSrc":"24883:139:6","nodeType":"YulAssignment","src":"24883:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"25017:4:6","nodeType":"YulIdentifier","src":"25017:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340_to_t_string_memory_ptr_fromStack","nativeSrc":"24891:124:6","nodeType":"YulIdentifier","src":"24891:124:6"},"nativeSrc":"24891:131:6","nodeType":"YulFunctionCall","src":"24891:131:6"},"variableNames":[{"name":"tail","nativeSrc":"24883:4:6","nodeType":"YulIdentifier","src":"24883:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"24610:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24761:9:6","nodeType":"YulTypedName","src":"24761:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24776:4:6","nodeType":"YulTypedName","src":"24776:4:6","type":""}],"src":"24610:419:6"},{"body":{"nativeSrc":"25141:73:6","nodeType":"YulBlock","src":"25141:73:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"25163:6:6","nodeType":"YulIdentifier","src":"25163:6:6"},{"kind":"number","nativeSrc":"25171:1:6","nodeType":"YulLiteral","src":"25171:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25159:3:6","nodeType":"YulIdentifier","src":"25159:3:6"},"nativeSrc":"25159:14:6","nodeType":"YulFunctionCall","src":"25159:14:6"},{"hexValue":"436f6e747269627574696f6e20616c726561647920617070726f766564","kind":"string","nativeSrc":"25175:31:6","nodeType":"YulLiteral","src":"25175:31:6","type":"","value":"Contribution already approved"}],"functionName":{"name":"mstore","nativeSrc":"25152:6:6","nodeType":"YulIdentifier","src":"25152:6:6"},"nativeSrc":"25152:55:6","nodeType":"YulFunctionCall","src":"25152:55:6"},"nativeSrc":"25152:55:6","nodeType":"YulExpressionStatement","src":"25152:55:6"}]},"name":"store_literal_in_memory_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20","nativeSrc":"25035:179:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"25133:6:6","nodeType":"YulTypedName","src":"25133:6:6","type":""}],"src":"25035:179:6"},{"body":{"nativeSrc":"25366:220:6","nodeType":"YulBlock","src":"25366:220:6","statements":[{"nativeSrc":"25376:74:6","nodeType":"YulAssignment","src":"25376:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"25442:3:6","nodeType":"YulIdentifier","src":"25442:3:6"},{"kind":"number","nativeSrc":"25447:2:6","nodeType":"YulLiteral","src":"25447:2:6","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"25383:58:6","nodeType":"YulIdentifier","src":"25383:58:6"},"nativeSrc":"25383:67:6","nodeType":"YulFunctionCall","src":"25383:67:6"},"variableNames":[{"name":"pos","nativeSrc":"25376:3:6","nodeType":"YulIdentifier","src":"25376:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"25548:3:6","nodeType":"YulIdentifier","src":"25548:3:6"}],"functionName":{"name":"store_literal_in_memory_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20","nativeSrc":"25459:88:6","nodeType":"YulIdentifier","src":"25459:88:6"},"nativeSrc":"25459:93:6","nodeType":"YulFunctionCall","src":"25459:93:6"},"nativeSrc":"25459:93:6","nodeType":"YulExpressionStatement","src":"25459:93:6"},{"nativeSrc":"25561:19:6","nodeType":"YulAssignment","src":"25561:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"25572:3:6","nodeType":"YulIdentifier","src":"25572:3:6"},{"kind":"number","nativeSrc":"25577:2:6","nodeType":"YulLiteral","src":"25577:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25568:3:6","nodeType":"YulIdentifier","src":"25568:3:6"},"nativeSrc":"25568:12:6","nodeType":"YulFunctionCall","src":"25568:12:6"},"variableNames":[{"name":"end","nativeSrc":"25561:3:6","nodeType":"YulIdentifier","src":"25561:3:6"}]}]},"name":"abi_encode_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20_to_t_string_memory_ptr_fromStack","nativeSrc":"25220:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25354:3:6","nodeType":"YulTypedName","src":"25354:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25362:3:6","nodeType":"YulTypedName","src":"25362:3:6","type":""}],"src":"25220:366:6"},{"body":{"nativeSrc":"25763:248:6","nodeType":"YulBlock","src":"25763:248:6","statements":[{"nativeSrc":"25773:26:6","nodeType":"YulAssignment","src":"25773:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"25785:9:6","nodeType":"YulIdentifier","src":"25785:9:6"},{"kind":"number","nativeSrc":"25796:2:6","nodeType":"YulLiteral","src":"25796:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25781:3:6","nodeType":"YulIdentifier","src":"25781:3:6"},"nativeSrc":"25781:18:6","nodeType":"YulFunctionCall","src":"25781:18:6"},"variableNames":[{"name":"tail","nativeSrc":"25773:4:6","nodeType":"YulIdentifier","src":"25773:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25820:9:6","nodeType":"YulIdentifier","src":"25820:9:6"},{"kind":"number","nativeSrc":"25831:1:6","nodeType":"YulLiteral","src":"25831:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25816:3:6","nodeType":"YulIdentifier","src":"25816:3:6"},"nativeSrc":"25816:17:6","nodeType":"YulFunctionCall","src":"25816:17:6"},{"arguments":[{"name":"tail","nativeSrc":"25839:4:6","nodeType":"YulIdentifier","src":"25839:4:6"},{"name":"headStart","nativeSrc":"25845:9:6","nodeType":"YulIdentifier","src":"25845:9:6"}],"functionName":{"name":"sub","nativeSrc":"25835:3:6","nodeType":"YulIdentifier","src":"25835:3:6"},"nativeSrc":"25835:20:6","nodeType":"YulFunctionCall","src":"25835:20:6"}],"functionName":{"name":"mstore","nativeSrc":"25809:6:6","nodeType":"YulIdentifier","src":"25809:6:6"},"nativeSrc":"25809:47:6","nodeType":"YulFunctionCall","src":"25809:47:6"},"nativeSrc":"25809:47:6","nodeType":"YulExpressionStatement","src":"25809:47:6"},{"nativeSrc":"25865:139:6","nodeType":"YulAssignment","src":"25865:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"25999:4:6","nodeType":"YulIdentifier","src":"25999:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20_to_t_string_memory_ptr_fromStack","nativeSrc":"25873:124:6","nodeType":"YulIdentifier","src":"25873:124:6"},"nativeSrc":"25873:131:6","nodeType":"YulFunctionCall","src":"25873:131:6"},"variableNames":[{"name":"tail","nativeSrc":"25865:4:6","nodeType":"YulIdentifier","src":"25865:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"25592:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25743:9:6","nodeType":"YulTypedName","src":"25743:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25758:4:6","nodeType":"YulTypedName","src":"25758:4:6","type":""}],"src":"25592:419:6"},{"body":{"nativeSrc":"26045:152:6","nodeType":"YulBlock","src":"26045:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"26062:1:6","nodeType":"YulLiteral","src":"26062:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"26065:77:6","nodeType":"YulLiteral","src":"26065:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"26055:6:6","nodeType":"YulIdentifier","src":"26055:6:6"},"nativeSrc":"26055:88:6","nodeType":"YulFunctionCall","src":"26055:88:6"},"nativeSrc":"26055:88:6","nodeType":"YulExpressionStatement","src":"26055:88:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"26159:1:6","nodeType":"YulLiteral","src":"26159:1:6","type":"","value":"4"},{"kind":"number","nativeSrc":"26162:4:6","nodeType":"YulLiteral","src":"26162:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"26152:6:6","nodeType":"YulIdentifier","src":"26152:6:6"},"nativeSrc":"26152:15:6","nodeType":"YulFunctionCall","src":"26152:15:6"},"nativeSrc":"26152:15:6","nodeType":"YulExpressionStatement","src":"26152:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"26183:1:6","nodeType":"YulLiteral","src":"26183:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"26186:4:6","nodeType":"YulLiteral","src":"26186:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"26176:6:6","nodeType":"YulIdentifier","src":"26176:6:6"},"nativeSrc":"26176:15:6","nodeType":"YulFunctionCall","src":"26176:15:6"},"nativeSrc":"26176:15:6","nodeType":"YulExpressionStatement","src":"26176:15:6"}]},"name":"panic_error_0x11","nativeSrc":"26017:180:6","nodeType":"YulFunctionDefinition","src":"26017:180:6"},{"body":{"nativeSrc":"26251:362:6","nodeType":"YulBlock","src":"26251:362:6","statements":[{"nativeSrc":"26261:25:6","nodeType":"YulAssignment","src":"26261:25:6","value":{"arguments":[{"name":"x","nativeSrc":"26284:1:6","nodeType":"YulIdentifier","src":"26284:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"26266:17:6","nodeType":"YulIdentifier","src":"26266:17:6"},"nativeSrc":"26266:20:6","nodeType":"YulFunctionCall","src":"26266:20:6"},"variableNames":[{"name":"x","nativeSrc":"26261:1:6","nodeType":"YulIdentifier","src":"26261:1:6"}]},{"nativeSrc":"26295:25:6","nodeType":"YulAssignment","src":"26295:25:6","value":{"arguments":[{"name":"y","nativeSrc":"26318:1:6","nodeType":"YulIdentifier","src":"26318:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"26300:17:6","nodeType":"YulIdentifier","src":"26300:17:6"},"nativeSrc":"26300:20:6","nodeType":"YulFunctionCall","src":"26300:20:6"},"variableNames":[{"name":"y","nativeSrc":"26295:1:6","nodeType":"YulIdentifier","src":"26295:1:6"}]},{"nativeSrc":"26329:28:6","nodeType":"YulVariableDeclaration","src":"26329:28:6","value":{"arguments":[{"name":"x","nativeSrc":"26352:1:6","nodeType":"YulIdentifier","src":"26352:1:6"},{"name":"y","nativeSrc":"26355:1:6","nodeType":"YulIdentifier","src":"26355:1:6"}],"functionName":{"name":"mul","nativeSrc":"26348:3:6","nodeType":"YulIdentifier","src":"26348:3:6"},"nativeSrc":"26348:9:6","nodeType":"YulFunctionCall","src":"26348:9:6"},"variables":[{"name":"product_raw","nativeSrc":"26333:11:6","nodeType":"YulTypedName","src":"26333:11:6","type":""}]},{"nativeSrc":"26366:41:6","nodeType":"YulAssignment","src":"26366:41:6","value":{"arguments":[{"name":"product_raw","nativeSrc":"26395:11:6","nodeType":"YulIdentifier","src":"26395:11:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"26377:17:6","nodeType":"YulIdentifier","src":"26377:17:6"},"nativeSrc":"26377:30:6","nodeType":"YulFunctionCall","src":"26377:30:6"},"variableNames":[{"name":"product","nativeSrc":"26366:7:6","nodeType":"YulIdentifier","src":"26366:7:6"}]},{"body":{"nativeSrc":"26584:22:6","nodeType":"YulBlock","src":"26584:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"26586:16:6","nodeType":"YulIdentifier","src":"26586:16:6"},"nativeSrc":"26586:18:6","nodeType":"YulFunctionCall","src":"26586:18:6"},"nativeSrc":"26586:18:6","nodeType":"YulExpressionStatement","src":"26586:18:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"26517:1:6","nodeType":"YulIdentifier","src":"26517:1:6"}],"functionName":{"name":"iszero","nativeSrc":"26510:6:6","nodeType":"YulIdentifier","src":"26510:6:6"},"nativeSrc":"26510:9:6","nodeType":"YulFunctionCall","src":"26510:9:6"},{"arguments":[{"name":"y","nativeSrc":"26540:1:6","nodeType":"YulIdentifier","src":"26540:1:6"},{"arguments":[{"name":"product","nativeSrc":"26547:7:6","nodeType":"YulIdentifier","src":"26547:7:6"},{"name":"x","nativeSrc":"26556:1:6","nodeType":"YulIdentifier","src":"26556:1:6"}],"functionName":{"name":"div","nativeSrc":"26543:3:6","nodeType":"YulIdentifier","src":"26543:3:6"},"nativeSrc":"26543:15:6","nodeType":"YulFunctionCall","src":"26543:15:6"}],"functionName":{"name":"eq","nativeSrc":"26537:2:6","nodeType":"YulIdentifier","src":"26537:2:6"},"nativeSrc":"26537:22:6","nodeType":"YulFunctionCall","src":"26537:22:6"}],"functionName":{"name":"or","nativeSrc":"26490:2:6","nodeType":"YulIdentifier","src":"26490:2:6"},"nativeSrc":"26490:83:6","nodeType":"YulFunctionCall","src":"26490:83:6"}],"functionName":{"name":"iszero","nativeSrc":"26470:6:6","nodeType":"YulIdentifier","src":"26470:6:6"},"nativeSrc":"26470:113:6","nodeType":"YulFunctionCall","src":"26470:113:6"},"nativeSrc":"26467:139:6","nodeType":"YulIf","src":"26467:139:6"}]},"name":"checked_mul_t_uint256","nativeSrc":"26203:410:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"26234:1:6","nodeType":"YulTypedName","src":"26234:1:6","type":""},{"name":"y","nativeSrc":"26237:1:6","nodeType":"YulTypedName","src":"26237:1:6","type":""}],"returnVariables":[{"name":"product","nativeSrc":"26243:7:6","nodeType":"YulTypedName","src":"26243:7:6","type":""}],"src":"26203:410:6"},{"body":{"nativeSrc":"26647:152:6","nodeType":"YulBlock","src":"26647:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"26664:1:6","nodeType":"YulLiteral","src":"26664:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"26667:77:6","nodeType":"YulLiteral","src":"26667:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"26657:6:6","nodeType":"YulIdentifier","src":"26657:6:6"},"nativeSrc":"26657:88:6","nodeType":"YulFunctionCall","src":"26657:88:6"},"nativeSrc":"26657:88:6","nodeType":"YulExpressionStatement","src":"26657:88:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"26761:1:6","nodeType":"YulLiteral","src":"26761:1:6","type":"","value":"4"},{"kind":"number","nativeSrc":"26764:4:6","nodeType":"YulLiteral","src":"26764:4:6","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"26754:6:6","nodeType":"YulIdentifier","src":"26754:6:6"},"nativeSrc":"26754:15:6","nodeType":"YulFunctionCall","src":"26754:15:6"},"nativeSrc":"26754:15:6","nodeType":"YulExpressionStatement","src":"26754:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"26785:1:6","nodeType":"YulLiteral","src":"26785:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"26788:4:6","nodeType":"YulLiteral","src":"26788:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"26778:6:6","nodeType":"YulIdentifier","src":"26778:6:6"},"nativeSrc":"26778:15:6","nodeType":"YulFunctionCall","src":"26778:15:6"},"nativeSrc":"26778:15:6","nodeType":"YulExpressionStatement","src":"26778:15:6"}]},"name":"panic_error_0x12","nativeSrc":"26619:180:6","nodeType":"YulFunctionDefinition","src":"26619:180:6"},{"body":{"nativeSrc":"26847:143:6","nodeType":"YulBlock","src":"26847:143:6","statements":[{"nativeSrc":"26857:25:6","nodeType":"YulAssignment","src":"26857:25:6","value":{"arguments":[{"name":"x","nativeSrc":"26880:1:6","nodeType":"YulIdentifier","src":"26880:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"26862:17:6","nodeType":"YulIdentifier","src":"26862:17:6"},"nativeSrc":"26862:20:6","nodeType":"YulFunctionCall","src":"26862:20:6"},"variableNames":[{"name":"x","nativeSrc":"26857:1:6","nodeType":"YulIdentifier","src":"26857:1:6"}]},{"nativeSrc":"26891:25:6","nodeType":"YulAssignment","src":"26891:25:6","value":{"arguments":[{"name":"y","nativeSrc":"26914:1:6","nodeType":"YulIdentifier","src":"26914:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"26896:17:6","nodeType":"YulIdentifier","src":"26896:17:6"},"nativeSrc":"26896:20:6","nodeType":"YulFunctionCall","src":"26896:20:6"},"variableNames":[{"name":"y","nativeSrc":"26891:1:6","nodeType":"YulIdentifier","src":"26891:1:6"}]},{"body":{"nativeSrc":"26938:22:6","nodeType":"YulBlock","src":"26938:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"26940:16:6","nodeType":"YulIdentifier","src":"26940:16:6"},"nativeSrc":"26940:18:6","nodeType":"YulFunctionCall","src":"26940:18:6"},"nativeSrc":"26940:18:6","nodeType":"YulExpressionStatement","src":"26940:18:6"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"26935:1:6","nodeType":"YulIdentifier","src":"26935:1:6"}],"functionName":{"name":"iszero","nativeSrc":"26928:6:6","nodeType":"YulIdentifier","src":"26928:6:6"},"nativeSrc":"26928:9:6","nodeType":"YulFunctionCall","src":"26928:9:6"},"nativeSrc":"26925:35:6","nodeType":"YulIf","src":"26925:35:6"},{"nativeSrc":"26970:14:6","nodeType":"YulAssignment","src":"26970:14:6","value":{"arguments":[{"name":"x","nativeSrc":"26979:1:6","nodeType":"YulIdentifier","src":"26979:1:6"},{"name":"y","nativeSrc":"26982:1:6","nodeType":"YulIdentifier","src":"26982:1:6"}],"functionName":{"name":"div","nativeSrc":"26975:3:6","nodeType":"YulIdentifier","src":"26975:3:6"},"nativeSrc":"26975:9:6","nodeType":"YulFunctionCall","src":"26975:9:6"},"variableNames":[{"name":"r","nativeSrc":"26970:1:6","nodeType":"YulIdentifier","src":"26970:1:6"}]}]},"name":"checked_div_t_uint256","nativeSrc":"26805:185:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"26836:1:6","nodeType":"YulTypedName","src":"26836:1:6","type":""},{"name":"y","nativeSrc":"26839:1:6","nodeType":"YulTypedName","src":"26839:1:6","type":""}],"returnVariables":[{"name":"r","nativeSrc":"26845:1:6","nodeType":"YulTypedName","src":"26845:1:6","type":""}],"src":"26805:185:6"},{"body":{"nativeSrc":"27040:147:6","nodeType":"YulBlock","src":"27040:147:6","statements":[{"nativeSrc":"27050:25:6","nodeType":"YulAssignment","src":"27050:25:6","value":{"arguments":[{"name":"x","nativeSrc":"27073:1:6","nodeType":"YulIdentifier","src":"27073:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"27055:17:6","nodeType":"YulIdentifier","src":"27055:17:6"},"nativeSrc":"27055:20:6","nodeType":"YulFunctionCall","src":"27055:20:6"},"variableNames":[{"name":"x","nativeSrc":"27050:1:6","nodeType":"YulIdentifier","src":"27050:1:6"}]},{"nativeSrc":"27084:25:6","nodeType":"YulAssignment","src":"27084:25:6","value":{"arguments":[{"name":"y","nativeSrc":"27107:1:6","nodeType":"YulIdentifier","src":"27107:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"27089:17:6","nodeType":"YulIdentifier","src":"27089:17:6"},"nativeSrc":"27089:20:6","nodeType":"YulFunctionCall","src":"27089:20:6"},"variableNames":[{"name":"y","nativeSrc":"27084:1:6","nodeType":"YulIdentifier","src":"27084:1:6"}]},{"nativeSrc":"27118:16:6","nodeType":"YulAssignment","src":"27118:16:6","value":{"arguments":[{"name":"x","nativeSrc":"27129:1:6","nodeType":"YulIdentifier","src":"27129:1:6"},{"name":"y","nativeSrc":"27132:1:6","nodeType":"YulIdentifier","src":"27132:1:6"}],"functionName":{"name":"add","nativeSrc":"27125:3:6","nodeType":"YulIdentifier","src":"27125:3:6"},"nativeSrc":"27125:9:6","nodeType":"YulFunctionCall","src":"27125:9:6"},"variableNames":[{"name":"sum","nativeSrc":"27118:3:6","nodeType":"YulIdentifier","src":"27118:3:6"}]},{"body":{"nativeSrc":"27158:22:6","nodeType":"YulBlock","src":"27158:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"27160:16:6","nodeType":"YulIdentifier","src":"27160:16:6"},"nativeSrc":"27160:18:6","nodeType":"YulFunctionCall","src":"27160:18:6"},"nativeSrc":"27160:18:6","nodeType":"YulExpressionStatement","src":"27160:18:6"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"27150:1:6","nodeType":"YulIdentifier","src":"27150:1:6"},{"name":"sum","nativeSrc":"27153:3:6","nodeType":"YulIdentifier","src":"27153:3:6"}],"functionName":{"name":"gt","nativeSrc":"27147:2:6","nodeType":"YulIdentifier","src":"27147:2:6"},"nativeSrc":"27147:10:6","nodeType":"YulFunctionCall","src":"27147:10:6"},"nativeSrc":"27144:36:6","nodeType":"YulIf","src":"27144:36:6"}]},"name":"checked_add_t_uint256","nativeSrc":"26996:191:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"27027:1:6","nodeType":"YulTypedName","src":"27027:1:6","type":""},{"name":"y","nativeSrc":"27030:1:6","nodeType":"YulTypedName","src":"27030:1:6","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"27036:3:6","nodeType":"YulTypedName","src":"27036:3:6","type":""}],"src":"26996:191:6"},{"body":{"nativeSrc":"27319:206:6","nodeType":"YulBlock","src":"27319:206:6","statements":[{"nativeSrc":"27329:26:6","nodeType":"YulAssignment","src":"27329:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"27341:9:6","nodeType":"YulIdentifier","src":"27341:9:6"},{"kind":"number","nativeSrc":"27352:2:6","nodeType":"YulLiteral","src":"27352:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27337:3:6","nodeType":"YulIdentifier","src":"27337:3:6"},"nativeSrc":"27337:18:6","nodeType":"YulFunctionCall","src":"27337:18:6"},"variableNames":[{"name":"tail","nativeSrc":"27329:4:6","nodeType":"YulIdentifier","src":"27329:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"27409:6:6","nodeType":"YulIdentifier","src":"27409:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"27422:9:6","nodeType":"YulIdentifier","src":"27422:9:6"},{"kind":"number","nativeSrc":"27433:1:6","nodeType":"YulLiteral","src":"27433:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27418:3:6","nodeType":"YulIdentifier","src":"27418:3:6"},"nativeSrc":"27418:17:6","nodeType":"YulFunctionCall","src":"27418:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"27365:43:6","nodeType":"YulIdentifier","src":"27365:43:6"},"nativeSrc":"27365:71:6","nodeType":"YulFunctionCall","src":"27365:71:6"},"nativeSrc":"27365:71:6","nodeType":"YulExpressionStatement","src":"27365:71:6"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"27490:6:6","nodeType":"YulIdentifier","src":"27490:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"27503:9:6","nodeType":"YulIdentifier","src":"27503:9:6"},{"kind":"number","nativeSrc":"27514:2:6","nodeType":"YulLiteral","src":"27514:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27499:3:6","nodeType":"YulIdentifier","src":"27499:3:6"},"nativeSrc":"27499:18:6","nodeType":"YulFunctionCall","src":"27499:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"27446:43:6","nodeType":"YulIdentifier","src":"27446:43:6"},"nativeSrc":"27446:72:6","nodeType":"YulFunctionCall","src":"27446:72:6"},"nativeSrc":"27446:72:6","nodeType":"YulExpressionStatement","src":"27446:72:6"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"27193:332:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27283:9:6","nodeType":"YulTypedName","src":"27283:9:6","type":""},{"name":"value1","nativeSrc":"27295:6:6","nodeType":"YulTypedName","src":"27295:6:6","type":""},{"name":"value0","nativeSrc":"27303:6:6","nodeType":"YulTypedName","src":"27303:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27314:4:6","nodeType":"YulTypedName","src":"27314:4:6","type":""}],"src":"27193:332:6"},{"body":{"nativeSrc":"27571:76:6","nodeType":"YulBlock","src":"27571:76:6","statements":[{"body":{"nativeSrc":"27625:16:6","nodeType":"YulBlock","src":"27625:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"27634:1:6","nodeType":"YulLiteral","src":"27634:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"27637:1:6","nodeType":"YulLiteral","src":"27637:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"27627:6:6","nodeType":"YulIdentifier","src":"27627:6:6"},"nativeSrc":"27627:12:6","nodeType":"YulFunctionCall","src":"27627:12:6"},"nativeSrc":"27627:12:6","nodeType":"YulExpressionStatement","src":"27627:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27594:5:6","nodeType":"YulIdentifier","src":"27594:5:6"},{"arguments":[{"name":"value","nativeSrc":"27616:5:6","nodeType":"YulIdentifier","src":"27616:5:6"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"27601:14:6","nodeType":"YulIdentifier","src":"27601:14:6"},"nativeSrc":"27601:21:6","nodeType":"YulFunctionCall","src":"27601:21:6"}],"functionName":{"name":"eq","nativeSrc":"27591:2:6","nodeType":"YulIdentifier","src":"27591:2:6"},"nativeSrc":"27591:32:6","nodeType":"YulFunctionCall","src":"27591:32:6"}],"functionName":{"name":"iszero","nativeSrc":"27584:6:6","nodeType":"YulIdentifier","src":"27584:6:6"},"nativeSrc":"27584:40:6","nodeType":"YulFunctionCall","src":"27584:40:6"},"nativeSrc":"27581:60:6","nodeType":"YulIf","src":"27581:60:6"}]},"name":"validator_revert_t_bool","nativeSrc":"27531:116:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"27564:5:6","nodeType":"YulTypedName","src":"27564:5:6","type":""}],"src":"27531:116:6"},{"body":{"nativeSrc":"27713:77:6","nodeType":"YulBlock","src":"27713:77:6","statements":[{"nativeSrc":"27723:22:6","nodeType":"YulAssignment","src":"27723:22:6","value":{"arguments":[{"name":"offset","nativeSrc":"27738:6:6","nodeType":"YulIdentifier","src":"27738:6:6"}],"functionName":{"name":"mload","nativeSrc":"27732:5:6","nodeType":"YulIdentifier","src":"27732:5:6"},"nativeSrc":"27732:13:6","nodeType":"YulFunctionCall","src":"27732:13:6"},"variableNames":[{"name":"value","nativeSrc":"27723:5:6","nodeType":"YulIdentifier","src":"27723:5:6"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"27778:5:6","nodeType":"YulIdentifier","src":"27778:5:6"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"27754:23:6","nodeType":"YulIdentifier","src":"27754:23:6"},"nativeSrc":"27754:30:6","nodeType":"YulFunctionCall","src":"27754:30:6"},"nativeSrc":"27754:30:6","nodeType":"YulExpressionStatement","src":"27754:30:6"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"27653:137:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"27691:6:6","nodeType":"YulTypedName","src":"27691:6:6","type":""},{"name":"end","nativeSrc":"27699:3:6","nodeType":"YulTypedName","src":"27699:3:6","type":""}],"returnVariables":[{"name":"value","nativeSrc":"27707:5:6","nodeType":"YulTypedName","src":"27707:5:6","type":""}],"src":"27653:137:6"},{"body":{"nativeSrc":"27870:271:6","nodeType":"YulBlock","src":"27870:271:6","statements":[{"body":{"nativeSrc":"27916:83:6","nodeType":"YulBlock","src":"27916:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"27918:77:6","nodeType":"YulIdentifier","src":"27918:77:6"},"nativeSrc":"27918:79:6","nodeType":"YulFunctionCall","src":"27918:79:6"},"nativeSrc":"27918:79:6","nodeType":"YulExpressionStatement","src":"27918:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"27891:7:6","nodeType":"YulIdentifier","src":"27891:7:6"},{"name":"headStart","nativeSrc":"27900:9:6","nodeType":"YulIdentifier","src":"27900:9:6"}],"functionName":{"name":"sub","nativeSrc":"27887:3:6","nodeType":"YulIdentifier","src":"27887:3:6"},"nativeSrc":"27887:23:6","nodeType":"YulFunctionCall","src":"27887:23:6"},{"kind":"number","nativeSrc":"27912:2:6","nodeType":"YulLiteral","src":"27912:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"27883:3:6","nodeType":"YulIdentifier","src":"27883:3:6"},"nativeSrc":"27883:32:6","nodeType":"YulFunctionCall","src":"27883:32:6"},"nativeSrc":"27880:119:6","nodeType":"YulIf","src":"27880:119:6"},{"nativeSrc":"28009:125:6","nodeType":"YulBlock","src":"28009:125:6","statements":[{"nativeSrc":"28024:15:6","nodeType":"YulVariableDeclaration","src":"28024:15:6","value":{"kind":"number","nativeSrc":"28038:1:6","nodeType":"YulLiteral","src":"28038:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"28028:6:6","nodeType":"YulTypedName","src":"28028:6:6","type":""}]},{"nativeSrc":"28053:71:6","nodeType":"YulAssignment","src":"28053:71:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28096:9:6","nodeType":"YulIdentifier","src":"28096:9:6"},{"name":"offset","nativeSrc":"28107:6:6","nodeType":"YulIdentifier","src":"28107:6:6"}],"functionName":{"name":"add","nativeSrc":"28092:3:6","nodeType":"YulIdentifier","src":"28092:3:6"},"nativeSrc":"28092:22:6","nodeType":"YulFunctionCall","src":"28092:22:6"},{"name":"dataEnd","nativeSrc":"28116:7:6","nodeType":"YulIdentifier","src":"28116:7:6"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"28063:28:6","nodeType":"YulIdentifier","src":"28063:28:6"},"nativeSrc":"28063:61:6","nodeType":"YulFunctionCall","src":"28063:61:6"},"variableNames":[{"name":"value0","nativeSrc":"28053:6:6","nodeType":"YulIdentifier","src":"28053:6:6"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"27796:345:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27840:9:6","nodeType":"YulTypedName","src":"27840:9:6","type":""},{"name":"dataEnd","nativeSrc":"27851:7:6","nodeType":"YulTypedName","src":"27851:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"27863:6:6","nodeType":"YulTypedName","src":"27863:6:6","type":""}],"src":"27796:345:6"},{"body":{"nativeSrc":"28253:65:6","nodeType":"YulBlock","src":"28253:65:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"28275:6:6","nodeType":"YulIdentifier","src":"28275:6:6"},{"kind":"number","nativeSrc":"28283:1:6","nodeType":"YulLiteral","src":"28283:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28271:3:6","nodeType":"YulIdentifier","src":"28271:3:6"},"nativeSrc":"28271:14:6","nodeType":"YulFunctionCall","src":"28271:14:6"},{"hexValue":"546f6b656e207472616e73666572206661696c6564","kind":"string","nativeSrc":"28287:23:6","nodeType":"YulLiteral","src":"28287:23:6","type":"","value":"Token transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"28264:6:6","nodeType":"YulIdentifier","src":"28264:6:6"},"nativeSrc":"28264:47:6","nodeType":"YulFunctionCall","src":"28264:47:6"},"nativeSrc":"28264:47:6","nodeType":"YulExpressionStatement","src":"28264:47:6"}]},"name":"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","nativeSrc":"28147:171:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"28245:6:6","nodeType":"YulTypedName","src":"28245:6:6","type":""}],"src":"28147:171:6"},{"body":{"nativeSrc":"28470:220:6","nodeType":"YulBlock","src":"28470:220:6","statements":[{"nativeSrc":"28480:74:6","nodeType":"YulAssignment","src":"28480:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"28546:3:6","nodeType":"YulIdentifier","src":"28546:3:6"},{"kind":"number","nativeSrc":"28551:2:6","nodeType":"YulLiteral","src":"28551:2:6","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"28487:58:6","nodeType":"YulIdentifier","src":"28487:58:6"},"nativeSrc":"28487:67:6","nodeType":"YulFunctionCall","src":"28487:67:6"},"variableNames":[{"name":"pos","nativeSrc":"28480:3:6","nodeType":"YulIdentifier","src":"28480:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"28652:3:6","nodeType":"YulIdentifier","src":"28652:3:6"}],"functionName":{"name":"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","nativeSrc":"28563:88:6","nodeType":"YulIdentifier","src":"28563:88:6"},"nativeSrc":"28563:93:6","nodeType":"YulFunctionCall","src":"28563:93:6"},"nativeSrc":"28563:93:6","nodeType":"YulExpressionStatement","src":"28563:93:6"},{"nativeSrc":"28665:19:6","nodeType":"YulAssignment","src":"28665:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"28676:3:6","nodeType":"YulIdentifier","src":"28676:3:6"},{"kind":"number","nativeSrc":"28681:2:6","nodeType":"YulLiteral","src":"28681:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28672:3:6","nodeType":"YulIdentifier","src":"28672:3:6"},"nativeSrc":"28672:12:6","nodeType":"YulFunctionCall","src":"28672:12:6"},"variableNames":[{"name":"end","nativeSrc":"28665:3:6","nodeType":"YulIdentifier","src":"28665:3:6"}]}]},"name":"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack","nativeSrc":"28324:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"28458:3:6","nodeType":"YulTypedName","src":"28458:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"28466:3:6","nodeType":"YulTypedName","src":"28466:3:6","type":""}],"src":"28324:366:6"},{"body":{"nativeSrc":"28867:248:6","nodeType":"YulBlock","src":"28867:248:6","statements":[{"nativeSrc":"28877:26:6","nodeType":"YulAssignment","src":"28877:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"28889:9:6","nodeType":"YulIdentifier","src":"28889:9:6"},{"kind":"number","nativeSrc":"28900:2:6","nodeType":"YulLiteral","src":"28900:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28885:3:6","nodeType":"YulIdentifier","src":"28885:3:6"},"nativeSrc":"28885:18:6","nodeType":"YulFunctionCall","src":"28885:18:6"},"variableNames":[{"name":"tail","nativeSrc":"28877:4:6","nodeType":"YulIdentifier","src":"28877:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28924:9:6","nodeType":"YulIdentifier","src":"28924:9:6"},{"kind":"number","nativeSrc":"28935:1:6","nodeType":"YulLiteral","src":"28935:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28920:3:6","nodeType":"YulIdentifier","src":"28920:3:6"},"nativeSrc":"28920:17:6","nodeType":"YulFunctionCall","src":"28920:17:6"},{"arguments":[{"name":"tail","nativeSrc":"28943:4:6","nodeType":"YulIdentifier","src":"28943:4:6"},{"name":"headStart","nativeSrc":"28949:9:6","nodeType":"YulIdentifier","src":"28949:9:6"}],"functionName":{"name":"sub","nativeSrc":"28939:3:6","nodeType":"YulIdentifier","src":"28939:3:6"},"nativeSrc":"28939:20:6","nodeType":"YulFunctionCall","src":"28939:20:6"}],"functionName":{"name":"mstore","nativeSrc":"28913:6:6","nodeType":"YulIdentifier","src":"28913:6:6"},"nativeSrc":"28913:47:6","nodeType":"YulFunctionCall","src":"28913:47:6"},"nativeSrc":"28913:47:6","nodeType":"YulExpressionStatement","src":"28913:47:6"},{"nativeSrc":"28969:139:6","nodeType":"YulAssignment","src":"28969:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"29103:4:6","nodeType":"YulIdentifier","src":"29103:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack","nativeSrc":"28977:124:6","nodeType":"YulIdentifier","src":"28977:124:6"},"nativeSrc":"28977:131:6","nodeType":"YulFunctionCall","src":"28977:131:6"},"variableNames":[{"name":"tail","nativeSrc":"28969:4:6","nodeType":"YulIdentifier","src":"28969:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"28696:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28847:9:6","nodeType":"YulTypedName","src":"28847:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28862:4:6","nodeType":"YulTypedName","src":"28862:4:6","type":""}],"src":"28696:419:6"},{"body":{"nativeSrc":"29164:190:6","nodeType":"YulBlock","src":"29164:190:6","statements":[{"nativeSrc":"29174:33:6","nodeType":"YulAssignment","src":"29174:33:6","value":{"arguments":[{"name":"value","nativeSrc":"29201:5:6","nodeType":"YulIdentifier","src":"29201:5:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"29183:17:6","nodeType":"YulIdentifier","src":"29183:17:6"},"nativeSrc":"29183:24:6","nodeType":"YulFunctionCall","src":"29183:24:6"},"variableNames":[{"name":"value","nativeSrc":"29174:5:6","nodeType":"YulIdentifier","src":"29174:5:6"}]},{"body":{"nativeSrc":"29297:22:6","nodeType":"YulBlock","src":"29297:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"29299:16:6","nodeType":"YulIdentifier","src":"29299:16:6"},"nativeSrc":"29299:18:6","nodeType":"YulFunctionCall","src":"29299:18:6"},"nativeSrc":"29299:18:6","nodeType":"YulExpressionStatement","src":"29299:18:6"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"29222:5:6","nodeType":"YulIdentifier","src":"29222:5:6"},{"kind":"number","nativeSrc":"29229:66:6","nodeType":"YulLiteral","src":"29229:66:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"29219:2:6","nodeType":"YulIdentifier","src":"29219:2:6"},"nativeSrc":"29219:77:6","nodeType":"YulFunctionCall","src":"29219:77:6"},"nativeSrc":"29216:103:6","nodeType":"YulIf","src":"29216:103:6"},{"nativeSrc":"29328:20:6","nodeType":"YulAssignment","src":"29328:20:6","value":{"arguments":[{"name":"value","nativeSrc":"29339:5:6","nodeType":"YulIdentifier","src":"29339:5:6"},{"kind":"number","nativeSrc":"29346:1:6","nodeType":"YulLiteral","src":"29346:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"29335:3:6","nodeType":"YulIdentifier","src":"29335:3:6"},"nativeSrc":"29335:13:6","nodeType":"YulFunctionCall","src":"29335:13:6"},"variableNames":[{"name":"ret","nativeSrc":"29328:3:6","nodeType":"YulIdentifier","src":"29328:3:6"}]}]},"name":"increment_t_uint256","nativeSrc":"29121:233:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29150:5:6","nodeType":"YulTypedName","src":"29150:5:6","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"29160:3:6","nodeType":"YulTypedName","src":"29160:3:6","type":""}],"src":"29121:233:6"},{"body":{"nativeSrc":"29414:87:6","nodeType":"YulBlock","src":"29414:87:6","statements":[{"nativeSrc":"29424:11:6","nodeType":"YulAssignment","src":"29424:11:6","value":{"name":"ptr","nativeSrc":"29432:3:6","nodeType":"YulIdentifier","src":"29432:3:6"},"variableNames":[{"name":"data","nativeSrc":"29424:4:6","nodeType":"YulIdentifier","src":"29424:4:6"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"29452:1:6","nodeType":"YulLiteral","src":"29452:1:6","type":"","value":"0"},{"name":"ptr","nativeSrc":"29455:3:6","nodeType":"YulIdentifier","src":"29455:3:6"}],"functionName":{"name":"mstore","nativeSrc":"29445:6:6","nodeType":"YulIdentifier","src":"29445:6:6"},"nativeSrc":"29445:14:6","nodeType":"YulFunctionCall","src":"29445:14:6"},"nativeSrc":"29445:14:6","nodeType":"YulExpressionStatement","src":"29445:14:6"},{"nativeSrc":"29468:26:6","nodeType":"YulAssignment","src":"29468:26:6","value":{"arguments":[{"kind":"number","nativeSrc":"29486:1:6","nodeType":"YulLiteral","src":"29486:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"29489:4:6","nodeType":"YulLiteral","src":"29489:4:6","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"29476:9:6","nodeType":"YulIdentifier","src":"29476:9:6"},"nativeSrc":"29476:18:6","nodeType":"YulFunctionCall","src":"29476:18:6"},"variableNames":[{"name":"data","nativeSrc":"29468:4:6","nodeType":"YulIdentifier","src":"29468:4:6"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"29360:141:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"29401:3:6","nodeType":"YulTypedName","src":"29401:3:6","type":""}],"returnVariables":[{"name":"data","nativeSrc":"29409:4:6","nodeType":"YulTypedName","src":"29409:4:6","type":""}],"src":"29360:141:6"},{"body":{"nativeSrc":"29551:49:6","nodeType":"YulBlock","src":"29551:49:6","statements":[{"nativeSrc":"29561:33:6","nodeType":"YulAssignment","src":"29561:33:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"29579:5:6","nodeType":"YulIdentifier","src":"29579:5:6"},{"kind":"number","nativeSrc":"29586:2:6","nodeType":"YulLiteral","src":"29586:2:6","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"29575:3:6","nodeType":"YulIdentifier","src":"29575:3:6"},"nativeSrc":"29575:14:6","nodeType":"YulFunctionCall","src":"29575:14:6"},{"kind":"number","nativeSrc":"29591:2:6","nodeType":"YulLiteral","src":"29591:2:6","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"29571:3:6","nodeType":"YulIdentifier","src":"29571:3:6"},"nativeSrc":"29571:23:6","nodeType":"YulFunctionCall","src":"29571:23:6"},"variableNames":[{"name":"result","nativeSrc":"29561:6:6","nodeType":"YulIdentifier","src":"29561:6:6"}]}]},"name":"divide_by_32_ceil","nativeSrc":"29507:93:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29534:5:6","nodeType":"YulTypedName","src":"29534:5:6","type":""}],"returnVariables":[{"name":"result","nativeSrc":"29544:6:6","nodeType":"YulTypedName","src":"29544:6:6","type":""}],"src":"29507:93:6"},{"body":{"nativeSrc":"29659:54:6","nodeType":"YulBlock","src":"29659:54:6","statements":[{"nativeSrc":"29669:37:6","nodeType":"YulAssignment","src":"29669:37:6","value":{"arguments":[{"name":"bits","nativeSrc":"29694:4:6","nodeType":"YulIdentifier","src":"29694:4:6"},{"name":"value","nativeSrc":"29700:5:6","nodeType":"YulIdentifier","src":"29700:5:6"}],"functionName":{"name":"shl","nativeSrc":"29690:3:6","nodeType":"YulIdentifier","src":"29690:3:6"},"nativeSrc":"29690:16:6","nodeType":"YulFunctionCall","src":"29690:16:6"},"variableNames":[{"name":"newValue","nativeSrc":"29669:8:6","nodeType":"YulIdentifier","src":"29669:8:6"}]}]},"name":"shift_left_dynamic","nativeSrc":"29606:107:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"29634:4:6","nodeType":"YulTypedName","src":"29634:4:6","type":""},{"name":"value","nativeSrc":"29640:5:6","nodeType":"YulTypedName","src":"29640:5:6","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"29650:8:6","nodeType":"YulTypedName","src":"29650:8:6","type":""}],"src":"29606:107:6"},{"body":{"nativeSrc":"29795:317:6","nodeType":"YulBlock","src":"29795:317:6","statements":[{"nativeSrc":"29805:35:6","nodeType":"YulVariableDeclaration","src":"29805:35:6","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"29826:10:6","nodeType":"YulIdentifier","src":"29826:10:6"},{"kind":"number","nativeSrc":"29838:1:6","nodeType":"YulLiteral","src":"29838:1:6","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"29822:3:6","nodeType":"YulIdentifier","src":"29822:3:6"},"nativeSrc":"29822:18:6","nodeType":"YulFunctionCall","src":"29822:18:6"},"variables":[{"name":"shiftBits","nativeSrc":"29809:9:6","nodeType":"YulTypedName","src":"29809:9:6","type":""}]},{"nativeSrc":"29849:109:6","nodeType":"YulVariableDeclaration","src":"29849:109:6","value":{"arguments":[{"name":"shiftBits","nativeSrc":"29880:9:6","nodeType":"YulIdentifier","src":"29880:9:6"},{"kind":"number","nativeSrc":"29891:66:6","nodeType":"YulLiteral","src":"29891:66:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"29861:18:6","nodeType":"YulIdentifier","src":"29861:18:6"},"nativeSrc":"29861:97:6","nodeType":"YulFunctionCall","src":"29861:97:6"},"variables":[{"name":"mask","nativeSrc":"29853:4:6","nodeType":"YulTypedName","src":"29853:4:6","type":""}]},{"nativeSrc":"29967:51:6","nodeType":"YulAssignment","src":"29967:51:6","value":{"arguments":[{"name":"shiftBits","nativeSrc":"29998:9:6","nodeType":"YulIdentifier","src":"29998:9:6"},{"name":"toInsert","nativeSrc":"30009:8:6","nodeType":"YulIdentifier","src":"30009:8:6"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"29979:18:6","nodeType":"YulIdentifier","src":"29979:18:6"},"nativeSrc":"29979:39:6","nodeType":"YulFunctionCall","src":"29979:39:6"},"variableNames":[{"name":"toInsert","nativeSrc":"29967:8:6","nodeType":"YulIdentifier","src":"29967:8:6"}]},{"nativeSrc":"30027:30:6","nodeType":"YulAssignment","src":"30027:30:6","value":{"arguments":[{"name":"value","nativeSrc":"30040:5:6","nodeType":"YulIdentifier","src":"30040:5:6"},{"arguments":[{"name":"mask","nativeSrc":"30051:4:6","nodeType":"YulIdentifier","src":"30051:4:6"}],"functionName":{"name":"not","nativeSrc":"30047:3:6","nodeType":"YulIdentifier","src":"30047:3:6"},"nativeSrc":"30047:9:6","nodeType":"YulFunctionCall","src":"30047:9:6"}],"functionName":{"name":"and","nativeSrc":"30036:3:6","nodeType":"YulIdentifier","src":"30036:3:6"},"nativeSrc":"30036:21:6","nodeType":"YulFunctionCall","src":"30036:21:6"},"variableNames":[{"name":"value","nativeSrc":"30027:5:6","nodeType":"YulIdentifier","src":"30027:5:6"}]},{"nativeSrc":"30066:40:6","nodeType":"YulAssignment","src":"30066:40:6","value":{"arguments":[{"name":"value","nativeSrc":"30079:5:6","nodeType":"YulIdentifier","src":"30079:5:6"},{"arguments":[{"name":"toInsert","nativeSrc":"30090:8:6","nodeType":"YulIdentifier","src":"30090:8:6"},{"name":"mask","nativeSrc":"30100:4:6","nodeType":"YulIdentifier","src":"30100:4:6"}],"functionName":{"name":"and","nativeSrc":"30086:3:6","nodeType":"YulIdentifier","src":"30086:3:6"},"nativeSrc":"30086:19:6","nodeType":"YulFunctionCall","src":"30086:19:6"}],"functionName":{"name":"or","nativeSrc":"30076:2:6","nodeType":"YulIdentifier","src":"30076:2:6"},"nativeSrc":"30076:30:6","nodeType":"YulFunctionCall","src":"30076:30:6"},"variableNames":[{"name":"result","nativeSrc":"30066:6:6","nodeType":"YulIdentifier","src":"30066:6:6"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"29719:393:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29756:5:6","nodeType":"YulTypedName","src":"29756:5:6","type":""},{"name":"shiftBytes","nativeSrc":"29763:10:6","nodeType":"YulTypedName","src":"29763:10:6","type":""},{"name":"toInsert","nativeSrc":"29775:8:6","nodeType":"YulTypedName","src":"29775:8:6","type":""}],"returnVariables":[{"name":"result","nativeSrc":"29788:6:6","nodeType":"YulTypedName","src":"29788:6:6","type":""}],"src":"29719:393:6"},{"body":{"nativeSrc":"30178:82:6","nodeType":"YulBlock","src":"30178:82:6","statements":[{"nativeSrc":"30188:66:6","nodeType":"YulAssignment","src":"30188:66:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"30246:5:6","nodeType":"YulIdentifier","src":"30246:5:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"30228:17:6","nodeType":"YulIdentifier","src":"30228:17:6"},"nativeSrc":"30228:24:6","nodeType":"YulFunctionCall","src":"30228:24:6"}],"functionName":{"name":"identity","nativeSrc":"30219:8:6","nodeType":"YulIdentifier","src":"30219:8:6"},"nativeSrc":"30219:34:6","nodeType":"YulFunctionCall","src":"30219:34:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"30201:17:6","nodeType":"YulIdentifier","src":"30201:17:6"},"nativeSrc":"30201:53:6","nodeType":"YulFunctionCall","src":"30201:53:6"},"variableNames":[{"name":"converted","nativeSrc":"30188:9:6","nodeType":"YulIdentifier","src":"30188:9:6"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"30118:142:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"30158:5:6","nodeType":"YulTypedName","src":"30158:5:6","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"30168:9:6","nodeType":"YulTypedName","src":"30168:9:6","type":""}],"src":"30118:142:6"},{"body":{"nativeSrc":"30313:28:6","nodeType":"YulBlock","src":"30313:28:6","statements":[{"nativeSrc":"30323:12:6","nodeType":"YulAssignment","src":"30323:12:6","value":{"name":"value","nativeSrc":"30330:5:6","nodeType":"YulIdentifier","src":"30330:5:6"},"variableNames":[{"name":"ret","nativeSrc":"30323:3:6","nodeType":"YulIdentifier","src":"30323:3:6"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"30266:75:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"30299:5:6","nodeType":"YulTypedName","src":"30299:5:6","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"30309:3:6","nodeType":"YulTypedName","src":"30309:3:6","type":""}],"src":"30266:75:6"},{"body":{"nativeSrc":"30423:193:6","nodeType":"YulBlock","src":"30423:193:6","statements":[{"nativeSrc":"30433:63:6","nodeType":"YulVariableDeclaration","src":"30433:63:6","value":{"arguments":[{"name":"value_0","nativeSrc":"30488:7:6","nodeType":"YulIdentifier","src":"30488:7:6"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"30457:30:6","nodeType":"YulIdentifier","src":"30457:30:6"},"nativeSrc":"30457:39:6","nodeType":"YulFunctionCall","src":"30457:39:6"},"variables":[{"name":"convertedValue_0","nativeSrc":"30437:16:6","nodeType":"YulTypedName","src":"30437:16:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"30512:4:6","nodeType":"YulIdentifier","src":"30512:4:6"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"30552:4:6","nodeType":"YulIdentifier","src":"30552:4:6"}],"functionName":{"name":"sload","nativeSrc":"30546:5:6","nodeType":"YulIdentifier","src":"30546:5:6"},"nativeSrc":"30546:11:6","nodeType":"YulFunctionCall","src":"30546:11:6"},{"name":"offset","nativeSrc":"30559:6:6","nodeType":"YulIdentifier","src":"30559:6:6"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"30591:16:6","nodeType":"YulIdentifier","src":"30591:16:6"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"30567:23:6","nodeType":"YulIdentifier","src":"30567:23:6"},"nativeSrc":"30567:41:6","nodeType":"YulFunctionCall","src":"30567:41:6"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"30518:27:6","nodeType":"YulIdentifier","src":"30518:27:6"},"nativeSrc":"30518:91:6","nodeType":"YulFunctionCall","src":"30518:91:6"}],"functionName":{"name":"sstore","nativeSrc":"30505:6:6","nodeType":"YulIdentifier","src":"30505:6:6"},"nativeSrc":"30505:105:6","nodeType":"YulFunctionCall","src":"30505:105:6"},"nativeSrc":"30505:105:6","nodeType":"YulExpressionStatement","src":"30505:105:6"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"30347:269:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"30400:4:6","nodeType":"YulTypedName","src":"30400:4:6","type":""},{"name":"offset","nativeSrc":"30406:6:6","nodeType":"YulTypedName","src":"30406:6:6","type":""},{"name":"value_0","nativeSrc":"30414:7:6","nodeType":"YulTypedName","src":"30414:7:6","type":""}],"src":"30347:269:6"},{"body":{"nativeSrc":"30671:24:6","nodeType":"YulBlock","src":"30671:24:6","statements":[{"nativeSrc":"30681:8:6","nodeType":"YulAssignment","src":"30681:8:6","value":{"kind":"number","nativeSrc":"30688:1:6","nodeType":"YulLiteral","src":"30688:1:6","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"30681:3:6","nodeType":"YulIdentifier","src":"30681:3:6"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"30622:73:6","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"30667:3:6","nodeType":"YulTypedName","src":"30667:3:6","type":""}],"src":"30622:73:6"},{"body":{"nativeSrc":"30754:136:6","nodeType":"YulBlock","src":"30754:136:6","statements":[{"nativeSrc":"30764:46:6","nodeType":"YulVariableDeclaration","src":"30764:46:6","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"30778:30:6","nodeType":"YulIdentifier","src":"30778:30:6"},"nativeSrc":"30778:32:6","nodeType":"YulFunctionCall","src":"30778:32:6"},"variables":[{"name":"zero_0","nativeSrc":"30768:6:6","nodeType":"YulTypedName","src":"30768:6:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"30863:4:6","nodeType":"YulIdentifier","src":"30863:4:6"},{"name":"offset","nativeSrc":"30869:6:6","nodeType":"YulIdentifier","src":"30869:6:6"},{"name":"zero_0","nativeSrc":"30877:6:6","nodeType":"YulIdentifier","src":"30877:6:6"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"30819:43:6","nodeType":"YulIdentifier","src":"30819:43:6"},"nativeSrc":"30819:65:6","nodeType":"YulFunctionCall","src":"30819:65:6"},"nativeSrc":"30819:65:6","nodeType":"YulExpressionStatement","src":"30819:65:6"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"30701:189:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"30740:4:6","nodeType":"YulTypedName","src":"30740:4:6","type":""},{"name":"offset","nativeSrc":"30746:6:6","nodeType":"YulTypedName","src":"30746:6:6","type":""}],"src":"30701:189:6"},{"body":{"nativeSrc":"30946:136:6","nodeType":"YulBlock","src":"30946:136:6","statements":[{"body":{"nativeSrc":"31013:63:6","nodeType":"YulBlock","src":"31013:63:6","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"31057:5:6","nodeType":"YulIdentifier","src":"31057:5:6"},{"kind":"number","nativeSrc":"31064:1:6","nodeType":"YulLiteral","src":"31064:1:6","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"31027:29:6","nodeType":"YulIdentifier","src":"31027:29:6"},"nativeSrc":"31027:39:6","nodeType":"YulFunctionCall","src":"31027:39:6"},"nativeSrc":"31027:39:6","nodeType":"YulExpressionStatement","src":"31027:39:6"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"30966:5:6","nodeType":"YulIdentifier","src":"30966:5:6"},{"name":"end","nativeSrc":"30973:3:6","nodeType":"YulIdentifier","src":"30973:3:6"}],"functionName":{"name":"lt","nativeSrc":"30963:2:6","nodeType":"YulIdentifier","src":"30963:2:6"},"nativeSrc":"30963:14:6","nodeType":"YulFunctionCall","src":"30963:14:6"},"nativeSrc":"30956:120:6","nodeType":"YulForLoop","post":{"nativeSrc":"30978:26:6","nodeType":"YulBlock","src":"30978:26:6","statements":[{"nativeSrc":"30980:22:6","nodeType":"YulAssignment","src":"30980:22:6","value":{"arguments":[{"name":"start","nativeSrc":"30993:5:6","nodeType":"YulIdentifier","src":"30993:5:6"},{"kind":"number","nativeSrc":"31000:1:6","nodeType":"YulLiteral","src":"31000:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"30989:3:6","nodeType":"YulIdentifier","src":"30989:3:6"},"nativeSrc":"30989:13:6","nodeType":"YulFunctionCall","src":"30989:13:6"},"variableNames":[{"name":"start","nativeSrc":"30980:5:6","nodeType":"YulIdentifier","src":"30980:5:6"}]}]},"pre":{"nativeSrc":"30960:2:6","nodeType":"YulBlock","src":"30960:2:6","statements":[]},"src":"30956:120:6"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"30896:186:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"30934:5:6","nodeType":"YulTypedName","src":"30934:5:6","type":""},{"name":"end","nativeSrc":"30941:3:6","nodeType":"YulTypedName","src":"30941:3:6","type":""}],"src":"30896:186:6"},{"body":{"nativeSrc":"31167:464:6","nodeType":"YulBlock","src":"31167:464:6","statements":[{"body":{"nativeSrc":"31193:431:6","nodeType":"YulBlock","src":"31193:431:6","statements":[{"nativeSrc":"31207:54:6","nodeType":"YulVariableDeclaration","src":"31207:54:6","value":{"arguments":[{"name":"array","nativeSrc":"31255:5:6","nodeType":"YulIdentifier","src":"31255:5:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"31223:31:6","nodeType":"YulIdentifier","src":"31223:31:6"},"nativeSrc":"31223:38:6","nodeType":"YulFunctionCall","src":"31223:38:6"},"variables":[{"name":"dataArea","nativeSrc":"31211:8:6","nodeType":"YulTypedName","src":"31211:8:6","type":""}]},{"nativeSrc":"31274:63:6","nodeType":"YulVariableDeclaration","src":"31274:63:6","value":{"arguments":[{"name":"dataArea","nativeSrc":"31297:8:6","nodeType":"YulIdentifier","src":"31297:8:6"},{"arguments":[{"name":"startIndex","nativeSrc":"31325:10:6","nodeType":"YulIdentifier","src":"31325:10:6"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"31307:17:6","nodeType":"YulIdentifier","src":"31307:17:6"},"nativeSrc":"31307:29:6","nodeType":"YulFunctionCall","src":"31307:29:6"}],"functionName":{"name":"add","nativeSrc":"31293:3:6","nodeType":"YulIdentifier","src":"31293:3:6"},"nativeSrc":"31293:44:6","nodeType":"YulFunctionCall","src":"31293:44:6"},"variables":[{"name":"deleteStart","nativeSrc":"31278:11:6","nodeType":"YulTypedName","src":"31278:11:6","type":""}]},{"body":{"nativeSrc":"31494:27:6","nodeType":"YulBlock","src":"31494:27:6","statements":[{"nativeSrc":"31496:23:6","nodeType":"YulAssignment","src":"31496:23:6","value":{"name":"dataArea","nativeSrc":"31511:8:6","nodeType":"YulIdentifier","src":"31511:8:6"},"variableNames":[{"name":"deleteStart","nativeSrc":"31496:11:6","nodeType":"YulIdentifier","src":"31496:11:6"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"31478:10:6","nodeType":"YulIdentifier","src":"31478:10:6"},{"kind":"number","nativeSrc":"31490:2:6","nodeType":"YulLiteral","src":"31490:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"31475:2:6","nodeType":"YulIdentifier","src":"31475:2:6"},"nativeSrc":"31475:18:6","nodeType":"YulFunctionCall","src":"31475:18:6"},"nativeSrc":"31472:49:6","nodeType":"YulIf","src":"31472:49:6"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"31563:11:6","nodeType":"YulIdentifier","src":"31563:11:6"},{"arguments":[{"name":"dataArea","nativeSrc":"31580:8:6","nodeType":"YulIdentifier","src":"31580:8:6"},{"arguments":[{"name":"len","nativeSrc":"31608:3:6","nodeType":"YulIdentifier","src":"31608:3:6"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"31590:17:6","nodeType":"YulIdentifier","src":"31590:17:6"},"nativeSrc":"31590:22:6","nodeType":"YulFunctionCall","src":"31590:22:6"}],"functionName":{"name":"add","nativeSrc":"31576:3:6","nodeType":"YulIdentifier","src":"31576:3:6"},"nativeSrc":"31576:37:6","nodeType":"YulFunctionCall","src":"31576:37:6"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"31534:28:6","nodeType":"YulIdentifier","src":"31534:28:6"},"nativeSrc":"31534:80:6","nodeType":"YulFunctionCall","src":"31534:80:6"},"nativeSrc":"31534:80:6","nodeType":"YulExpressionStatement","src":"31534:80:6"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"31184:3:6","nodeType":"YulIdentifier","src":"31184:3:6"},{"kind":"number","nativeSrc":"31189:2:6","nodeType":"YulLiteral","src":"31189:2:6","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"31181:2:6","nodeType":"YulIdentifier","src":"31181:2:6"},"nativeSrc":"31181:11:6","nodeType":"YulFunctionCall","src":"31181:11:6"},"nativeSrc":"31178:446:6","nodeType":"YulIf","src":"31178:446:6"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"31088:543:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"31143:5:6","nodeType":"YulTypedName","src":"31143:5:6","type":""},{"name":"len","nativeSrc":"31150:3:6","nodeType":"YulTypedName","src":"31150:3:6","type":""},{"name":"startIndex","nativeSrc":"31155:10:6","nodeType":"YulTypedName","src":"31155:10:6","type":""}],"src":"31088:543:6"},{"body":{"nativeSrc":"31700:54:6","nodeType":"YulBlock","src":"31700:54:6","statements":[{"nativeSrc":"31710:37:6","nodeType":"YulAssignment","src":"31710:37:6","value":{"arguments":[{"name":"bits","nativeSrc":"31735:4:6","nodeType":"YulIdentifier","src":"31735:4:6"},{"name":"value","nativeSrc":"31741:5:6","nodeType":"YulIdentifier","src":"31741:5:6"}],"functionName":{"name":"shr","nativeSrc":"31731:3:6","nodeType":"YulIdentifier","src":"31731:3:6"},"nativeSrc":"31731:16:6","nodeType":"YulFunctionCall","src":"31731:16:6"},"variableNames":[{"name":"newValue","nativeSrc":"31710:8:6","nodeType":"YulIdentifier","src":"31710:8:6"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"31637:117:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"31675:4:6","nodeType":"YulTypedName","src":"31675:4:6","type":""},{"name":"value","nativeSrc":"31681:5:6","nodeType":"YulTypedName","src":"31681:5:6","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"31691:8:6","nodeType":"YulTypedName","src":"31691:8:6","type":""}],"src":"31637:117:6"},{"body":{"nativeSrc":"31811:118:6","nodeType":"YulBlock","src":"31811:118:6","statements":[{"nativeSrc":"31821:68:6","nodeType":"YulVariableDeclaration","src":"31821:68:6","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"31870:1:6","nodeType":"YulLiteral","src":"31870:1:6","type":"","value":"8"},{"name":"bytes","nativeSrc":"31873:5:6","nodeType":"YulIdentifier","src":"31873:5:6"}],"functionName":{"name":"mul","nativeSrc":"31866:3:6","nodeType":"YulIdentifier","src":"31866:3:6"},"nativeSrc":"31866:13:6","nodeType":"YulFunctionCall","src":"31866:13:6"},{"arguments":[{"kind":"number","nativeSrc":"31885:1:6","nodeType":"YulLiteral","src":"31885:1:6","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"31881:3:6","nodeType":"YulIdentifier","src":"31881:3:6"},"nativeSrc":"31881:6:6","nodeType":"YulFunctionCall","src":"31881:6:6"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"31837:28:6","nodeType":"YulIdentifier","src":"31837:28:6"},"nativeSrc":"31837:51:6","nodeType":"YulFunctionCall","src":"31837:51:6"}],"functionName":{"name":"not","nativeSrc":"31833:3:6","nodeType":"YulIdentifier","src":"31833:3:6"},"nativeSrc":"31833:56:6","nodeType":"YulFunctionCall","src":"31833:56:6"},"variables":[{"name":"mask","nativeSrc":"31825:4:6","nodeType":"YulTypedName","src":"31825:4:6","type":""}]},{"nativeSrc":"31898:25:6","nodeType":"YulAssignment","src":"31898:25:6","value":{"arguments":[{"name":"data","nativeSrc":"31912:4:6","nodeType":"YulIdentifier","src":"31912:4:6"},{"name":"mask","nativeSrc":"31918:4:6","nodeType":"YulIdentifier","src":"31918:4:6"}],"functionName":{"name":"and","nativeSrc":"31908:3:6","nodeType":"YulIdentifier","src":"31908:3:6"},"nativeSrc":"31908:15:6","nodeType":"YulFunctionCall","src":"31908:15:6"},"variableNames":[{"name":"result","nativeSrc":"31898:6:6","nodeType":"YulIdentifier","src":"31898:6:6"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"31760:169:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"31788:4:6","nodeType":"YulTypedName","src":"31788:4:6","type":""},{"name":"bytes","nativeSrc":"31794:5:6","nodeType":"YulTypedName","src":"31794:5:6","type":""}],"returnVariables":[{"name":"result","nativeSrc":"31804:6:6","nodeType":"YulTypedName","src":"31804:6:6","type":""}],"src":"31760:169:6"},{"body":{"nativeSrc":"32015:214:6","nodeType":"YulBlock","src":"32015:214:6","statements":[{"nativeSrc":"32148:37:6","nodeType":"YulAssignment","src":"32148:37:6","value":{"arguments":[{"name":"data","nativeSrc":"32175:4:6","nodeType":"YulIdentifier","src":"32175:4:6"},{"name":"len","nativeSrc":"32181:3:6","nodeType":"YulIdentifier","src":"32181:3:6"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"32156:18:6","nodeType":"YulIdentifier","src":"32156:18:6"},"nativeSrc":"32156:29:6","nodeType":"YulFunctionCall","src":"32156:29:6"},"variableNames":[{"name":"data","nativeSrc":"32148:4:6","nodeType":"YulIdentifier","src":"32148:4:6"}]},{"nativeSrc":"32194:29:6","nodeType":"YulAssignment","src":"32194:29:6","value":{"arguments":[{"name":"data","nativeSrc":"32205:4:6","nodeType":"YulIdentifier","src":"32205:4:6"},{"arguments":[{"kind":"number","nativeSrc":"32215:1:6","nodeType":"YulLiteral","src":"32215:1:6","type":"","value":"2"},{"name":"len","nativeSrc":"32218:3:6","nodeType":"YulIdentifier","src":"32218:3:6"}],"functionName":{"name":"mul","nativeSrc":"32211:3:6","nodeType":"YulIdentifier","src":"32211:3:6"},"nativeSrc":"32211:11:6","nodeType":"YulFunctionCall","src":"32211:11:6"}],"functionName":{"name":"or","nativeSrc":"32202:2:6","nodeType":"YulIdentifier","src":"32202:2:6"},"nativeSrc":"32202:21:6","nodeType":"YulFunctionCall","src":"32202:21:6"},"variableNames":[{"name":"used","nativeSrc":"32194:4:6","nodeType":"YulIdentifier","src":"32194:4:6"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"31934:295:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"31996:4:6","nodeType":"YulTypedName","src":"31996:4:6","type":""},{"name":"len","nativeSrc":"32002:3:6","nodeType":"YulTypedName","src":"32002:3:6","type":""}],"returnVariables":[{"name":"used","nativeSrc":"32010:4:6","nodeType":"YulTypedName","src":"32010:4:6","type":""}],"src":"31934:295:6"},{"body":{"nativeSrc":"32326:1303:6","nodeType":"YulBlock","src":"32326:1303:6","statements":[{"nativeSrc":"32337:51:6","nodeType":"YulVariableDeclaration","src":"32337:51:6","value":{"arguments":[{"name":"src","nativeSrc":"32384:3:6","nodeType":"YulIdentifier","src":"32384:3:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"32351:32:6","nodeType":"YulIdentifier","src":"32351:32:6"},"nativeSrc":"32351:37:6","nodeType":"YulFunctionCall","src":"32351:37:6"},"variables":[{"name":"newLen","nativeSrc":"32341:6:6","nodeType":"YulTypedName","src":"32341:6:6","type":""}]},{"body":{"nativeSrc":"32473:22:6","nodeType":"YulBlock","src":"32473:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"32475:16:6","nodeType":"YulIdentifier","src":"32475:16:6"},"nativeSrc":"32475:18:6","nodeType":"YulFunctionCall","src":"32475:18:6"},"nativeSrc":"32475:18:6","nodeType":"YulExpressionStatement","src":"32475:18:6"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"32445:6:6","nodeType":"YulIdentifier","src":"32445:6:6"},{"kind":"number","nativeSrc":"32453:18:6","nodeType":"YulLiteral","src":"32453:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"32442:2:6","nodeType":"YulIdentifier","src":"32442:2:6"},"nativeSrc":"32442:30:6","nodeType":"YulFunctionCall","src":"32442:30:6"},"nativeSrc":"32439:56:6","nodeType":"YulIf","src":"32439:56:6"},{"nativeSrc":"32505:52:6","nodeType":"YulVariableDeclaration","src":"32505:52:6","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"32551:4:6","nodeType":"YulIdentifier","src":"32551:4:6"}],"functionName":{"name":"sload","nativeSrc":"32545:5:6","nodeType":"YulIdentifier","src":"32545:5:6"},"nativeSrc":"32545:11:6","nodeType":"YulFunctionCall","src":"32545:11:6"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"32519:25:6","nodeType":"YulIdentifier","src":"32519:25:6"},"nativeSrc":"32519:38:6","nodeType":"YulFunctionCall","src":"32519:38:6"},"variables":[{"name":"oldLen","nativeSrc":"32509:6:6","nodeType":"YulTypedName","src":"32509:6:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"32650:4:6","nodeType":"YulIdentifier","src":"32650:4:6"},{"name":"oldLen","nativeSrc":"32656:6:6","nodeType":"YulIdentifier","src":"32656:6:6"},{"name":"newLen","nativeSrc":"32664:6:6","nodeType":"YulIdentifier","src":"32664:6:6"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"32604:45:6","nodeType":"YulIdentifier","src":"32604:45:6"},"nativeSrc":"32604:67:6","nodeType":"YulFunctionCall","src":"32604:67:6"},"nativeSrc":"32604:67:6","nodeType":"YulExpressionStatement","src":"32604:67:6"},{"nativeSrc":"32681:18:6","nodeType":"YulVariableDeclaration","src":"32681:18:6","value":{"kind":"number","nativeSrc":"32698:1:6","nodeType":"YulLiteral","src":"32698:1:6","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"32685:9:6","nodeType":"YulTypedName","src":"32685:9:6","type":""}]},{"nativeSrc":"32709:17:6","nodeType":"YulAssignment","src":"32709:17:6","value":{"kind":"number","nativeSrc":"32722:4:6","nodeType":"YulLiteral","src":"32722:4:6","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"32709:9:6","nodeType":"YulIdentifier","src":"32709:9:6"}]},{"cases":[{"body":{"nativeSrc":"32773:611:6","nodeType":"YulBlock","src":"32773:611:6","statements":[{"nativeSrc":"32787:37:6","nodeType":"YulVariableDeclaration","src":"32787:37:6","value":{"arguments":[{"name":"newLen","nativeSrc":"32806:6:6","nodeType":"YulIdentifier","src":"32806:6:6"},{"arguments":[{"kind":"number","nativeSrc":"32818:4:6","nodeType":"YulLiteral","src":"32818:4:6","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"32814:3:6","nodeType":"YulIdentifier","src":"32814:3:6"},"nativeSrc":"32814:9:6","nodeType":"YulFunctionCall","src":"32814:9:6"}],"functionName":{"name":"and","nativeSrc":"32802:3:6","nodeType":"YulIdentifier","src":"32802:3:6"},"nativeSrc":"32802:22:6","nodeType":"YulFunctionCall","src":"32802:22:6"},"variables":[{"name":"loopEnd","nativeSrc":"32791:7:6","nodeType":"YulTypedName","src":"32791:7:6","type":""}]},{"nativeSrc":"32838:51:6","nodeType":"YulVariableDeclaration","src":"32838:51:6","value":{"arguments":[{"name":"slot","nativeSrc":"32884:4:6","nodeType":"YulIdentifier","src":"32884:4:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"32852:31:6","nodeType":"YulIdentifier","src":"32852:31:6"},"nativeSrc":"32852:37:6","nodeType":"YulFunctionCall","src":"32852:37:6"},"variables":[{"name":"dstPtr","nativeSrc":"32842:6:6","nodeType":"YulTypedName","src":"32842:6:6","type":""}]},{"nativeSrc":"32902:10:6","nodeType":"YulVariableDeclaration","src":"32902:10:6","value":{"kind":"number","nativeSrc":"32911:1:6","nodeType":"YulLiteral","src":"32911:1:6","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"32906:1:6","nodeType":"YulTypedName","src":"32906:1:6","type":""}]},{"body":{"nativeSrc":"32970:163:6","nodeType":"YulBlock","src":"32970:163:6","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"32995:6:6","nodeType":"YulIdentifier","src":"32995:6:6"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"33013:3:6","nodeType":"YulIdentifier","src":"33013:3:6"},{"name":"srcOffset","nativeSrc":"33018:9:6","nodeType":"YulIdentifier","src":"33018:9:6"}],"functionName":{"name":"add","nativeSrc":"33009:3:6","nodeType":"YulIdentifier","src":"33009:3:6"},"nativeSrc":"33009:19:6","nodeType":"YulFunctionCall","src":"33009:19:6"}],"functionName":{"name":"mload","nativeSrc":"33003:5:6","nodeType":"YulIdentifier","src":"33003:5:6"},"nativeSrc":"33003:26:6","nodeType":"YulFunctionCall","src":"33003:26:6"}],"functionName":{"name":"sstore","nativeSrc":"32988:6:6","nodeType":"YulIdentifier","src":"32988:6:6"},"nativeSrc":"32988:42:6","nodeType":"YulFunctionCall","src":"32988:42:6"},"nativeSrc":"32988:42:6","nodeType":"YulExpressionStatement","src":"32988:42:6"},{"nativeSrc":"33047:24:6","nodeType":"YulAssignment","src":"33047:24:6","value":{"arguments":[{"name":"dstPtr","nativeSrc":"33061:6:6","nodeType":"YulIdentifier","src":"33061:6:6"},{"kind":"number","nativeSrc":"33069:1:6","nodeType":"YulLiteral","src":"33069:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"33057:3:6","nodeType":"YulIdentifier","src":"33057:3:6"},"nativeSrc":"33057:14:6","nodeType":"YulFunctionCall","src":"33057:14:6"},"variableNames":[{"name":"dstPtr","nativeSrc":"33047:6:6","nodeType":"YulIdentifier","src":"33047:6:6"}]},{"nativeSrc":"33088:31:6","nodeType":"YulAssignment","src":"33088:31:6","value":{"arguments":[{"name":"srcOffset","nativeSrc":"33105:9:6","nodeType":"YulIdentifier","src":"33105:9:6"},{"kind":"number","nativeSrc":"33116:2:6","nodeType":"YulLiteral","src":"33116:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33101:3:6","nodeType":"YulIdentifier","src":"33101:3:6"},"nativeSrc":"33101:18:6","nodeType":"YulFunctionCall","src":"33101:18:6"},"variableNames":[{"name":"srcOffset","nativeSrc":"33088:9:6","nodeType":"YulIdentifier","src":"33088:9:6"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"32936:1:6","nodeType":"YulIdentifier","src":"32936:1:6"},{"name":"loopEnd","nativeSrc":"32939:7:6","nodeType":"YulIdentifier","src":"32939:7:6"}],"functionName":{"name":"lt","nativeSrc":"32933:2:6","nodeType":"YulIdentifier","src":"32933:2:6"},"nativeSrc":"32933:14:6","nodeType":"YulFunctionCall","src":"32933:14:6"},"nativeSrc":"32925:208:6","nodeType":"YulForLoop","post":{"nativeSrc":"32948:21:6","nodeType":"YulBlock","src":"32948:21:6","statements":[{"nativeSrc":"32950:17:6","nodeType":"YulAssignment","src":"32950:17:6","value":{"arguments":[{"name":"i","nativeSrc":"32959:1:6","nodeType":"YulIdentifier","src":"32959:1:6"},{"kind":"number","nativeSrc":"32962:4:6","nodeType":"YulLiteral","src":"32962:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"32955:3:6","nodeType":"YulIdentifier","src":"32955:3:6"},"nativeSrc":"32955:12:6","nodeType":"YulFunctionCall","src":"32955:12:6"},"variableNames":[{"name":"i","nativeSrc":"32950:1:6","nodeType":"YulIdentifier","src":"32950:1:6"}]}]},"pre":{"nativeSrc":"32929:3:6","nodeType":"YulBlock","src":"32929:3:6","statements":[]},"src":"32925:208:6"},{"body":{"nativeSrc":"33169:156:6","nodeType":"YulBlock","src":"33169:156:6","statements":[{"nativeSrc":"33187:43:6","nodeType":"YulVariableDeclaration","src":"33187:43:6","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"33214:3:6","nodeType":"YulIdentifier","src":"33214:3:6"},{"name":"srcOffset","nativeSrc":"33219:9:6","nodeType":"YulIdentifier","src":"33219:9:6"}],"functionName":{"name":"add","nativeSrc":"33210:3:6","nodeType":"YulIdentifier","src":"33210:3:6"},"nativeSrc":"33210:19:6","nodeType":"YulFunctionCall","src":"33210:19:6"}],"functionName":{"name":"mload","nativeSrc":"33204:5:6","nodeType":"YulIdentifier","src":"33204:5:6"},"nativeSrc":"33204:26:6","nodeType":"YulFunctionCall","src":"33204:26:6"},"variables":[{"name":"lastValue","nativeSrc":"33191:9:6","nodeType":"YulTypedName","src":"33191:9:6","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"33254:6:6","nodeType":"YulIdentifier","src":"33254:6:6"},{"arguments":[{"name":"lastValue","nativeSrc":"33281:9:6","nodeType":"YulIdentifier","src":"33281:9:6"},{"arguments":[{"name":"newLen","nativeSrc":"33296:6:6","nodeType":"YulIdentifier","src":"33296:6:6"},{"kind":"number","nativeSrc":"33304:4:6","nodeType":"YulLiteral","src":"33304:4:6","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"33292:3:6","nodeType":"YulIdentifier","src":"33292:3:6"},"nativeSrc":"33292:17:6","nodeType":"YulFunctionCall","src":"33292:17:6"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"33262:18:6","nodeType":"YulIdentifier","src":"33262:18:6"},"nativeSrc":"33262:48:6","nodeType":"YulFunctionCall","src":"33262:48:6"}],"functionName":{"name":"sstore","nativeSrc":"33247:6:6","nodeType":"YulIdentifier","src":"33247:6:6"},"nativeSrc":"33247:64:6","nodeType":"YulFunctionCall","src":"33247:64:6"},"nativeSrc":"33247:64:6","nodeType":"YulExpressionStatement","src":"33247:64:6"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"33152:7:6","nodeType":"YulIdentifier","src":"33152:7:6"},{"name":"newLen","nativeSrc":"33161:6:6","nodeType":"YulIdentifier","src":"33161:6:6"}],"functionName":{"name":"lt","nativeSrc":"33149:2:6","nodeType":"YulIdentifier","src":"33149:2:6"},"nativeSrc":"33149:19:6","nodeType":"YulFunctionCall","src":"33149:19:6"},"nativeSrc":"33146:179:6","nodeType":"YulIf","src":"33146:179:6"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"33345:4:6","nodeType":"YulIdentifier","src":"33345:4:6"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"33359:6:6","nodeType":"YulIdentifier","src":"33359:6:6"},{"kind":"number","nativeSrc":"33367:1:6","nodeType":"YulLiteral","src":"33367:1:6","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"33355:3:6","nodeType":"YulIdentifier","src":"33355:3:6"},"nativeSrc":"33355:14:6","nodeType":"YulFunctionCall","src":"33355:14:6"},{"kind":"number","nativeSrc":"33371:1:6","nodeType":"YulLiteral","src":"33371:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"33351:3:6","nodeType":"YulIdentifier","src":"33351:3:6"},"nativeSrc":"33351:22:6","nodeType":"YulFunctionCall","src":"33351:22:6"}],"functionName":{"name":"sstore","nativeSrc":"33338:6:6","nodeType":"YulIdentifier","src":"33338:6:6"},"nativeSrc":"33338:36:6","nodeType":"YulFunctionCall","src":"33338:36:6"},"nativeSrc":"33338:36:6","nodeType":"YulExpressionStatement","src":"33338:36:6"}]},"nativeSrc":"32766:618:6","nodeType":"YulCase","src":"32766:618:6","value":{"kind":"number","nativeSrc":"32771:1:6","nodeType":"YulLiteral","src":"32771:1:6","type":"","value":"1"}},{"body":{"nativeSrc":"33401:222:6","nodeType":"YulBlock","src":"33401:222:6","statements":[{"nativeSrc":"33415:14:6","nodeType":"YulVariableDeclaration","src":"33415:14:6","value":{"kind":"number","nativeSrc":"33428:1:6","nodeType":"YulLiteral","src":"33428:1:6","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"33419:5:6","nodeType":"YulTypedName","src":"33419:5:6","type":""}]},{"body":{"nativeSrc":"33452:67:6","nodeType":"YulBlock","src":"33452:67:6","statements":[{"nativeSrc":"33470:35:6","nodeType":"YulAssignment","src":"33470:35:6","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"33489:3:6","nodeType":"YulIdentifier","src":"33489:3:6"},{"name":"srcOffset","nativeSrc":"33494:9:6","nodeType":"YulIdentifier","src":"33494:9:6"}],"functionName":{"name":"add","nativeSrc":"33485:3:6","nodeType":"YulIdentifier","src":"33485:3:6"},"nativeSrc":"33485:19:6","nodeType":"YulFunctionCall","src":"33485:19:6"}],"functionName":{"name":"mload","nativeSrc":"33479:5:6","nodeType":"YulIdentifier","src":"33479:5:6"},"nativeSrc":"33479:26:6","nodeType":"YulFunctionCall","src":"33479:26:6"},"variableNames":[{"name":"value","nativeSrc":"33470:5:6","nodeType":"YulIdentifier","src":"33470:5:6"}]}]},"condition":{"name":"newLen","nativeSrc":"33445:6:6","nodeType":"YulIdentifier","src":"33445:6:6"},"nativeSrc":"33442:77:6","nodeType":"YulIf","src":"33442:77:6"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"33539:4:6","nodeType":"YulIdentifier","src":"33539:4:6"},{"arguments":[{"name":"value","nativeSrc":"33598:5:6","nodeType":"YulIdentifier","src":"33598:5:6"},{"name":"newLen","nativeSrc":"33605:6:6","nodeType":"YulIdentifier","src":"33605:6:6"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"33545:52:6","nodeType":"YulIdentifier","src":"33545:52:6"},"nativeSrc":"33545:67:6","nodeType":"YulFunctionCall","src":"33545:67:6"}],"functionName":{"name":"sstore","nativeSrc":"33532:6:6","nodeType":"YulIdentifier","src":"33532:6:6"},"nativeSrc":"33532:81:6","nodeType":"YulFunctionCall","src":"33532:81:6"},"nativeSrc":"33532:81:6","nodeType":"YulExpressionStatement","src":"33532:81:6"}]},"nativeSrc":"33393:230:6","nodeType":"YulCase","src":"33393:230:6","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"32746:6:6","nodeType":"YulIdentifier","src":"32746:6:6"},{"kind":"number","nativeSrc":"32754:2:6","nodeType":"YulLiteral","src":"32754:2:6","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"32743:2:6","nodeType":"YulIdentifier","src":"32743:2:6"},"nativeSrc":"32743:14:6","nodeType":"YulFunctionCall","src":"32743:14:6"},"nativeSrc":"32736:887:6","nodeType":"YulSwitch","src":"32736:887:6"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"32234:1395:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"32315:4:6","nodeType":"YulTypedName","src":"32315:4:6","type":""},{"name":"src","nativeSrc":"32321:3:6","nodeType":"YulTypedName","src":"32321:3:6","type":""}],"src":"32234:1395:6"},{"body":{"nativeSrc":"33817:371:6","nodeType":"YulBlock","src":"33817:371:6","statements":[{"nativeSrc":"33827:27:6","nodeType":"YulAssignment","src":"33827:27:6","value":{"arguments":[{"name":"headStart","nativeSrc":"33839:9:6","nodeType":"YulIdentifier","src":"33839:9:6"},{"kind":"number","nativeSrc":"33850:3:6","nodeType":"YulLiteral","src":"33850:3:6","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"33835:3:6","nodeType":"YulIdentifier","src":"33835:3:6"},"nativeSrc":"33835:19:6","nodeType":"YulFunctionCall","src":"33835:19:6"},"variableNames":[{"name":"tail","nativeSrc":"33827:4:6","nodeType":"YulIdentifier","src":"33827:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"33908:6:6","nodeType":"YulIdentifier","src":"33908:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"33921:9:6","nodeType":"YulIdentifier","src":"33921:9:6"},{"kind":"number","nativeSrc":"33932:1:6","nodeType":"YulLiteral","src":"33932:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33917:3:6","nodeType":"YulIdentifier","src":"33917:3:6"},"nativeSrc":"33917:17:6","nodeType":"YulFunctionCall","src":"33917:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"33864:43:6","nodeType":"YulIdentifier","src":"33864:43:6"},"nativeSrc":"33864:71:6","nodeType":"YulFunctionCall","src":"33864:71:6"},"nativeSrc":"33864:71:6","nodeType":"YulExpressionStatement","src":"33864:71:6"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"33989:6:6","nodeType":"YulIdentifier","src":"33989:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"34002:9:6","nodeType":"YulIdentifier","src":"34002:9:6"},{"kind":"number","nativeSrc":"34013:2:6","nodeType":"YulLiteral","src":"34013:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33998:3:6","nodeType":"YulIdentifier","src":"33998:3:6"},"nativeSrc":"33998:18:6","nodeType":"YulFunctionCall","src":"33998:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"33945:43:6","nodeType":"YulIdentifier","src":"33945:43:6"},"nativeSrc":"33945:72:6","nodeType":"YulFunctionCall","src":"33945:72:6"},"nativeSrc":"33945:72:6","nodeType":"YulExpressionStatement","src":"33945:72:6"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"34071:6:6","nodeType":"YulIdentifier","src":"34071:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"34084:9:6","nodeType":"YulIdentifier","src":"34084:9:6"},{"kind":"number","nativeSrc":"34095:2:6","nodeType":"YulLiteral","src":"34095:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"34080:3:6","nodeType":"YulIdentifier","src":"34080:3:6"},"nativeSrc":"34080:18:6","nodeType":"YulFunctionCall","src":"34080:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"34027:43:6","nodeType":"YulIdentifier","src":"34027:43:6"},"nativeSrc":"34027:72:6","nodeType":"YulFunctionCall","src":"34027:72:6"},"nativeSrc":"34027:72:6","nodeType":"YulExpressionStatement","src":"34027:72:6"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"34153:6:6","nodeType":"YulIdentifier","src":"34153:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"34166:9:6","nodeType":"YulIdentifier","src":"34166:9:6"},{"kind":"number","nativeSrc":"34177:2:6","nodeType":"YulLiteral","src":"34177:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"34162:3:6","nodeType":"YulIdentifier","src":"34162:3:6"},"nativeSrc":"34162:18:6","nodeType":"YulFunctionCall","src":"34162:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"34109:43:6","nodeType":"YulIdentifier","src":"34109:43:6"},"nativeSrc":"34109:72:6","nodeType":"YulFunctionCall","src":"34109:72:6"},"nativeSrc":"34109:72:6","nodeType":"YulExpressionStatement","src":"34109:72:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"33635:553:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"33765:9:6","nodeType":"YulTypedName","src":"33765:9:6","type":""},{"name":"value3","nativeSrc":"33777:6:6","nodeType":"YulTypedName","src":"33777:6:6","type":""},{"name":"value2","nativeSrc":"33785:6:6","nodeType":"YulTypedName","src":"33785:6:6","type":""},{"name":"value1","nativeSrc":"33793:6:6","nodeType":"YulTypedName","src":"33793:6:6","type":""},{"name":"value0","nativeSrc":"33801:6:6","nodeType":"YulTypedName","src":"33801:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"33812:4:6","nodeType":"YulTypedName","src":"33812:4:6","type":""}],"src":"33635:553:6"},{"body":{"nativeSrc":"34307:742:6","nodeType":"YulBlock","src":"34307:742:6","statements":[{"nativeSrc":"34317:29:6","nodeType":"YulVariableDeclaration","src":"34317:29:6","value":{"arguments":[{"name":"value","nativeSrc":"34340:5:6","nodeType":"YulIdentifier","src":"34340:5:6"}],"functionName":{"name":"sload","nativeSrc":"34334:5:6","nodeType":"YulIdentifier","src":"34334:5:6"},"nativeSrc":"34334:12:6","nodeType":"YulFunctionCall","src":"34334:12:6"},"variables":[{"name":"slotValue","nativeSrc":"34321:9:6","nodeType":"YulTypedName","src":"34321:9:6","type":""}]},{"nativeSrc":"34355:50:6","nodeType":"YulVariableDeclaration","src":"34355:50:6","value":{"arguments":[{"name":"slotValue","nativeSrc":"34395:9:6","nodeType":"YulIdentifier","src":"34395:9:6"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"34369:25:6","nodeType":"YulIdentifier","src":"34369:25:6"},"nativeSrc":"34369:36:6","nodeType":"YulFunctionCall","src":"34369:36:6"},"variables":[{"name":"length","nativeSrc":"34359:6:6","nodeType":"YulTypedName","src":"34359:6:6","type":""}]},{"nativeSrc":"34414:78:6","nodeType":"YulAssignment","src":"34414:78:6","value":{"arguments":[{"name":"pos","nativeSrc":"34480:3:6","nodeType":"YulIdentifier","src":"34480:3:6"},{"name":"length","nativeSrc":"34485:6:6","nodeType":"YulIdentifier","src":"34485:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"34421:58:6","nodeType":"YulIdentifier","src":"34421:58:6"},"nativeSrc":"34421:71:6","nodeType":"YulFunctionCall","src":"34421:71:6"},"variableNames":[{"name":"pos","nativeSrc":"34414:3:6","nodeType":"YulIdentifier","src":"34414:3:6"}]},{"cases":[{"body":{"nativeSrc":"34541:157:6","nodeType":"YulBlock","src":"34541:157:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"34594:3:6","nodeType":"YulIdentifier","src":"34594:3:6"},{"arguments":[{"name":"slotValue","nativeSrc":"34603:9:6","nodeType":"YulIdentifier","src":"34603:9:6"},{"arguments":[{"kind":"number","nativeSrc":"34618:4:6","nodeType":"YulLiteral","src":"34618:4:6","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"34614:3:6","nodeType":"YulIdentifier","src":"34614:3:6"},"nativeSrc":"34614:9:6","nodeType":"YulFunctionCall","src":"34614:9:6"}],"functionName":{"name":"and","nativeSrc":"34599:3:6","nodeType":"YulIdentifier","src":"34599:3:6"},"nativeSrc":"34599:25:6","nodeType":"YulFunctionCall","src":"34599:25:6"}],"functionName":{"name":"mstore","nativeSrc":"34587:6:6","nodeType":"YulIdentifier","src":"34587:6:6"},"nativeSrc":"34587:38:6","nodeType":"YulFunctionCall","src":"34587:38:6"},"nativeSrc":"34587:38:6","nodeType":"YulExpressionStatement","src":"34587:38:6"},{"nativeSrc":"34638:50:6","nodeType":"YulAssignment","src":"34638:50:6","value":{"arguments":[{"name":"pos","nativeSrc":"34649:3:6","nodeType":"YulIdentifier","src":"34649:3:6"},{"arguments":[{"kind":"number","nativeSrc":"34658:4:6","nodeType":"YulLiteral","src":"34658:4:6","type":"","value":"0x20"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"34678:6:6","nodeType":"YulIdentifier","src":"34678:6:6"}],"functionName":{"name":"iszero","nativeSrc":"34671:6:6","nodeType":"YulIdentifier","src":"34671:6:6"},"nativeSrc":"34671:14:6","nodeType":"YulFunctionCall","src":"34671:14:6"}],"functionName":{"name":"iszero","nativeSrc":"34664:6:6","nodeType":"YulIdentifier","src":"34664:6:6"},"nativeSrc":"34664:22:6","nodeType":"YulFunctionCall","src":"34664:22:6"}],"functionName":{"name":"mul","nativeSrc":"34654:3:6","nodeType":"YulIdentifier","src":"34654:3:6"},"nativeSrc":"34654:33:6","nodeType":"YulFunctionCall","src":"34654:33:6"}],"functionName":{"name":"add","nativeSrc":"34645:3:6","nodeType":"YulIdentifier","src":"34645:3:6"},"nativeSrc":"34645:43:6","nodeType":"YulFunctionCall","src":"34645:43:6"},"variableNames":[{"name":"ret","nativeSrc":"34638:3:6","nodeType":"YulIdentifier","src":"34638:3:6"}]}]},"nativeSrc":"34534:164:6","nodeType":"YulCase","src":"34534:164:6","value":{"kind":"number","nativeSrc":"34539:1:6","nodeType":"YulLiteral","src":"34539:1:6","type":"","value":"0"}},{"body":{"nativeSrc":"34714:329:6","nodeType":"YulBlock","src":"34714:329:6","statements":[{"nativeSrc":"34759:53:6","nodeType":"YulVariableDeclaration","src":"34759:53:6","value":{"arguments":[{"name":"value","nativeSrc":"34806:5:6","nodeType":"YulIdentifier","src":"34806:5:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"34774:31:6","nodeType":"YulIdentifier","src":"34774:31:6"},"nativeSrc":"34774:38:6","nodeType":"YulFunctionCall","src":"34774:38:6"},"variables":[{"name":"dataPos","nativeSrc":"34763:7:6","nodeType":"YulTypedName","src":"34763:7:6","type":""}]},{"nativeSrc":"34825:10:6","nodeType":"YulVariableDeclaration","src":"34825:10:6","value":{"kind":"number","nativeSrc":"34834:1:6","nodeType":"YulLiteral","src":"34834:1:6","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"34829:1:6","nodeType":"YulTypedName","src":"34829:1:6","type":""}]},{"body":{"nativeSrc":"34892:110:6","nodeType":"YulBlock","src":"34892:110:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"34921:3:6","nodeType":"YulIdentifier","src":"34921:3:6"},{"name":"i","nativeSrc":"34926:1:6","nodeType":"YulIdentifier","src":"34926:1:6"}],"functionName":{"name":"add","nativeSrc":"34917:3:6","nodeType":"YulIdentifier","src":"34917:3:6"},"nativeSrc":"34917:11:6","nodeType":"YulFunctionCall","src":"34917:11:6"},{"arguments":[{"name":"dataPos","nativeSrc":"34936:7:6","nodeType":"YulIdentifier","src":"34936:7:6"}],"functionName":{"name":"sload","nativeSrc":"34930:5:6","nodeType":"YulIdentifier","src":"34930:5:6"},"nativeSrc":"34930:14:6","nodeType":"YulFunctionCall","src":"34930:14:6"}],"functionName":{"name":"mstore","nativeSrc":"34910:6:6","nodeType":"YulIdentifier","src":"34910:6:6"},"nativeSrc":"34910:35:6","nodeType":"YulFunctionCall","src":"34910:35:6"},"nativeSrc":"34910:35:6","nodeType":"YulExpressionStatement","src":"34910:35:6"},{"nativeSrc":"34962:26:6","nodeType":"YulAssignment","src":"34962:26:6","value":{"arguments":[{"name":"dataPos","nativeSrc":"34977:7:6","nodeType":"YulIdentifier","src":"34977:7:6"},{"kind":"number","nativeSrc":"34986:1:6","nodeType":"YulLiteral","src":"34986:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"34973:3:6","nodeType":"YulIdentifier","src":"34973:3:6"},"nativeSrc":"34973:15:6","nodeType":"YulFunctionCall","src":"34973:15:6"},"variableNames":[{"name":"dataPos","nativeSrc":"34962:7:6","nodeType":"YulIdentifier","src":"34962:7:6"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"34859:1:6","nodeType":"YulIdentifier","src":"34859:1:6"},{"name":"length","nativeSrc":"34862:6:6","nodeType":"YulIdentifier","src":"34862:6:6"}],"functionName":{"name":"lt","nativeSrc":"34856:2:6","nodeType":"YulIdentifier","src":"34856:2:6"},"nativeSrc":"34856:13:6","nodeType":"YulFunctionCall","src":"34856:13:6"},"nativeSrc":"34848:154:6","nodeType":"YulForLoop","post":{"nativeSrc":"34870:21:6","nodeType":"YulBlock","src":"34870:21:6","statements":[{"nativeSrc":"34872:17:6","nodeType":"YulAssignment","src":"34872:17:6","value":{"arguments":[{"name":"i","nativeSrc":"34881:1:6","nodeType":"YulIdentifier","src":"34881:1:6"},{"kind":"number","nativeSrc":"34884:4:6","nodeType":"YulLiteral","src":"34884:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"34877:3:6","nodeType":"YulIdentifier","src":"34877:3:6"},"nativeSrc":"34877:12:6","nodeType":"YulFunctionCall","src":"34877:12:6"},"variableNames":[{"name":"i","nativeSrc":"34872:1:6","nodeType":"YulIdentifier","src":"34872:1:6"}]}]},"pre":{"nativeSrc":"34852:3:6","nodeType":"YulBlock","src":"34852:3:6","statements":[]},"src":"34848:154:6"},{"nativeSrc":"35015:18:6","nodeType":"YulAssignment","src":"35015:18:6","value":{"arguments":[{"name":"pos","nativeSrc":"35026:3:6","nodeType":"YulIdentifier","src":"35026:3:6"},{"name":"i","nativeSrc":"35031:1:6","nodeType":"YulIdentifier","src":"35031:1:6"}],"functionName":{"name":"add","nativeSrc":"35022:3:6","nodeType":"YulIdentifier","src":"35022:3:6"},"nativeSrc":"35022:11:6","nodeType":"YulFunctionCall","src":"35022:11:6"},"variableNames":[{"name":"ret","nativeSrc":"35015:3:6","nodeType":"YulIdentifier","src":"35015:3:6"}]}]},"nativeSrc":"34707:336:6","nodeType":"YulCase","src":"34707:336:6","value":{"kind":"number","nativeSrc":"34712:1:6","nodeType":"YulLiteral","src":"34712:1:6","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nativeSrc":"34512:9:6","nodeType":"YulIdentifier","src":"34512:9:6"},{"kind":"number","nativeSrc":"34523:1:6","nodeType":"YulLiteral","src":"34523:1:6","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"34508:3:6","nodeType":"YulIdentifier","src":"34508:3:6"},"nativeSrc":"34508:17:6","nodeType":"YulFunctionCall","src":"34508:17:6"},"nativeSrc":"34501:542:6","nodeType":"YulSwitch","src":"34501:542:6"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nativeSrc":"34218:831:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34288:5:6","nodeType":"YulTypedName","src":"34288:5:6","type":""},{"name":"pos","nativeSrc":"34295:3:6","nodeType":"YulTypedName","src":"34295:3:6","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"34303:3:6","nodeType":"YulTypedName","src":"34303:3:6","type":""}],"src":"34218:831:6"},{"body":{"nativeSrc":"35198:274:6","nodeType":"YulBlock","src":"35198:274:6","statements":[{"nativeSrc":"35208:26:6","nodeType":"YulAssignment","src":"35208:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"35220:9:6","nodeType":"YulIdentifier","src":"35220:9:6"},{"kind":"number","nativeSrc":"35231:2:6","nodeType":"YulLiteral","src":"35231:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"35216:3:6","nodeType":"YulIdentifier","src":"35216:3:6"},"nativeSrc":"35216:18:6","nodeType":"YulFunctionCall","src":"35216:18:6"},"variableNames":[{"name":"tail","nativeSrc":"35208:4:6","nodeType":"YulIdentifier","src":"35208:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"35288:6:6","nodeType":"YulIdentifier","src":"35288:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"35301:9:6","nodeType":"YulIdentifier","src":"35301:9:6"},{"kind":"number","nativeSrc":"35312:1:6","nodeType":"YulLiteral","src":"35312:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"35297:3:6","nodeType":"YulIdentifier","src":"35297:3:6"},"nativeSrc":"35297:17:6","nodeType":"YulFunctionCall","src":"35297:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"35244:43:6","nodeType":"YulIdentifier","src":"35244:43:6"},"nativeSrc":"35244:71:6","nodeType":"YulFunctionCall","src":"35244:71:6"},"nativeSrc":"35244:71:6","nodeType":"YulExpressionStatement","src":"35244:71:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"35336:9:6","nodeType":"YulIdentifier","src":"35336:9:6"},{"kind":"number","nativeSrc":"35347:2:6","nodeType":"YulLiteral","src":"35347:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"35332:3:6","nodeType":"YulIdentifier","src":"35332:3:6"},"nativeSrc":"35332:18:6","nodeType":"YulFunctionCall","src":"35332:18:6"},{"arguments":[{"name":"tail","nativeSrc":"35356:4:6","nodeType":"YulIdentifier","src":"35356:4:6"},{"name":"headStart","nativeSrc":"35362:9:6","nodeType":"YulIdentifier","src":"35362:9:6"}],"functionName":{"name":"sub","nativeSrc":"35352:3:6","nodeType":"YulIdentifier","src":"35352:3:6"},"nativeSrc":"35352:20:6","nodeType":"YulFunctionCall","src":"35352:20:6"}],"functionName":{"name":"mstore","nativeSrc":"35325:6:6","nodeType":"YulIdentifier","src":"35325:6:6"},"nativeSrc":"35325:48:6","nodeType":"YulFunctionCall","src":"35325:48:6"},"nativeSrc":"35325:48:6","nodeType":"YulExpressionStatement","src":"35325:48:6"},{"nativeSrc":"35382:83:6","nodeType":"YulAssignment","src":"35382:83:6","value":{"arguments":[{"name":"value1","nativeSrc":"35451:6:6","nodeType":"YulIdentifier","src":"35451:6:6"},{"name":"tail","nativeSrc":"35460:4:6","nodeType":"YulIdentifier","src":"35460:4:6"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nativeSrc":"35390:60:6","nodeType":"YulIdentifier","src":"35390:60:6"},"nativeSrc":"35390:75:6","nodeType":"YulFunctionCall","src":"35390:75:6"},"variableNames":[{"name":"tail","nativeSrc":"35382:4:6","nodeType":"YulIdentifier","src":"35382:4:6"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_storage__to_t_uint256_t_string_memory_ptr__fromStack_reversed","nativeSrc":"35055:417:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"35162:9:6","nodeType":"YulTypedName","src":"35162:9:6","type":""},{"name":"value1","nativeSrc":"35174:6:6","nodeType":"YulTypedName","src":"35174:6:6","type":""},{"name":"value0","nativeSrc":"35182:6:6","nodeType":"YulTypedName","src":"35182:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"35193:4:6","nodeType":"YulTypedName","src":"35193:4:6","type":""}],"src":"35055:417:6"},{"body":{"nativeSrc":"35506:152:6","nodeType":"YulBlock","src":"35506:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"35523:1:6","nodeType":"YulLiteral","src":"35523:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"35526:77:6","nodeType":"YulLiteral","src":"35526:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"35516:6:6","nodeType":"YulIdentifier","src":"35516:6:6"},"nativeSrc":"35516:88:6","nodeType":"YulFunctionCall","src":"35516:88:6"},"nativeSrc":"35516:88:6","nodeType":"YulExpressionStatement","src":"35516:88:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"35620:1:6","nodeType":"YulLiteral","src":"35620:1:6","type":"","value":"4"},{"kind":"number","nativeSrc":"35623:4:6","nodeType":"YulLiteral","src":"35623:4:6","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"35613:6:6","nodeType":"YulIdentifier","src":"35613:6:6"},"nativeSrc":"35613:15:6","nodeType":"YulFunctionCall","src":"35613:15:6"},"nativeSrc":"35613:15:6","nodeType":"YulExpressionStatement","src":"35613:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"35644:1:6","nodeType":"YulLiteral","src":"35644:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"35647:4:6","nodeType":"YulLiteral","src":"35647:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"35637:6:6","nodeType":"YulIdentifier","src":"35637:6:6"},"nativeSrc":"35637:15:6","nodeType":"YulFunctionCall","src":"35637:15:6"},"nativeSrc":"35637:15:6","nodeType":"YulExpressionStatement","src":"35637:15:6"}]},"name":"panic_error_0x32","nativeSrc":"35478:180:6","nodeType":"YulFunctionDefinition","src":"35478:180:6"},{"body":{"nativeSrc":"35984:717:6","nodeType":"YulBlock","src":"35984:717:6","statements":[{"nativeSrc":"35994:27:6","nodeType":"YulAssignment","src":"35994:27:6","value":{"arguments":[{"name":"headStart","nativeSrc":"36006:9:6","nodeType":"YulIdentifier","src":"36006:9:6"},{"kind":"number","nativeSrc":"36017:3:6","nodeType":"YulLiteral","src":"36017:3:6","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"36002:3:6","nodeType":"YulIdentifier","src":"36002:3:6"},"nativeSrc":"36002:19:6","nodeType":"YulFunctionCall","src":"36002:19:6"},"variableNames":[{"name":"tail","nativeSrc":"35994:4:6","nodeType":"YulIdentifier","src":"35994:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"36075:6:6","nodeType":"YulIdentifier","src":"36075:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"36088:9:6","nodeType":"YulIdentifier","src":"36088:9:6"},{"kind":"number","nativeSrc":"36099:1:6","nodeType":"YulLiteral","src":"36099:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36084:3:6","nodeType":"YulIdentifier","src":"36084:3:6"},"nativeSrc":"36084:17:6","nodeType":"YulFunctionCall","src":"36084:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"36031:43:6","nodeType":"YulIdentifier","src":"36031:43:6"},"nativeSrc":"36031:71:6","nodeType":"YulFunctionCall","src":"36031:71:6"},"nativeSrc":"36031:71:6","nodeType":"YulExpressionStatement","src":"36031:71:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"36123:9:6","nodeType":"YulIdentifier","src":"36123:9:6"},{"kind":"number","nativeSrc":"36134:2:6","nodeType":"YulLiteral","src":"36134:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36119:3:6","nodeType":"YulIdentifier","src":"36119:3:6"},"nativeSrc":"36119:18:6","nodeType":"YulFunctionCall","src":"36119:18:6"},{"arguments":[{"name":"tail","nativeSrc":"36143:4:6","nodeType":"YulIdentifier","src":"36143:4:6"},{"name":"headStart","nativeSrc":"36149:9:6","nodeType":"YulIdentifier","src":"36149:9:6"}],"functionName":{"name":"sub","nativeSrc":"36139:3:6","nodeType":"YulIdentifier","src":"36139:3:6"},"nativeSrc":"36139:20:6","nodeType":"YulFunctionCall","src":"36139:20:6"}],"functionName":{"name":"mstore","nativeSrc":"36112:6:6","nodeType":"YulIdentifier","src":"36112:6:6"},"nativeSrc":"36112:48:6","nodeType":"YulFunctionCall","src":"36112:48:6"},"nativeSrc":"36112:48:6","nodeType":"YulExpressionStatement","src":"36112:48:6"},{"nativeSrc":"36169:86:6","nodeType":"YulAssignment","src":"36169:86:6","value":{"arguments":[{"name":"value1","nativeSrc":"36241:6:6","nodeType":"YulIdentifier","src":"36241:6:6"},{"name":"tail","nativeSrc":"36250:4:6","nodeType":"YulIdentifier","src":"36250:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"36177:63:6","nodeType":"YulIdentifier","src":"36177:63:6"},"nativeSrc":"36177:78:6","nodeType":"YulFunctionCall","src":"36177:78:6"},"variableNames":[{"name":"tail","nativeSrc":"36169:4:6","nodeType":"YulIdentifier","src":"36169:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"36276:9:6","nodeType":"YulIdentifier","src":"36276:9:6"},{"kind":"number","nativeSrc":"36287:2:6","nodeType":"YulLiteral","src":"36287:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"36272:3:6","nodeType":"YulIdentifier","src":"36272:3:6"},"nativeSrc":"36272:18:6","nodeType":"YulFunctionCall","src":"36272:18:6"},{"arguments":[{"name":"tail","nativeSrc":"36296:4:6","nodeType":"YulIdentifier","src":"36296:4:6"},{"name":"headStart","nativeSrc":"36302:9:6","nodeType":"YulIdentifier","src":"36302:9:6"}],"functionName":{"name":"sub","nativeSrc":"36292:3:6","nodeType":"YulIdentifier","src":"36292:3:6"},"nativeSrc":"36292:20:6","nodeType":"YulFunctionCall","src":"36292:20:6"}],"functionName":{"name":"mstore","nativeSrc":"36265:6:6","nodeType":"YulIdentifier","src":"36265:6:6"},"nativeSrc":"36265:48:6","nodeType":"YulFunctionCall","src":"36265:48:6"},"nativeSrc":"36265:48:6","nodeType":"YulExpressionStatement","src":"36265:48:6"},{"nativeSrc":"36322:86:6","nodeType":"YulAssignment","src":"36322:86:6","value":{"arguments":[{"name":"value2","nativeSrc":"36394:6:6","nodeType":"YulIdentifier","src":"36394:6:6"},{"name":"tail","nativeSrc":"36403:4:6","nodeType":"YulIdentifier","src":"36403:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"36330:63:6","nodeType":"YulIdentifier","src":"36330:63:6"},"nativeSrc":"36330:78:6","nodeType":"YulFunctionCall","src":"36330:78:6"},"variableNames":[{"name":"tail","nativeSrc":"36322:4:6","nodeType":"YulIdentifier","src":"36322:4:6"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"36462:6:6","nodeType":"YulIdentifier","src":"36462:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"36475:9:6","nodeType":"YulIdentifier","src":"36475:9:6"},{"kind":"number","nativeSrc":"36486:2:6","nodeType":"YulLiteral","src":"36486:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"36471:3:6","nodeType":"YulIdentifier","src":"36471:3:6"},"nativeSrc":"36471:18:6","nodeType":"YulFunctionCall","src":"36471:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"36418:43:6","nodeType":"YulIdentifier","src":"36418:43:6"},"nativeSrc":"36418:72:6","nodeType":"YulFunctionCall","src":"36418:72:6"},"nativeSrc":"36418:72:6","nodeType":"YulExpressionStatement","src":"36418:72:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"36511:9:6","nodeType":"YulIdentifier","src":"36511:9:6"},{"kind":"number","nativeSrc":"36522:3:6","nodeType":"YulLiteral","src":"36522:3:6","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"36507:3:6","nodeType":"YulIdentifier","src":"36507:3:6"},"nativeSrc":"36507:19:6","nodeType":"YulFunctionCall","src":"36507:19:6"},{"arguments":[{"name":"tail","nativeSrc":"36532:4:6","nodeType":"YulIdentifier","src":"36532:4:6"},{"name":"headStart","nativeSrc":"36538:9:6","nodeType":"YulIdentifier","src":"36538:9:6"}],"functionName":{"name":"sub","nativeSrc":"36528:3:6","nodeType":"YulIdentifier","src":"36528:3:6"},"nativeSrc":"36528:20:6","nodeType":"YulFunctionCall","src":"36528:20:6"}],"functionName":{"name":"mstore","nativeSrc":"36500:6:6","nodeType":"YulIdentifier","src":"36500:6:6"},"nativeSrc":"36500:49:6","nodeType":"YulFunctionCall","src":"36500:49:6"},"nativeSrc":"36500:49:6","nodeType":"YulExpressionStatement","src":"36500:49:6"},{"nativeSrc":"36558:136:6","nodeType":"YulAssignment","src":"36558:136:6","value":{"arguments":[{"name":"value4","nativeSrc":"36680:6:6","nodeType":"YulIdentifier","src":"36680:6:6"},{"name":"tail","nativeSrc":"36689:4:6","nodeType":"YulIdentifier","src":"36689:4:6"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"36566:113:6","nodeType":"YulIdentifier","src":"36566:113:6"},"nativeSrc":"36566:128:6","nodeType":"YulFunctionCall","src":"36566:128:6"},"variableNames":[{"name":"tail","nativeSrc":"36558:4:6","nodeType":"YulIdentifier","src":"36558:4:6"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"35664:1037:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"35924:9:6","nodeType":"YulTypedName","src":"35924:9:6","type":""},{"name":"value4","nativeSrc":"35936:6:6","nodeType":"YulTypedName","src":"35936:6:6","type":""},{"name":"value3","nativeSrc":"35944:6:6","nodeType":"YulTypedName","src":"35944:6:6","type":""},{"name":"value2","nativeSrc":"35952:6:6","nodeType":"YulTypedName","src":"35952:6:6","type":""},{"name":"value1","nativeSrc":"35960:6:6","nodeType":"YulTypedName","src":"35960:6:6","type":""},{"name":"value0","nativeSrc":"35968:6:6","nodeType":"YulTypedName","src":"35968:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"35979:4:6","nodeType":"YulTypedName","src":"35979:4:6","type":""}],"src":"35664:1037:6"},{"body":{"nativeSrc":"36861:288:6","nodeType":"YulBlock","src":"36861:288:6","statements":[{"nativeSrc":"36871:26:6","nodeType":"YulAssignment","src":"36871:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"36883:9:6","nodeType":"YulIdentifier","src":"36883:9:6"},{"kind":"number","nativeSrc":"36894:2:6","nodeType":"YulLiteral","src":"36894:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"36879:3:6","nodeType":"YulIdentifier","src":"36879:3:6"},"nativeSrc":"36879:18:6","nodeType":"YulFunctionCall","src":"36879:18:6"},"variableNames":[{"name":"tail","nativeSrc":"36871:4:6","nodeType":"YulIdentifier","src":"36871:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"36951:6:6","nodeType":"YulIdentifier","src":"36951:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"36964:9:6","nodeType":"YulIdentifier","src":"36964:9:6"},{"kind":"number","nativeSrc":"36975:1:6","nodeType":"YulLiteral","src":"36975:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36960:3:6","nodeType":"YulIdentifier","src":"36960:3:6"},"nativeSrc":"36960:17:6","nodeType":"YulFunctionCall","src":"36960:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"36907:43:6","nodeType":"YulIdentifier","src":"36907:43:6"},"nativeSrc":"36907:71:6","nodeType":"YulFunctionCall","src":"36907:71:6"},"nativeSrc":"36907:71:6","nodeType":"YulExpressionStatement","src":"36907:71:6"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"37032:6:6","nodeType":"YulIdentifier","src":"37032:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"37045:9:6","nodeType":"YulIdentifier","src":"37045:9:6"},{"kind":"number","nativeSrc":"37056:2:6","nodeType":"YulLiteral","src":"37056:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37041:3:6","nodeType":"YulIdentifier","src":"37041:3:6"},"nativeSrc":"37041:18:6","nodeType":"YulFunctionCall","src":"37041:18:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"36988:43:6","nodeType":"YulIdentifier","src":"36988:43:6"},"nativeSrc":"36988:72:6","nodeType":"YulFunctionCall","src":"36988:72:6"},"nativeSrc":"36988:72:6","nodeType":"YulExpressionStatement","src":"36988:72:6"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"37114:6:6","nodeType":"YulIdentifier","src":"37114:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"37127:9:6","nodeType":"YulIdentifier","src":"37127:9:6"},{"kind":"number","nativeSrc":"37138:2:6","nodeType":"YulLiteral","src":"37138:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"37123:3:6","nodeType":"YulIdentifier","src":"37123:3:6"},"nativeSrc":"37123:18:6","nodeType":"YulFunctionCall","src":"37123:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"37070:43:6","nodeType":"YulIdentifier","src":"37070:43:6"},"nativeSrc":"37070:72:6","nodeType":"YulFunctionCall","src":"37070:72:6"},"nativeSrc":"37070:72:6","nodeType":"YulExpressionStatement","src":"37070:72:6"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"36707:442:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"36817:9:6","nodeType":"YulTypedName","src":"36817:9:6","type":""},{"name":"value2","nativeSrc":"36829:6:6","nodeType":"YulTypedName","src":"36829:6:6","type":""},{"name":"value1","nativeSrc":"36837:6:6","nodeType":"YulTypedName","src":"36837:6:6","type":""},{"name":"value0","nativeSrc":"36845:6:6","nodeType":"YulTypedName","src":"36845:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"36856:4:6","nodeType":"YulTypedName","src":"36856:4:6","type":""}],"src":"36707:442:6"},{"body":{"nativeSrc":"37357:442:6","nodeType":"YulBlock","src":"37357:442:6","statements":[{"nativeSrc":"37367:27:6","nodeType":"YulAssignment","src":"37367:27:6","value":{"arguments":[{"name":"headStart","nativeSrc":"37379:9:6","nodeType":"YulIdentifier","src":"37379:9:6"},{"kind":"number","nativeSrc":"37390:3:6","nodeType":"YulLiteral","src":"37390:3:6","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"37375:3:6","nodeType":"YulIdentifier","src":"37375:3:6"},"nativeSrc":"37375:19:6","nodeType":"YulFunctionCall","src":"37375:19:6"},"variableNames":[{"name":"tail","nativeSrc":"37367:4:6","nodeType":"YulIdentifier","src":"37367:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"37448:6:6","nodeType":"YulIdentifier","src":"37448:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"37461:9:6","nodeType":"YulIdentifier","src":"37461:9:6"},{"kind":"number","nativeSrc":"37472:1:6","nodeType":"YulLiteral","src":"37472:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"37457:3:6","nodeType":"YulIdentifier","src":"37457:3:6"},"nativeSrc":"37457:17:6","nodeType":"YulFunctionCall","src":"37457:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"37404:43:6","nodeType":"YulIdentifier","src":"37404:43:6"},"nativeSrc":"37404:71:6","nodeType":"YulFunctionCall","src":"37404:71:6"},"nativeSrc":"37404:71:6","nodeType":"YulExpressionStatement","src":"37404:71:6"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"37529:6:6","nodeType":"YulIdentifier","src":"37529:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"37542:9:6","nodeType":"YulIdentifier","src":"37542:9:6"},{"kind":"number","nativeSrc":"37553:2:6","nodeType":"YulLiteral","src":"37553:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37538:3:6","nodeType":"YulIdentifier","src":"37538:3:6"},"nativeSrc":"37538:18:6","nodeType":"YulFunctionCall","src":"37538:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"37485:43:6","nodeType":"YulIdentifier","src":"37485:43:6"},"nativeSrc":"37485:72:6","nodeType":"YulFunctionCall","src":"37485:72:6"},"nativeSrc":"37485:72:6","nodeType":"YulExpressionStatement","src":"37485:72:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"37578:9:6","nodeType":"YulIdentifier","src":"37578:9:6"},{"kind":"number","nativeSrc":"37589:2:6","nodeType":"YulLiteral","src":"37589:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"37574:3:6","nodeType":"YulIdentifier","src":"37574:3:6"},"nativeSrc":"37574:18:6","nodeType":"YulFunctionCall","src":"37574:18:6"},{"arguments":[{"name":"tail","nativeSrc":"37598:4:6","nodeType":"YulIdentifier","src":"37598:4:6"},{"name":"headStart","nativeSrc":"37604:9:6","nodeType":"YulIdentifier","src":"37604:9:6"}],"functionName":{"name":"sub","nativeSrc":"37594:3:6","nodeType":"YulIdentifier","src":"37594:3:6"},"nativeSrc":"37594:20:6","nodeType":"YulFunctionCall","src":"37594:20:6"}],"functionName":{"name":"mstore","nativeSrc":"37567:6:6","nodeType":"YulIdentifier","src":"37567:6:6"},"nativeSrc":"37567:48:6","nodeType":"YulFunctionCall","src":"37567:48:6"},"nativeSrc":"37567:48:6","nodeType":"YulExpressionStatement","src":"37567:48:6"},{"nativeSrc":"37624:86:6","nodeType":"YulAssignment","src":"37624:86:6","value":{"arguments":[{"name":"value2","nativeSrc":"37696:6:6","nodeType":"YulIdentifier","src":"37696:6:6"},{"name":"tail","nativeSrc":"37705:4:6","nodeType":"YulIdentifier","src":"37705:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"37632:63:6","nodeType":"YulIdentifier","src":"37632:63:6"},"nativeSrc":"37632:78:6","nodeType":"YulFunctionCall","src":"37632:78:6"},"variableNames":[{"name":"tail","nativeSrc":"37624:4:6","nodeType":"YulIdentifier","src":"37624:4:6"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"37764:6:6","nodeType":"YulIdentifier","src":"37764:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"37777:9:6","nodeType":"YulIdentifier","src":"37777:9:6"},{"kind":"number","nativeSrc":"37788:2:6","nodeType":"YulLiteral","src":"37788:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"37773:3:6","nodeType":"YulIdentifier","src":"37773:3:6"},"nativeSrc":"37773:18:6","nodeType":"YulFunctionCall","src":"37773:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"37720:43:6","nodeType":"YulIdentifier","src":"37720:43:6"},"nativeSrc":"37720:72:6","nodeType":"YulFunctionCall","src":"37720:72:6"},"nativeSrc":"37720:72:6","nodeType":"YulExpressionStatement","src":"37720:72:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"37155:644:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"37305:9:6","nodeType":"YulTypedName","src":"37305:9:6","type":""},{"name":"value3","nativeSrc":"37317:6:6","nodeType":"YulTypedName","src":"37317:6:6","type":""},{"name":"value2","nativeSrc":"37325:6:6","nodeType":"YulTypedName","src":"37325:6:6","type":""},{"name":"value1","nativeSrc":"37333:6:6","nodeType":"YulTypedName","src":"37333:6:6","type":""},{"name":"value0","nativeSrc":"37341:6:6","nodeType":"YulTypedName","src":"37341:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"37352:4:6","nodeType":"YulTypedName","src":"37352:4:6","type":""}],"src":"37155:644:6"},{"body":{"nativeSrc":"37911:118:6","nodeType":"YulBlock","src":"37911:118:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"37933:6:6","nodeType":"YulIdentifier","src":"37933:6:6"},{"kind":"number","nativeSrc":"37941:1:6","nodeType":"YulLiteral","src":"37941:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"37929:3:6","nodeType":"YulIdentifier","src":"37929:3:6"},"nativeSrc":"37929:14:6","nodeType":"YulFunctionCall","src":"37929:14:6"},{"hexValue":"5573657220616c7265616479206861732061636365737320746f207468697320","kind":"string","nativeSrc":"37945:34:6","nodeType":"YulLiteral","src":"37945:34:6","type":"","value":"User already has access to this "}],"functionName":{"name":"mstore","nativeSrc":"37922:6:6","nodeType":"YulIdentifier","src":"37922:6:6"},"nativeSrc":"37922:58:6","nodeType":"YulFunctionCall","src":"37922:58:6"},"nativeSrc":"37922:58:6","nodeType":"YulExpressionStatement","src":"37922:58:6"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"38001:6:6","nodeType":"YulIdentifier","src":"38001:6:6"},{"kind":"number","nativeSrc":"38009:2:6","nodeType":"YulLiteral","src":"38009:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37997:3:6","nodeType":"YulIdentifier","src":"37997:3:6"},"nativeSrc":"37997:15:6","nodeType":"YulFunctionCall","src":"37997:15:6"},{"hexValue":"7061706572","kind":"string","nativeSrc":"38014:7:6","nodeType":"YulLiteral","src":"38014:7:6","type":"","value":"paper"}],"functionName":{"name":"mstore","nativeSrc":"37990:6:6","nodeType":"YulIdentifier","src":"37990:6:6"},"nativeSrc":"37990:32:6","nodeType":"YulFunctionCall","src":"37990:32:6"},"nativeSrc":"37990:32:6","nodeType":"YulExpressionStatement","src":"37990:32:6"}]},"name":"store_literal_in_memory_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924","nativeSrc":"37805:224:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"37903:6:6","nodeType":"YulTypedName","src":"37903:6:6","type":""}],"src":"37805:224:6"},{"body":{"nativeSrc":"38181:220:6","nodeType":"YulBlock","src":"38181:220:6","statements":[{"nativeSrc":"38191:74:6","nodeType":"YulAssignment","src":"38191:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"38257:3:6","nodeType":"YulIdentifier","src":"38257:3:6"},{"kind":"number","nativeSrc":"38262:2:6","nodeType":"YulLiteral","src":"38262:2:6","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"38198:58:6","nodeType":"YulIdentifier","src":"38198:58:6"},"nativeSrc":"38198:67:6","nodeType":"YulFunctionCall","src":"38198:67:6"},"variableNames":[{"name":"pos","nativeSrc":"38191:3:6","nodeType":"YulIdentifier","src":"38191:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"38363:3:6","nodeType":"YulIdentifier","src":"38363:3:6"}],"functionName":{"name":"store_literal_in_memory_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924","nativeSrc":"38274:88:6","nodeType":"YulIdentifier","src":"38274:88:6"},"nativeSrc":"38274:93:6","nodeType":"YulFunctionCall","src":"38274:93:6"},"nativeSrc":"38274:93:6","nodeType":"YulExpressionStatement","src":"38274:93:6"},{"nativeSrc":"38376:19:6","nodeType":"YulAssignment","src":"38376:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"38387:3:6","nodeType":"YulIdentifier","src":"38387:3:6"},{"kind":"number","nativeSrc":"38392:2:6","nodeType":"YulLiteral","src":"38392:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"38383:3:6","nodeType":"YulIdentifier","src":"38383:3:6"},"nativeSrc":"38383:12:6","nodeType":"YulFunctionCall","src":"38383:12:6"},"variableNames":[{"name":"end","nativeSrc":"38376:3:6","nodeType":"YulIdentifier","src":"38376:3:6"}]}]},"name":"abi_encode_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924_to_t_string_memory_ptr_fromStack","nativeSrc":"38035:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"38169:3:6","nodeType":"YulTypedName","src":"38169:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"38177:3:6","nodeType":"YulTypedName","src":"38177:3:6","type":""}],"src":"38035:366:6"},{"body":{"nativeSrc":"38578:248:6","nodeType":"YulBlock","src":"38578:248:6","statements":[{"nativeSrc":"38588:26:6","nodeType":"YulAssignment","src":"38588:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"38600:9:6","nodeType":"YulIdentifier","src":"38600:9:6"},{"kind":"number","nativeSrc":"38611:2:6","nodeType":"YulLiteral","src":"38611:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38596:3:6","nodeType":"YulIdentifier","src":"38596:3:6"},"nativeSrc":"38596:18:6","nodeType":"YulFunctionCall","src":"38596:18:6"},"variableNames":[{"name":"tail","nativeSrc":"38588:4:6","nodeType":"YulIdentifier","src":"38588:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"38635:9:6","nodeType":"YulIdentifier","src":"38635:9:6"},{"kind":"number","nativeSrc":"38646:1:6","nodeType":"YulLiteral","src":"38646:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"38631:3:6","nodeType":"YulIdentifier","src":"38631:3:6"},"nativeSrc":"38631:17:6","nodeType":"YulFunctionCall","src":"38631:17:6"},{"arguments":[{"name":"tail","nativeSrc":"38654:4:6","nodeType":"YulIdentifier","src":"38654:4:6"},{"name":"headStart","nativeSrc":"38660:9:6","nodeType":"YulIdentifier","src":"38660:9:6"}],"functionName":{"name":"sub","nativeSrc":"38650:3:6","nodeType":"YulIdentifier","src":"38650:3:6"},"nativeSrc":"38650:20:6","nodeType":"YulFunctionCall","src":"38650:20:6"}],"functionName":{"name":"mstore","nativeSrc":"38624:6:6","nodeType":"YulIdentifier","src":"38624:6:6"},"nativeSrc":"38624:47:6","nodeType":"YulFunctionCall","src":"38624:47:6"},"nativeSrc":"38624:47:6","nodeType":"YulExpressionStatement","src":"38624:47:6"},{"nativeSrc":"38680:139:6","nodeType":"YulAssignment","src":"38680:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"38814:4:6","nodeType":"YulIdentifier","src":"38814:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924_to_t_string_memory_ptr_fromStack","nativeSrc":"38688:124:6","nodeType":"YulIdentifier","src":"38688:124:6"},"nativeSrc":"38688:131:6","nodeType":"YulFunctionCall","src":"38688:131:6"},"variableNames":[{"name":"tail","nativeSrc":"38680:4:6","nodeType":"YulIdentifier","src":"38680:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"38407:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"38558:9:6","nodeType":"YulTypedName","src":"38558:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"38573:4:6","nodeType":"YulTypedName","src":"38573:4:6","type":""}],"src":"38407:419:6"},{"body":{"nativeSrc":"38958:206:6","nodeType":"YulBlock","src":"38958:206:6","statements":[{"nativeSrc":"38968:26:6","nodeType":"YulAssignment","src":"38968:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"38980:9:6","nodeType":"YulIdentifier","src":"38980:9:6"},{"kind":"number","nativeSrc":"38991:2:6","nodeType":"YulLiteral","src":"38991:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"38976:3:6","nodeType":"YulIdentifier","src":"38976:3:6"},"nativeSrc":"38976:18:6","nodeType":"YulFunctionCall","src":"38976:18:6"},"variableNames":[{"name":"tail","nativeSrc":"38968:4:6","nodeType":"YulIdentifier","src":"38968:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"39048:6:6","nodeType":"YulIdentifier","src":"39048:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"39061:9:6","nodeType":"YulIdentifier","src":"39061:9:6"},{"kind":"number","nativeSrc":"39072:1:6","nodeType":"YulLiteral","src":"39072:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"39057:3:6","nodeType":"YulIdentifier","src":"39057:3:6"},"nativeSrc":"39057:17:6","nodeType":"YulFunctionCall","src":"39057:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"39004:43:6","nodeType":"YulIdentifier","src":"39004:43:6"},"nativeSrc":"39004:71:6","nodeType":"YulFunctionCall","src":"39004:71:6"},"nativeSrc":"39004:71:6","nodeType":"YulExpressionStatement","src":"39004:71:6"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"39129:6:6","nodeType":"YulIdentifier","src":"39129:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"39142:9:6","nodeType":"YulIdentifier","src":"39142:9:6"},{"kind":"number","nativeSrc":"39153:2:6","nodeType":"YulLiteral","src":"39153:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"39138:3:6","nodeType":"YulIdentifier","src":"39138:3:6"},"nativeSrc":"39138:18:6","nodeType":"YulFunctionCall","src":"39138:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"39085:43:6","nodeType":"YulIdentifier","src":"39085:43:6"},"nativeSrc":"39085:72:6","nodeType":"YulFunctionCall","src":"39085:72:6"},"nativeSrc":"39085:72:6","nodeType":"YulExpressionStatement","src":"39085:72:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"38832:332:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"38922:9:6","nodeType":"YulTypedName","src":"38922:9:6","type":""},{"name":"value1","nativeSrc":"38934:6:6","nodeType":"YulTypedName","src":"38934:6:6","type":""},{"name":"value0","nativeSrc":"38942:6:6","nodeType":"YulTypedName","src":"38942:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"38953:4:6","nodeType":"YulTypedName","src":"38953:4:6","type":""}],"src":"38832:332:6"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct MedicalResearch.Contribution -> struct MedicalResearch.Contribution\n    function abi_encode_t_struct$_Contribution_$816_memory_ptr_to_t_struct$_Contribution_$816_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // contributor\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // changesHash\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // approved\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // stakeAmount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Contribution_$816_memory_ptr__to_t_struct$_Contribution_$816_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Contribution_$816_memory_ptr_to_t_struct$_Contribution_$816_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value4,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_bool_t_uint256__to_t_address_t_string_memory_ptr_t_bool_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$651_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$651_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367(memPtr) {\n\n        mstore(add(memPtr, 0), \"Index out of bounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Paper does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the author can approve cont\")\n\n        mstore(add(memPtr, 32), \"ributions\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid contribution index\")\n\n    }\n\n    function abi_encode_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contribution already approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_storage__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924(memPtr) {\n\n        mstore(add(memPtr, 0), \"User already has access to this \")\n\n        mstore(add(memPtr, 32), \"paper\")\n\n    }\n\n    function abi_encode_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061012c5760003560e01c8063a1c74be5116100ad578063df771aca11610071578063df771aca146103c0578063e9436a28146103dc578063f1857f361461040c578063f690ab2f1461043c578063fc0c546a1461046c5761012c565b8063a1c74be51461030a578063a949dfdf14610326578063aa4a66dd14610356578063ad965ae614610372578063dc740fa8146103905761012c565b806377154fde116100f457806377154fde146102175780637ed4cd8714610247578063830e28f61461027757806387f0c8ac146102aa5780638936c143146102da5761012c565b8063159f392714610131578063218ace50146101615780633e0b7810146101915780635e775a27146101c65780636fd91da9146101fb575b600080fd5b61014b60048036038101906101469190612407565b61048a565b6040516101589190612456565b60405180910390f35b61017b60048036038101906101769190612471565b610566565b60405161018891906125dd565b60405180910390f35b6101ab60048036038101906101a691906125ff565b610707565b6040516101bd96959493929190612747565b60405180910390f35b6101e060048036038101906101db91906125ff565b610a4d565b6040516101f2969594939291906127cc565b60405180910390f35b61021560048036038101906102109190612471565b610bc6565b005b610231600480360381019061022c919061283b565b611493565b60405161023e9190612456565b60405180910390f35b610261600480360381019061025c919061283b565b6114ab565b60405161026e9190612917565b60405180910390f35b610291600480360381019061028c9190612471565b611653565b6040516102a19493929190612939565b60405180910390f35b6102c460048036038101906102bf91906125ff565b611745565b6040516102d19190612456565b60405180910390f35b6102f460048036038101906102ef9190612407565b61175d565b6040516103019190612985565b60405180910390f35b610324600480360381019061031f9190612bbb565b6117c5565b005b610340600480360381019061033b91906125ff565b611ad2565b60405161034d9190612456565b60405180910390f35b610370600480360381019061036b9190612c76565b611aea565b005b61037a611e04565b6040516103879190612456565b60405180910390f35b6103aa60048036038101906103a5919061283b565b611e0e565b6040516103b79190612456565b60405180910390f35b6103da60048036038101906103d591906125ff565b611e57565b005b6103f660048036038101906103f1919061283b565b6121b5565b6040516104039190612456565b60405180910390f35b61042660048036038101906104219190612407565b6121cd565b6040516104339190612985565b60405180910390f35b61045660048036038101906104519190612407565b6121fc565b6040516104639190612456565b60405180910390f35b610474612221565b6040516104819190612d44565b60405180910390f35b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821061050d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050490612dab565b60405180910390fd5b600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b61056e612245565b600660008481526020019081526020016000205482106105c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ba90612dab565b60405180910390fd5b6005600084815260200190815260200160002060008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461065890612dfa565b80601f016020809104026020016040519081016040528092919081815260200182805461068490612dfa565b80156106d15780601f106106a6576101008083540402835291602001916106d1565b820191906000526020600020905b8154815290600101906020018083116106b457829003601f168201915b505050505081526020016002820160009054906101000a900460ff16151515158152602001600382015481525050905092915050565b60006060806000606060006004600088815260200190815260200160002060050160009054906101000a900460ff16610775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076c90612e77565b60405180910390fd5b6000600460008981526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546107fb90612dfa565b80601f016020809104026020016040519081016040528092919081815260200182805461082790612dfa565b80156108745780601f1061084957610100808354040283529160200191610874565b820191906000526020600020905b81548152906001019060200180831161085757829003601f168201915b5050505050815260200160028201805461088d90612dfa565b80601f01602080910402602001604051908101604052809291908181526020018280546108b990612dfa565b80156109065780601f106108db57610100808354040283529160200191610906565b820191906000526020600020905b8154815290600101906020018083116108e957829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156109ea57838290600052602060002001805461095d90612dfa565b80601f016020809104026020016040519081016040528092919081815260200182805461098990612dfa565b80156109d65780601f106109ab576101008083540402835291602001916109d6565b820191906000526020600020905b8154815290600101906020018083116109b957829003601f168201915b50505050508152602001906001019061093e565b5050505081526020016005820160009054906101000a900460ff161515151581526020016006820154815250509050806000015181602001518260400151836060015184608001518560c001519650965096509650965096505091939550919395565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610a9690612dfa565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac290612dfa565b8015610b0f5780601f10610ae457610100808354040283529160200191610b0f565b820191906000526020600020905b815481529060010190602001808311610af257829003601f168201915b505050505090806002018054610b2490612dfa565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5090612dfa565b8015610b9d5780601f10610b7257610100808354040283529160200191610b9d565b820191906000526020600020905b815481529060010190602001808311610b8057829003601f168201915b5050505050908060030154908060050160009054906101000a900460ff16908060060154905086565b6004600083815260200190815260200160002060050160009054906101000a900460ff16610c29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2090612e77565b60405180910390fd5b6004600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ccd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc490612f09565b60405180910390fd5b60066000838152602001908152602001600020548110610d22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1990612f75565b60405180910390fd5b60056000838152602001908152602001600020600082815260200190815260200160002060020160009054906101000a900460ff1615610d97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8e90612fe1565b60405180910390fd5b6000600560008481526020019081526020016000206000838152602001908152602001600020905060006064600a6007600087815260200190815260200160002054610de39190613030565b610ded91906130a1565b8260030154610dfc91906130d2565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610e7d929190613106565b6020604051808303816000875af1158015610e9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec0919061315b565b610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef6906131d4565b60405180910390fd5b6000600154905060016000815480929190610f19906131f4565b91905055506040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600460008881526020019081526020016000206001018054610f6690612dfa565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9290612dfa565b8015610fdf5780601f10610fb457610100808354040283529160200191610fdf565b820191906000526020600020905b815481529060010190602001808311610fc257829003601f168201915b50505050508152602001846001018054610ff890612dfa565b80601f016020809104026020016040519081016040528092919081815260200182805461102490612dfa565b80156110715780601f1061104657610100808354040283529160200191611071565b820191906000526020600020905b81548152906001019060200180831161105457829003601f168201915b505050505081526020016004600088815260200190815260200160002060030154815260200160046000888152602001908152602001600020600401805480602002602001604051908101604052809291908181526020016000905b828210156111795783829060005260206000200180546110ec90612dfa565b80601f016020809104026020016040519081016040528092919081815260200182805461111890612dfa565b80156111655780601f1061113a57610100808354040283529160200191611165565b820191906000526020600020905b81548152906001019060200180831161114857829003601f168201915b5050505050815260200190600101906110cd565b505050508152602001600115158152602001868152506004600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816111fe91906133de565b50604082015181600201908161121491906133de565b5060608201518160030155608082015181600401908051906020019061123b929190612285565b5060a08201518160050160006101000a81548160ff02191690831515021790555060c0820151816006015590505080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002081905550600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061134d906131f4565b919050555060018360020160006101000a81548160ff0219169083151502179055506001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055508260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f09b0fc1dfdfeca1d7e9d6e25a76602e33ed913671db0f6aae33735eb74b661078683878660405161144894939291906134b0565b60405180910390a27fb97425b8ec45aa7c5ccc9b938659eb11b5502276f1eec240e61baf207824396c8184600101604051611484929190613579565b60405180910390a15050505050565b60096020528060005260406000206000915090505481565b6060600080600190505b600154811161154357600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff161561153057818061152c906131f4565b9250505b808061153b906131f4565b9150506114b5565b5060008167ffffffffffffffff8111156115605761155f6129aa565b5b60405190808252806020026020018201604052801561158e5781602001602082028036833780820191505090505b509050600080600190505b600154811161164757600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16156116345780838381518110611619576116186135a9565b5b6020026020010181815250508180611630906131f4565b9250505b808061163f906131f4565b915050611599565b50819350505050919050565b6005602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546116a990612dfa565b80601f01602080910402602001604051908101604052809291908181526020018280546116d590612dfa565b80156117225780601f106116f757610100808354040283529160200191611722565b820191906000526020600020905b81548152906001019060200180831161170557829003601f168201915b5050505050908060020160009054906101000a900460ff16908060030154905084565b60066020528060005260406000206000915090505481565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b60006001549050600160008154809291906117df906131f4565b91905055506040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183815260200160011515815260200160008152506004600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816118a091906133de565b5060408201518160020190816118b691906133de565b506060820151816003015560808201518160040190805190602001906118dd929190612285565b5060a08201518160050160006101000a81548160ff02191690831515021790555060c0820151816006015590505080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002081905550600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906119ef906131f4565b919050555060036000815480929190611a07906131f4565b91905055506001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f56eeaa024974e3268b1cdceef36baef0f1c89ce1f09afa010857b95d4aed25868287878787604051611ac39594939291906135d8565b60405180910390a25050505050565b60076020528060005260406000206000915090505481565b6004600084815260200190815260200160002060050160009054906101000a900460ff16611b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4490612e77565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401611baa93929190613640565b6020604051808303816000875af1158015611bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bed919061315b565b611c2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c23906131d4565b60405180910390fd5b600060066000858152602001908152602001600020549050600660008581526020019081526020016000206000815480929190611c68906131f4565b919050555060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016000151581526020018381525060056000868152602001908152602001600020600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081611d2791906133de565b5060408201518160020160006101000a81548160ff02191690831515021790555060608201518160030155905050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611da5906131f4565b91905055503373ffffffffffffffffffffffffffffffffffffffff167fe17c01af799c5069ecf6fd9a231440a115adb7a1dea0306b06d8efe971a1a0b085838686604051611df69493929190613677565b60405180910390a250505050565b6000600354905090565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6004600082815260200190815260200160002060050160009054906101000a900460ff16611eba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eb190612e77565b60405180910390fd5b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff1615611f58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f4f90613735565b60405180910390fd5b6000600460008381526020019081526020016000206003015411156120e35760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd336004600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660046000868152602001908152602001600020600301546040518463ffffffff1660e01b815260040161202093929190613640565b6020604051808303816000875af115801561203f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612063919061315b565b6120a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612099906131d4565b60405180910390fd5b60046000828152602001908152602001600020600301546007600083815260200190815260200160002060008282546120db91906130d2565b925050819055505b6001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f1442bdb26f7569db0cb308056cb26688f7aad42fc098b54920e1af1e8b67a5fc8260046000858152602001908152602001600020600301546040516121aa929190613755565b60405180910390a250565b600b6020528060005260406000206000915090505481565b60086020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600a602052816000526040600020602052806000526040600020600091509150505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600015158152602001600081525090565b8280548282559060005260206000209081019282156122cd579160200282015b828111156122cc5782518290816122bc91906133de565b50916020019190600101906122a5565b5b5090506122da91906122de565b5090565b5b808211156122fe57600081816122f59190612302565b506001016122df565b5090565b50805461230e90612dfa565b6000825580601f10612320575061233f565b601f01602090049060005260206000209081019061233e9190612342565b5b50565b5b8082111561235b576000816000905550600101612343565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061239e82612373565b9050919050565b6123ae81612393565b81146123b957600080fd5b50565b6000813590506123cb816123a5565b92915050565b6000819050919050565b6123e4816123d1565b81146123ef57600080fd5b50565b600081359050612401816123db565b92915050565b6000806040838503121561241e5761241d612369565b5b600061242c858286016123bc565b925050602061243d858286016123f2565b9150509250929050565b612450816123d1565b82525050565b600060208201905061246b6000830184612447565b92915050565b6000806040838503121561248857612487612369565b5b6000612496858286016123f2565b92505060206124a7858286016123f2565b9150509250929050565b6124ba81612393565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156124fa5780820151818401526020810190506124df565b60008484015250505050565b6000601f19601f8301169050919050565b6000612522826124c0565b61252c81856124cb565b935061253c8185602086016124dc565b61254581612506565b840191505092915050565b60008115159050919050565b61256581612550565b82525050565b612574816123d1565b82525050565b600060808301600083015161259260008601826124b1565b50602083015184820360208601526125aa8282612517565b91505060408301516125bf604086018261255c565b5060608301516125d2606086018261256b565b508091505092915050565b600060208201905081810360008301526125f7818461257a565b905092915050565b60006020828403121561261557612614612369565b5b6000612623848285016123f2565b91505092915050565b61263581612393565b82525050565b600082825260208201905092915050565b6000612657826124c0565b612661818561263b565b93506126718185602086016124dc565b61267a81612506565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006126bd8383612517565b905092915050565b6000602082019050919050565b60006126dd82612685565b6126e78185612690565b9350836020820285016126f9856126a1565b8060005b85811015612735578484038952815161271685826126b1565b9450612721836126c5565b925060208a019950506001810190506126fd565b50829750879550505050505092915050565b600060c08201905061275c600083018961262c565b818103602083015261276e818861264c565b90508181036040830152612782818761264c565b90506127916060830186612447565b81810360808301526127a381856126d2565b90506127b260a0830184612447565b979650505050505050565b6127c681612550565b82525050565b600060c0820190506127e1600083018961262c565b81810360208301526127f3818861264c565b90508181036040830152612807818761264c565b90506128166060830186612447565b61282360808301856127bd565b61283060a0830184612447565b979650505050505050565b60006020828403121561285157612850612369565b5b600061285f848285016123bc565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006128a0838361256b565b60208301905092915050565b6000602082019050919050565b60006128c482612868565b6128ce8185612873565b93506128d983612884565b8060005b8381101561290a5781516128f18882612894565b97506128fc836128ac565b9250506001810190506128dd565b5085935050505092915050565b6000602082019050818103600083015261293181846128b9565b905092915050565b600060808201905061294e600083018761262c565b8181036020830152612960818661264c565b905061296f60408301856127bd565b61297c6060830184612447565b95945050505050565b600060208201905061299a60008301846127bd565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6129e282612506565b810181811067ffffffffffffffff82111715612a0157612a006129aa565b5b80604052505050565b6000612a1461235f565b9050612a2082826129d9565b919050565b600067ffffffffffffffff821115612a4057612a3f6129aa565b5b612a4982612506565b9050602081019050919050565b82818337600083830152505050565b6000612a78612a7384612a25565b612a0a565b905082815260208101848484011115612a9457612a936129a5565b5b612a9f848285612a56565b509392505050565b600082601f830112612abc57612abb6129a0565b5b8135612acc848260208601612a65565b91505092915050565b600067ffffffffffffffff821115612af057612aef6129aa565b5b602082029050602081019050919050565b600080fd5b6000612b19612b1484612ad5565b612a0a565b90508083825260208201905060208402830185811115612b3c57612b3b612b01565b5b835b81811015612b8357803567ffffffffffffffff811115612b6157612b606129a0565b5b808601612b6e8982612aa7565b85526020850194505050602081019050612b3e565b5050509392505050565b600082601f830112612ba257612ba16129a0565b5b8135612bb2848260208601612b06565b91505092915050565b60008060008060808587031215612bd557612bd4612369565b5b600085013567ffffffffffffffff811115612bf357612bf261236e565b5b612bff87828801612aa7565b945050602085013567ffffffffffffffff811115612c2057612c1f61236e565b5b612c2c87828801612aa7565b9350506040612c3d878288016123f2565b925050606085013567ffffffffffffffff811115612c5e57612c5d61236e565b5b612c6a87828801612b8d565b91505092959194509250565b600080600060608486031215612c8f57612c8e612369565b5b6000612c9d868287016123f2565b935050602084013567ffffffffffffffff811115612cbe57612cbd61236e565b5b612cca86828701612aa7565b9250506040612cdb868287016123f2565b9150509250925092565b6000819050919050565b6000612d0a612d05612d0084612373565b612ce5565b612373565b9050919050565b6000612d1c82612cef565b9050919050565b6000612d2e82612d11565b9050919050565b612d3e81612d23565b82525050565b6000602082019050612d596000830184612d35565b92915050565b7f496e646578206f7574206f6620626f756e647300000000000000000000000000600082015250565b6000612d9560138361263b565b9150612da082612d5f565b602082019050919050565b60006020820190508181036000830152612dc481612d88565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612e1257607f821691505b602082108103612e2557612e24612dcb565b5b50919050565b7f506170657220646f6573206e6f74206578697374000000000000000000000000600082015250565b6000612e6160148361263b565b9150612e6c82612e2b565b602082019050919050565b60006020820190508181036000830152612e9081612e54565b9050919050565b7f4f6e6c792074686520617574686f722063616e20617070726f766520636f6e7460008201527f7269627574696f6e730000000000000000000000000000000000000000000000602082015250565b6000612ef360298361263b565b9150612efe82612e97565b604082019050919050565b60006020820190508181036000830152612f2281612ee6565b9050919050565b7f496e76616c696420636f6e747269627574696f6e20696e646578000000000000600082015250565b6000612f5f601a8361263b565b9150612f6a82612f29565b602082019050919050565b60006020820190508181036000830152612f8e81612f52565b9050919050565b7f436f6e747269627574696f6e20616c726561647920617070726f766564000000600082015250565b6000612fcb601d8361263b565b9150612fd682612f95565b602082019050919050565b60006020820190508181036000830152612ffa81612fbe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061303b826123d1565b9150613046836123d1565b9250828202613054816123d1565b9150828204841483151761306b5761306a613001565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006130ac826123d1565b91506130b7836123d1565b9250826130c7576130c6613072565b5b828204905092915050565b60006130dd826123d1565b91506130e8836123d1565b9250828201905080821115613100576130ff613001565b5b92915050565b600060408201905061311b600083018561262c565b6131286020830184612447565b9392505050565b61313881612550565b811461314357600080fd5b50565b6000815190506131558161312f565b92915050565b60006020828403121561317157613170612369565b5b600061317f84828501613146565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b60006131be60158361263b565b91506131c982613188565b602082019050919050565b600060208201905081810360008301526131ed816131b1565b9050919050565b60006131ff826123d1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361323157613230613001565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261329e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613261565b6132a88683613261565b95508019841693508086168417925050509392505050565b60006132db6132d66132d1846123d1565b612ce5565b6123d1565b9050919050565b6000819050919050565b6132f5836132c0565b613309613301826132e2565b84845461326e565b825550505050565b600090565b61331e613311565b6133298184846132ec565b505050565b5b8181101561334d57613342600082613316565b60018101905061332f565b5050565b601f821115613392576133638161323c565b61336c84613251565b8101602085101561337b578190505b61338f61338785613251565b83018261332e565b50505b505050565b600082821c905092915050565b60006133b560001984600802613397565b1980831691505092915050565b60006133ce83836133a4565b9150826002028217905092915050565b6133e7826124c0565b67ffffffffffffffff811115613400576133ff6129aa565b5b61340a8254612dfa565b613415828285613351565b600060209050601f8311600181146134485760008415613436578287015190505b61344085826133c2565b8655506134a8565b601f1984166134568661323c565b60005b8281101561347e57848901518255600182019150602085019450602081019050613459565b8683101561349b5784890151613497601f8916826133a4565b8355505b6001600288020188555050505b505050505050565b60006080820190506134c56000830187612447565b6134d26020830186612447565b6134df6040830185612447565b6134ec6060830184612447565b95945050505050565b6000815461350281612dfa565b61350c818661263b565b94506001821660008114613527576001811461353d57613570565b60ff198316865281151560200286019350613570565b6135468561323c565b60005b8381101561356857815481890152600182019150602081019050613549565b808801955050505b50505092915050565b600060408201905061358e6000830185612447565b81810360208301526135a081846134f5565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060a0820190506135ed6000830188612447565b81810360208301526135ff818761264c565b90508181036040830152613613818661264c565b90506136226060830185612447565b818103608083015261363481846126d2565b90509695505050505050565b6000606082019050613655600083018661262c565b613662602083018561262c565b61366f6040830184612447565b949350505050565b600060808201905061368c6000830187612447565b6136996020830186612447565b81810360408301526136ab818561264c565b90506136ba6060830184612447565b95945050505050565b7f5573657220616c7265616479206861732061636365737320746f20746869732060008201527f7061706572000000000000000000000000000000000000000000000000000000602082015250565b600061371f60258361263b565b915061372a826136c3565b604082019050919050565b6000602082019050818103600083015261374e81613712565b9050919050565b600060408201905061376a6000830185612447565b6137776020830184612447565b939250505056fea2646970667358221220fbb58d6ed1092d1957e5c6a9a3f997e58df36a8c9a9b716b228f7c726a7b98ed64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA1C74BE5 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xDF771ACA GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDF771ACA EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xE9436A28 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xF1857F36 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xF690AB2F EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x46C JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xA1C74BE5 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xA949DFDF EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xAA4A66DD EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xAD965AE6 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xDC740FA8 EQ PUSH2 0x390 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x77154FDE GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x77154FDE EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x7ED4CD87 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x830E28F6 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x87F0C8AC EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x8936C143 EQ PUSH2 0x2DA JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x159F3927 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x218ACE50 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x3E0B7810 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x5E775A27 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x6FD91DA9 EQ PUSH2 0x1FB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x2471 JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x25DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x2471 JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x2471 JUMP JUMPDEST PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2939 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x175D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x2985 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x2BBB JUMP JUMPDEST PUSH2 0x17C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH2 0x1AEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37A PUSH2 0x1E04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x1E57 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH2 0x21B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x426 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x2985 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x456 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x451 SWAP2 SWAP1 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x21FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x474 PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x2D44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 LT PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP1 PUSH2 0x2DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x56E PUSH2 0x2245 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 LT PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BA SWAP1 PUSH2 0x2DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x658 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x684 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76C SWAP1 PUSH2 0x2E77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x7FB SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x827 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x874 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x849 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x874 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x857 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x88D SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B9 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x906 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x906 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x9EA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x95D SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x989 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x93E JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xA96 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAC2 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB0F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAE4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB0F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAF2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xB24 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB50 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB9D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB72 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB9D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB80 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC20 SWAP1 PUSH2 0x2E77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC4 SWAP1 PUSH2 0x2F09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 LT PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD19 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8E SWAP1 PUSH2 0x2FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0xA PUSH1 0x7 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x3030 JUMP JUMPDEST PUSH2 0xDED SWAP2 SWAP1 PUSH2 0x30A1 JUMP JUMPDEST DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0xDFC SWAP2 SWAP1 PUSH2 0x30D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7D SWAP3 SWAP2 SWAP1 PUSH2 0x3106 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x315B JUMP JUMPDEST PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP1 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF19 SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xF66 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF92 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFDF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFB4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFDF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFC2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xFF8 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1024 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1071 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1046 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1071 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1054 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1179 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x10EC SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1118 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1165 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x113A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1165 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1148 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x10CD JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x11FE SWAP2 SWAP1 PUSH2 0x33DE JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1214 SWAP2 SWAP1 PUSH2 0x33DE JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x123B SWAP3 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x134D SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 DUP4 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B0FC1DFDFECA1D7E9D6E25A76602E33ED913671DB0F6AAE33735EB74B66107 DUP7 DUP4 DUP8 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1448 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH32 0xB97425B8EC45AA7C5CCC9B938659EB11B5502276F1EEC240E61BAF207824396C DUP2 DUP5 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x1484 SWAP3 SWAP2 SWAP1 PUSH2 0x3579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT PUSH2 0x1543 JUMPI PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1530 JUMPI DUP2 DUP1 PUSH2 0x152C SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x153B SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14B5 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1560 JUMPI PUSH2 0x155F PUSH2 0x29AA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x158E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT PUSH2 0x1647 JUMPI PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1634 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1619 JUMPI PUSH2 0x1618 PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1630 SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x163F SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1599 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x16A9 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16D5 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1722 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1722 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1705 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x17DF SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x18A0 SWAP2 SWAP1 PUSH2 0x33DE JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x18B6 SWAP2 SWAP1 PUSH2 0x33DE JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x18DD SWAP3 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x19EF SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A07 SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x56EEAA024974E3268B1CDCEEF36BAEF0F1C89CE1F09AFA010857B95D4AED2586 DUP3 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1AC3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1B4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B44 SWAP1 PUSH2 0x2E77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BAA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3640 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BED SWAP2 SWAP1 PUSH2 0x315B JUMP JUMPDEST PUSH2 0x1C2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C23 SWAP1 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1C68 SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1D27 SWAP2 SWAP1 PUSH2 0x33DE JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA5 SWAP1 PUSH2 0x31F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE17C01AF799C5069ECF6FD9A231440A115ADB7A1DEA0306B06D8EFE971A1A0B0 DUP6 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1DF6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1EBA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EB1 SWAP1 PUSH2 0x2E77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1F58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4F SWAP1 PUSH2 0x3735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x20E3 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2020 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3640 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x203F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2063 SWAP2 SWAP1 PUSH2 0x315B JUMP JUMPDEST PUSH2 0x20A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2099 SWAP1 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20DB SWAP2 SWAP1 PUSH2 0x30D2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1442BDB26F7569DB0CB308056CB26688F7AAD42FC098B54920E1AF1E8B67A5FC DUP3 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x21AA SWAP3 SWAP2 SWAP1 PUSH2 0x3755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x22CD JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x22CC JUMPI DUP3 MLOAD DUP3 SWAP1 DUP2 PUSH2 0x22BC SWAP2 SWAP1 PUSH2 0x33DE JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x22A5 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x22DA SWAP2 SWAP1 PUSH2 0x22DE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x22FE JUMPI PUSH1 0x0 DUP2 DUP2 PUSH2 0x22F5 SWAP2 SWAP1 PUSH2 0x2302 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x22DF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x230E SWAP1 PUSH2 0x2DFA JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2320 JUMPI POP PUSH2 0x233F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x233E SWAP2 SWAP1 PUSH2 0x2342 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x235B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2343 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239E DUP3 PUSH2 0x2373 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23AE DUP2 PUSH2 0x2393 JUMP JUMPDEST DUP2 EQ PUSH2 0x23B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23CB DUP2 PUSH2 0x23A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E4 DUP2 PUSH2 0x23D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x23EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2401 DUP2 PUSH2 0x23DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x241E JUMPI PUSH2 0x241D PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x242C DUP6 DUP3 DUP7 ADD PUSH2 0x23BC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x243D DUP6 DUP3 DUP7 ADD PUSH2 0x23F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2450 DUP2 PUSH2 0x23D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x246B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2488 JUMPI PUSH2 0x2487 PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2496 DUP6 DUP3 DUP7 ADD PUSH2 0x23F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24A7 DUP6 DUP3 DUP7 ADD PUSH2 0x23F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x24BA DUP2 PUSH2 0x2393 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24FA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24DF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2522 DUP3 PUSH2 0x24C0 JUMP JUMPDEST PUSH2 0x252C DUP2 DUP6 PUSH2 0x24CB JUMP JUMPDEST SWAP4 POP PUSH2 0x253C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24DC JUMP JUMPDEST PUSH2 0x2545 DUP2 PUSH2 0x2506 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2565 DUP2 PUSH2 0x2550 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2574 DUP2 PUSH2 0x23D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2592 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x24B1 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x25AA DUP3 DUP3 PUSH2 0x2517 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x25BF PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x255C JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x25D2 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x256B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25F7 DUP2 DUP5 PUSH2 0x257A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2615 JUMPI PUSH2 0x2614 PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2623 DUP5 DUP3 DUP6 ADD PUSH2 0x23F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2635 DUP2 PUSH2 0x2393 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2657 DUP3 PUSH2 0x24C0 JUMP JUMPDEST PUSH2 0x2661 DUP2 DUP6 PUSH2 0x263B JUMP JUMPDEST SWAP4 POP PUSH2 0x2671 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24DC JUMP JUMPDEST PUSH2 0x267A DUP2 PUSH2 0x2506 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26BD DUP4 DUP4 PUSH2 0x2517 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26DD DUP3 PUSH2 0x2685 JUMP JUMPDEST PUSH2 0x26E7 DUP2 DUP6 PUSH2 0x2690 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x26F9 DUP6 PUSH2 0x26A1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2735 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x2716 DUP6 DUP3 PUSH2 0x26B1 JUMP JUMPDEST SWAP5 POP PUSH2 0x2721 DUP4 PUSH2 0x26C5 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26FD JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x275C PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x262C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x276E DUP2 DUP9 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2782 DUP2 DUP8 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP PUSH2 0x2791 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2447 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x27A3 DUP2 DUP6 PUSH2 0x26D2 JUMP JUMPDEST SWAP1 POP PUSH2 0x27B2 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x27C6 DUP2 PUSH2 0x2550 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x27E1 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x262C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x27F3 DUP2 DUP9 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2807 DUP2 DUP8 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP PUSH2 0x2816 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x2823 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x27BD JUMP JUMPDEST PUSH2 0x2830 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2851 JUMPI PUSH2 0x2850 PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x285F DUP5 DUP3 DUP6 ADD PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28A0 DUP4 DUP4 PUSH2 0x256B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28C4 DUP3 PUSH2 0x2868 JUMP JUMPDEST PUSH2 0x28CE DUP2 DUP6 PUSH2 0x2873 JUMP JUMPDEST SWAP4 POP PUSH2 0x28D9 DUP4 PUSH2 0x2884 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x290A JUMPI DUP2 MLOAD PUSH2 0x28F1 DUP9 DUP3 PUSH2 0x2894 JUMP JUMPDEST SWAP8 POP PUSH2 0x28FC DUP4 PUSH2 0x28AC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x28DD JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2931 DUP2 DUP5 PUSH2 0x28B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x294E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x262C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2960 DUP2 DUP7 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP PUSH2 0x296F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x27BD JUMP JUMPDEST PUSH2 0x297C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x299A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x29E2 DUP3 PUSH2 0x2506 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A01 JUMPI PUSH2 0x2A00 PUSH2 0x29AA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A14 PUSH2 0x235F JUMP JUMPDEST SWAP1 POP PUSH2 0x2A20 DUP3 DUP3 PUSH2 0x29D9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A40 JUMPI PUSH2 0x2A3F PUSH2 0x29AA JUMP JUMPDEST JUMPDEST PUSH2 0x2A49 DUP3 PUSH2 0x2506 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A78 PUSH2 0x2A73 DUP5 PUSH2 0x2A25 JUMP JUMPDEST PUSH2 0x2A0A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2A94 JUMPI PUSH2 0x2A93 PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST PUSH2 0x2A9F DUP5 DUP3 DUP6 PUSH2 0x2A56 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2ABC JUMPI PUSH2 0x2ABB PUSH2 0x29A0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2ACC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2AF0 JUMPI PUSH2 0x2AEF PUSH2 0x29AA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B19 PUSH2 0x2B14 DUP5 PUSH2 0x2AD5 JUMP JUMPDEST PUSH2 0x2A0A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2B3C JUMPI PUSH2 0x2B3B PUSH2 0x2B01 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B83 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B61 JUMPI PUSH2 0x2B60 PUSH2 0x29A0 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x2B6E DUP10 DUP3 PUSH2 0x2AA7 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B3E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2BA2 JUMPI PUSH2 0x2BA1 PUSH2 0x29A0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2BB2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2B06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2BD5 JUMPI PUSH2 0x2BD4 PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BF3 JUMPI PUSH2 0x2BF2 PUSH2 0x236E JUMP JUMPDEST JUMPDEST PUSH2 0x2BFF DUP8 DUP3 DUP9 ADD PUSH2 0x2AA7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C20 JUMPI PUSH2 0x2C1F PUSH2 0x236E JUMP JUMPDEST JUMPDEST PUSH2 0x2C2C DUP8 DUP3 DUP9 ADD PUSH2 0x2AA7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2C3D DUP8 DUP3 DUP9 ADD PUSH2 0x23F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C5E JUMPI PUSH2 0x2C5D PUSH2 0x236E JUMP JUMPDEST JUMPDEST PUSH2 0x2C6A DUP8 DUP3 DUP9 ADD PUSH2 0x2B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C8F JUMPI PUSH2 0x2C8E PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C9D DUP7 DUP3 DUP8 ADD PUSH2 0x23F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CBE JUMPI PUSH2 0x2CBD PUSH2 0x236E JUMP JUMPDEST JUMPDEST PUSH2 0x2CCA DUP7 DUP3 DUP8 ADD PUSH2 0x2AA7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2CDB DUP7 DUP3 DUP8 ADD PUSH2 0x23F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D0A PUSH2 0x2D05 PUSH2 0x2D00 DUP5 PUSH2 0x2373 JUMP JUMPDEST PUSH2 0x2CE5 JUMP JUMPDEST PUSH2 0x2373 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1C DUP3 PUSH2 0x2CEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D2E DUP3 PUSH2 0x2D11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D3E DUP2 PUSH2 0x2D23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D59 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E646578206F7574206F6620626F756E647300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D95 PUSH1 0x13 DUP4 PUSH2 0x263B JUMP JUMPDEST SWAP2 POP PUSH2 0x2DA0 DUP3 PUSH2 0x2D5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DC4 DUP2 PUSH2 0x2D88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E12 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E25 JUMPI PUSH2 0x2E24 PUSH2 0x2DCB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506170657220646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E61 PUSH1 0x14 DUP4 PUSH2 0x263B JUMP JUMPDEST SWAP2 POP PUSH2 0x2E6C DUP3 PUSH2 0x2E2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E90 DUP2 PUSH2 0x2E54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792074686520617574686F722063616E20617070726F766520636F6E74 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7269627574696F6E730000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF3 PUSH1 0x29 DUP4 PUSH2 0x263B JUMP JUMPDEST SWAP2 POP PUSH2 0x2EFE DUP3 PUSH2 0x2E97 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F22 DUP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F6E747269627574696F6E20696E646578000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F5F PUSH1 0x1A DUP4 PUSH2 0x263B JUMP JUMPDEST SWAP2 POP PUSH2 0x2F6A DUP3 PUSH2 0x2F29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F8E DUP2 PUSH2 0x2F52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E747269627574696F6E20616C726561647920617070726F766564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FCB PUSH1 0x1D DUP4 PUSH2 0x263B JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD6 DUP3 PUSH2 0x2F95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FFA DUP2 PUSH2 0x2FBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x303B DUP3 PUSH2 0x23D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3046 DUP4 PUSH2 0x23D1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3054 DUP2 PUSH2 0x23D1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x306B JUMPI PUSH2 0x306A PUSH2 0x3001 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30AC DUP3 PUSH2 0x23D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x30B7 DUP4 PUSH2 0x23D1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x30C7 JUMPI PUSH2 0x30C6 PUSH2 0x3072 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30DD DUP3 PUSH2 0x23D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x30E8 DUP4 PUSH2 0x23D1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3100 JUMPI PUSH2 0x30FF PUSH2 0x3001 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x311B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x3128 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3138 DUP2 PUSH2 0x2550 JUMP JUMPDEST DUP2 EQ PUSH2 0x3143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3155 DUP2 PUSH2 0x312F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3171 JUMPI PUSH2 0x3170 PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x317F DUP5 DUP3 DUP6 ADD PUSH2 0x3146 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31BE PUSH1 0x15 DUP4 PUSH2 0x263B JUMP JUMPDEST SWAP2 POP PUSH2 0x31C9 DUP3 PUSH2 0x3188 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31ED DUP2 PUSH2 0x31B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31FF DUP3 PUSH2 0x23D1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3231 JUMPI PUSH2 0x3230 PUSH2 0x3001 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x329E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3261 JUMP JUMPDEST PUSH2 0x32A8 DUP7 DUP4 PUSH2 0x3261 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32DB PUSH2 0x32D6 PUSH2 0x32D1 DUP5 PUSH2 0x23D1 JUMP JUMPDEST PUSH2 0x2CE5 JUMP JUMPDEST PUSH2 0x23D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F5 DUP4 PUSH2 0x32C0 JUMP JUMPDEST PUSH2 0x3309 PUSH2 0x3301 DUP3 PUSH2 0x32E2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x326E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x331E PUSH2 0x3311 JUMP JUMPDEST PUSH2 0x3329 DUP2 DUP5 DUP5 PUSH2 0x32EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x334D JUMPI PUSH2 0x3342 PUSH1 0x0 DUP3 PUSH2 0x3316 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x332F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3392 JUMPI PUSH2 0x3363 DUP2 PUSH2 0x323C JUMP JUMPDEST PUSH2 0x336C DUP5 PUSH2 0x3251 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x337B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x338F PUSH2 0x3387 DUP6 PUSH2 0x3251 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x332E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33B5 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3397 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33CE DUP4 DUP4 PUSH2 0x33A4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33E7 DUP3 PUSH2 0x24C0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3400 JUMPI PUSH2 0x33FF PUSH2 0x29AA JUMP JUMPDEST JUMPDEST PUSH2 0x340A DUP3 SLOAD PUSH2 0x2DFA JUMP JUMPDEST PUSH2 0x3415 DUP3 DUP3 DUP6 PUSH2 0x3351 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3448 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3436 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3440 DUP6 DUP3 PUSH2 0x33C2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x34A8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3456 DUP7 PUSH2 0x323C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x347E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3459 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x349B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3497 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x33A4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x34C5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x34D2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x34DF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x34EC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3502 DUP2 PUSH2 0x2DFA JUMP JUMPDEST PUSH2 0x350C DUP2 DUP7 PUSH2 0x263B JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3527 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x353D JUMPI PUSH2 0x3570 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x3570 JUMP JUMPDEST PUSH2 0x3546 DUP6 PUSH2 0x323C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3568 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3549 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x358E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2447 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x35A0 DUP2 DUP5 PUSH2 0x34F5 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x35ED PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2447 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x35FF DUP2 DUP8 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3613 DUP2 DUP7 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP PUSH2 0x3622 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2447 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3634 DUP2 DUP5 PUSH2 0x26D2 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3655 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x3662 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x366F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x368C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x3699 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2447 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x36AB DUP2 DUP6 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP PUSH2 0x36BA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5573657220616C7265616479206861732061636365737320746F207468697320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7061706572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x371F PUSH1 0x25 DUP4 PUSH2 0x263B JUMP JUMPDEST SWAP2 POP PUSH2 0x372A DUP3 PUSH2 0x36C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x374E DUP2 PUSH2 0x3712 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x376A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x3777 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2447 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xB5 DUP14 PUSH15 0xD1092D1957E5C6A9A3F997E58DF36A DUP13 SWAP11 SWAP12 PUSH18 0x6B228F7C726A7B98ED64736F6C6343000818 STOP CALLER ","sourceMap":"114:11240:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8970:240;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9299:264;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9618:635;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;1361:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;6539:2153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1985:56;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10651:701;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1447:73;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1612:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10431:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3511:977;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1747:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5446:1034;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10324:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8767:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4553:835;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2241:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1856:65;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2108:66;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;194:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8970:240;9080:7;9115:15;:22;9131:5;9115:22;;;;;;;;;;;;;;;;9107:5;:30;9099:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;9178:11;:18;9190:5;9178:18;;;;;;;;;;;;;;;:25;9197:5;9178:25;;;;;;;;;;;;9171:32;;8970:240;;;;:::o;9299:264::-;9408:19;;:::i;:::-;9455:22;:31;9478:7;9455:31;;;;;;;;;;;;9447:5;:39;9439:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9527:13;:22;9541:7;9527:22;;;;;;;;;;;:29;9550:5;9527:29;;;;;;;;;;;9520:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9299:264;;;;:::o;9618:635::-;9731:14;9759:19;9792:25;9831:17;9862:24;9900:21;9954:6;:15;9961:7;9954:15;;;;;;;;;;;:22;;;;;;;;;;;;9946:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;10011:18;10032:6;:15;10039:7;10032:15;;;;;;;;;;;10011:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10078:5;:12;;;10104:5;:11;;;10129:5;:17;;;10160:5;:15;;;10189:5;:14;;;10217:5;:19;;;10057:189;;;;;;;;;;;;;9618:635;;;;;;;:::o;1361:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6539:2153::-;6661:6;:15;6668:7;6661:15;;;;;;;;;;;:22;;;;;;;;;;;;6653:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;6753:6;:15;6760:7;6753:15;;;;;;;;;;;:22;;;;;;;;;;;;6739:36;;:10;:36;;;6718:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;6893:22;:31;6916:7;6893:31;;;;;;;;;;;;6873:17;:51;6852:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;7008:13;:22;7022:7;7008:22;;;;;;;;;;;:41;7031:17;7008:41;;;;;;;;;;;:50;;;;;;;;;;;;7007:51;6986:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;7124:33;7160:13;:22;7174:7;7160:22;;;;;;;;;;;:63;7196:17;7160:63;;;;;;;;;;;7124:99;;7233:20;7330:3;7324:2;7297:15;:24;7313:7;7297:24;;;;;;;;;;;;:29;;;;:::i;:::-;7296:37;;;;:::i;:::-;7256:12;:24;;;:78;;;;:::i;:::-;7233:101;;7428:5;;;;;;;;;;:14;;;7443:12;:24;;;;;;;;;;;;7469:12;7428:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7407:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;7595:18;7616:11;;7595:32;;7637:11;;:13;;;;;;;;;:::i;:::-;;;;;;7682:426;;;;;;;;7710:10;7682:426;;;;;;7741:6;:15;7748:7;7741:15;;;;;;;;;;;:21;;7682:426;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7816:12;:24;;7682:426;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7865:6;:15;7872:7;7865:15;;;;;;;;;;;:25;;;7682:426;;;;7946:6;:15;7953:7;7946:15;;;;;;;;;;;:24;;7682:426;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8022:4;7682:426;;;;;;8055:7;7682:426;;;7661:6;:18;7668:10;7661:18;;;;;;;;;;;:447;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8174:10;8119:11;:23;8131:10;8119:23;;;;;;;;;;;;;;;:52;8143:15;:27;8159:10;8143:27;;;;;;;;;;;;;;;;8119:52;;;;;;;;;;;:65;;;;8194:15;:27;8210:10;8194:27;;;;;;;;;;;;;;;;:29;;;;;;;;;:::i;:::-;;;;;;8311:4;8287:12;:21;;;:28;;;;;;;;;;;;;;;;;;8402:4;8362:13;:25;8376:10;8362:25;;;;;;;;;;;;;;;:37;8388:10;8362:37;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;8532:12;:24;;;;;;;;;;;;8422:170;;;8456:7;8477:10;8501:17;8570:12;8422:170;;;;;;;;;:::i;:::-;;;;;;;;8607:50;8620:10;8632:12;:24;;8607:50;;;;;;;:::i;:::-;;;;;;;;6643:2049;;;6539:2153;;:::o;1985:56::-;;;;;;;;;;;;;;;;;:::o;10651:701::-;10735:16;10763:18;10863:9;10875:1;10863:13;;10858:140;10883:11;;10878:1;:16;10858:140;;10919:13;:19;10933:4;10919:19;;;;;;;;;;;;;;;:22;10939:1;10919:22;;;;;;;;;;;;;;;;;;;;;10915:73;;;10961:12;;;;;:::i;:::-;;;;10915:73;10896:3;;;;;:::i;:::-;;;;10858:140;;;;11008:31;11056:10;11042:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11008:59;;11077:13;11142:9;11154:1;11142:13;;11137:178;11162:11;;11157:1;:16;11137:178;;11198:13;:19;11212:4;11198:19;;;;;;;;;;;;;;;:22;11218:1;11198:22;;;;;;;;;;;;;;;;;;;;;11194:111;;;11264:1;11240:14;11255:5;11240:21;;;;;;;;:::i;:::-;;;;;;;:25;;;;;11283:7;;;;;:::i;:::-;;;;11194:111;11175:3;;;;;:::i;:::-;;;;11137:178;;;;11331:14;11324:21;;;;;10651:701;;;:::o;1447:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1612:57::-;;;;;;;;;;;;;;;;;:::o;10431:150::-;10526:4;10549:13;:16;10563:1;10549:16;;;;;;;;;;;;;;;:25;10566:7;10549:25;;;;;;;;;;;;;;;;;;;;;10542:32;;10431:150;;;;:::o;3511:977::-;3682:15;3700:11;;3682:29;;3721:11;;:13;;;;;;;;;:::i;:::-;;;;;;3797:268;;;;;;;;3825:10;3797:268;;;;;;3856:5;3797:268;;;;3888:11;3797:268;;;;3924:9;3797:268;;;;3957:8;3797:268;;;;3987:4;3797:268;;;;;;4020:1;3797:268;;;3779:6;:15;3786:7;3779:15;;;;;;;;;;;:286;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4131:7;4076:11;:23;4088:10;4076:23;;;;;;;;;;;;;;;:52;4100:15;:27;4116:10;4100:27;;;;;;;;;;;;;;;;4076:52;;;;;;;;;;;:62;;;;4148:15;:27;4164:10;4148:27;;;;;;;;;;;;;;;;:29;;;;;;;;;:::i;:::-;;;;;;4240:15;;:17;;;;;;;;;:::i;:::-;;;;;;4304:4;4267:13;:25;4281:10;4267:25;;;;;;;;;;;;;;;:34;4293:7;4267:34;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;4372:10;4324:157;;;4351:7;4396:5;4415:11;4440:9;4463:8;4324:157;;;;;;;;;;:::i;:::-;;;;;;;;3672:816;3511:977;;;;:::o;1747:50::-;;;;;;;;;;;;;;;;;:::o;5446:1034::-;5596:6;:15;5603:7;5596:15;;;;;;;;;;;:22;;;;;;;;;;;;5588:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;5674:5;;;;;;;;;;:18;;;5693:10;5713:4;5720:11;5674:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5653:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;5790:25;5818:22;:31;5841:7;5818:31;;;;;;;;;;;;5790:59;;5901:22;:31;5924:7;5901:31;;;;;;;;;;;;:33;;;;;;;;;:::i;:::-;;;;;;6039:166;;;;;;;;6079:10;6039:166;;;;;;6116:11;6039:166;;;;6151:5;6039:166;;;;;;6183:11;6039:166;;;5995:13;:22;6009:7;5995:22;;;;;;;;;;;:41;6018:17;5995:41;;;;;;;;;;;:210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6216:21;:33;6238:10;6216:33;;;;;;;;;;;;;;;;:35;;;;;;;;;:::i;:::-;;;;;;6403:10;6316:157;;;6351:7;6372:17;6427:11;6452;6316:157;;;;;;;;;:::i;:::-;;;;;;;;5578:902;5446:1034;;;:::o;10324:101::-;10377:7;10403:15;;10396:22;;10324:101;:::o;8767:121::-;8833:7;8859:15;:22;8875:5;8859:22;;;;;;;;;;;;;;;;8852:29;;8767:121;;;:::o;4553:835::-;4618:6;:15;4625:7;4618:15;;;;;;;;;;;:22;;;;;;;;;;;;4610:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4697:13;:25;4711:10;4697:25;;;;;;;;;;;;;;;:34;4723:7;4697:34;;;;;;;;;;;;;;;;;;;;;4696:35;4675:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;4837:1;4809:6;:15;4816:7;4809:15;;;;;;;;;;;:25;;;:29;4805:406;;;4879:5;;;;;;;;;;:18;;;4919:10;4951:6;:15;4958:7;4951:15;;;;;;;;;;;:22;;;;;;;;;;;;4995:6;:15;5002:7;4995:15;;;;;;;;;;;:25;;;4879:159;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4854:239;;;;;;;;;;;;:::i;:::-;;;;;;;;;5135:6;:15;5142:7;5135:15;;;;;;;;;;;:25;;;5107:15;:24;5123:7;5107:24;;;;;;;;;;;;:53;;;;;;;:::i;:::-;;;;;;;;4805:406;5258:4;5221:13;:25;5235:10;5221:25;;;;;;;;;;;;;;;:34;5247:7;5221:34;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;5343:10;5320:61;;;5334:7;5355:6;:15;5362:7;5355:15;;;;;;;;;;;:25;;;5320:61;;;;;;;:::i;:::-;;;;;;;;4553:835;:::o;2241:50::-;;;;;;;;;;;;;;;;;:::o;1856:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2108:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;194:18::-;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:474::-;2097:6;2105;2154:2;2142:9;2133:7;2129:23;2125:32;2122:119;;;2160:79;;:::i;:::-;2122:119;2280:1;2305:53;2350:7;2341:6;2330:9;2326:22;2305:53;:::i;:::-;2295:63;;2251:117;2407:2;2433:53;2478:7;2469:6;2458:9;2454:22;2433:53;:::i;:::-;2423:63;;2378:118;2029:474;;;;;:::o;2509:108::-;2586:24;2604:5;2586:24;:::i;:::-;2581:3;2574:37;2509:108;;:::o;2623:99::-;2675:6;2709:5;2703:12;2693:22;;2623:99;;;:::o;2728:159::-;2802:11;2836:6;2831:3;2824:19;2876:4;2871:3;2867:14;2852:29;;2728:159;;;;:::o;2893:246::-;2974:1;2984:113;2998:6;2995:1;2992:13;2984:113;;;3083:1;3078:3;3074:11;3068:18;3064:1;3059:3;3055:11;3048:39;3020:2;3017:1;3013:10;3008:15;;2984:113;;;3131:1;3122:6;3117:3;3113:16;3106:27;2955:184;2893:246;;;:::o;3145:102::-;3186:6;3237:2;3233:7;3228:2;3221:5;3217:14;3213:28;3203:38;;3145:102;;;:::o;3253:357::-;3331:3;3359:39;3392:5;3359:39;:::i;:::-;3414:61;3468:6;3463:3;3414:61;:::i;:::-;3407:68;;3484:65;3542:6;3537:3;3530:4;3523:5;3519:16;3484:65;:::i;:::-;3574:29;3596:6;3574:29;:::i;:::-;3569:3;3565:39;3558:46;;3335:275;3253:357;;;;:::o;3616:90::-;3650:7;3693:5;3686:13;3679:21;3668:32;;3616:90;;;:::o;3712:99::-;3783:21;3798:5;3783:21;:::i;:::-;3778:3;3771:34;3712:99;;:::o;3817:108::-;3894:24;3912:5;3894:24;:::i;:::-;3889:3;3882:37;3817:108;;:::o;4013:981::-;4140:3;4176:4;4171:3;4167:14;4270:4;4263:5;4259:16;4253:23;4289:63;4346:4;4341:3;4337:14;4323:12;4289:63;:::i;:::-;4191:171;4451:4;4444:5;4440:16;4434:23;4504:3;4498:4;4494:14;4487:4;4482:3;4478:14;4471:38;4530:73;4598:4;4584:12;4530:73;:::i;:::-;4522:81;;4372:242;4700:4;4693:5;4689:16;4683:23;4719:57;4770:4;4765:3;4761:14;4747:12;4719:57;:::i;:::-;4624:162;4875:4;4868:5;4864:16;4858:23;4894:63;4951:4;4946:3;4942:14;4928:12;4894:63;:::i;:::-;4796:171;4984:4;4977:11;;4145:849;4013:981;;;;:::o;5000:389::-;5151:4;5189:2;5178:9;5174:18;5166:26;;5238:9;5232:4;5228:20;5224:1;5213:9;5209:17;5202:47;5266:116;5377:4;5368:6;5266:116;:::i;:::-;5258:124;;5000:389;;;;:::o;5395:329::-;5454:6;5503:2;5491:9;5482:7;5478:23;5474:32;5471:119;;;5509:79;;:::i;:::-;5471:119;5629:1;5654:53;5699:7;5690:6;5679:9;5675:22;5654:53;:::i;:::-;5644:63;;5600:117;5395:329;;;;:::o;5730:118::-;5817:24;5835:5;5817:24;:::i;:::-;5812:3;5805:37;5730:118;;:::o;5854:169::-;5938:11;5972:6;5967:3;5960:19;6012:4;6007:3;6003:14;5988:29;;5854:169;;;;:::o;6029:377::-;6117:3;6145:39;6178:5;6145:39;:::i;:::-;6200:71;6264:6;6259:3;6200:71;:::i;:::-;6193:78;;6280:65;6338:6;6333:3;6326:4;6319:5;6315:16;6280:65;:::i;:::-;6370:29;6392:6;6370:29;:::i;:::-;6365:3;6361:39;6354:46;;6121:285;6029:377;;;;:::o;6412:124::-;6489:6;6523:5;6517:12;6507:22;;6412:124;;;:::o;6542:194::-;6651:11;6685:6;6680:3;6673:19;6725:4;6720:3;6716:14;6701:29;;6542:194;;;;:::o;6742:142::-;6819:4;6842:3;6834:11;;6872:4;6867:3;6863:14;6855:22;;6742:142;;;:::o;6890:196::-;6979:10;7014:66;7076:3;7068:6;7014:66;:::i;:::-;7000:80;;6890:196;;;;:::o;7092:123::-;7172:4;7204;7199:3;7195:14;7187:22;;7092:123;;;:::o;7249:991::-;7388:3;7417:64;7475:5;7417:64;:::i;:::-;7497:96;7586:6;7581:3;7497:96;:::i;:::-;7490:103;;7619:3;7664:4;7656:6;7652:17;7647:3;7643:27;7694:66;7754:5;7694:66;:::i;:::-;7783:7;7814:1;7799:396;7824:6;7821:1;7818:13;7799:396;;;7895:9;7889:4;7885:20;7880:3;7873:33;7946:6;7940:13;7974:84;8053:4;8038:13;7974:84;:::i;:::-;7966:92;;8081:70;8144:6;8081:70;:::i;:::-;8071:80;;8180:4;8175:3;8171:14;8164:21;;7859:336;7846:1;7843;7839:9;7834:14;;7799:396;;;7803:14;8211:4;8204:11;;8231:3;8224:10;;7393:847;;;;;7249:991;;;;:::o;8246:1148::-;8589:4;8627:3;8616:9;8612:19;8604:27;;8641:71;8709:1;8698:9;8694:17;8685:6;8641:71;:::i;:::-;8759:9;8753:4;8749:20;8744:2;8733:9;8729:18;8722:48;8787:78;8860:4;8851:6;8787:78;:::i;:::-;8779:86;;8912:9;8906:4;8902:20;8897:2;8886:9;8882:18;8875:48;8940:78;9013:4;9004:6;8940:78;:::i;:::-;8932:86;;9028:72;9096:2;9085:9;9081:18;9072:6;9028:72;:::i;:::-;9148:9;9142:4;9138:20;9132:3;9121:9;9117:19;9110:49;9176:128;9299:4;9290:6;9176:128;:::i;:::-;9168:136;;9314:73;9382:3;9371:9;9367:19;9358:6;9314:73;:::i;:::-;8246:1148;;;;;;;;;:::o;9400:109::-;9481:21;9496:5;9481:21;:::i;:::-;9476:3;9469:34;9400:109;;:::o;9515:945::-;9782:4;9820:3;9809:9;9805:19;9797:27;;9834:71;9902:1;9891:9;9887:17;9878:6;9834:71;:::i;:::-;9952:9;9946:4;9942:20;9937:2;9926:9;9922:18;9915:48;9980:78;10053:4;10044:6;9980:78;:::i;:::-;9972:86;;10105:9;10099:4;10095:20;10090:2;10079:9;10075:18;10068:48;10133:78;10206:4;10197:6;10133:78;:::i;:::-;10125:86;;10221:72;10289:2;10278:9;10274:18;10265:6;10221:72;:::i;:::-;10303:67;10365:3;10354:9;10350:19;10341:6;10303:67;:::i;:::-;10380:73;10448:3;10437:9;10433:19;10424:6;10380:73;:::i;:::-;9515:945;;;;;;;;;:::o;10466:329::-;10525:6;10574:2;10562:9;10553:7;10549:23;10545:32;10542:119;;;10580:79;;:::i;:::-;10542:119;10700:1;10725:53;10770:7;10761:6;10750:9;10746:22;10725:53;:::i;:::-;10715:63;;10671:117;10466:329;;;;:::o;10801:114::-;10868:6;10902:5;10896:12;10886:22;;10801:114;;;:::o;10921:184::-;11020:11;11054:6;11049:3;11042:19;11094:4;11089:3;11085:14;11070:29;;10921:184;;;;:::o;11111:132::-;11178:4;11201:3;11193:11;;11231:4;11226:3;11222:14;11214:22;;11111:132;;;:::o;11249:179::-;11318:10;11339:46;11381:3;11373:6;11339:46;:::i;:::-;11417:4;11412:3;11408:14;11394:28;;11249:179;;;;:::o;11434:113::-;11504:4;11536;11531:3;11527:14;11519:22;;11434:113;;;:::o;11583:732::-;11702:3;11731:54;11779:5;11731:54;:::i;:::-;11801:86;11880:6;11875:3;11801:86;:::i;:::-;11794:93;;11911:56;11961:5;11911:56;:::i;:::-;11990:7;12021:1;12006:284;12031:6;12028:1;12025:13;12006:284;;;12107:6;12101:13;12134:63;12193:3;12178:13;12134:63;:::i;:::-;12127:70;;12220:60;12273:6;12220:60;:::i;:::-;12210:70;;12066:224;12053:1;12050;12046:9;12041:14;;12006:284;;;12010:14;12306:3;12299:10;;11707:608;;;11583:732;;;;:::o;12321:373::-;12464:4;12502:2;12491:9;12487:18;12479:26;;12551:9;12545:4;12541:20;12537:1;12526:9;12522:17;12515:47;12579:108;12682:4;12673:6;12579:108;:::i;:::-;12571:116;;12321:373;;;;:::o;12700:632::-;12891:4;12929:3;12918:9;12914:19;12906:27;;12943:71;13011:1;13000:9;12996:17;12987:6;12943:71;:::i;:::-;13061:9;13055:4;13051:20;13046:2;13035:9;13031:18;13024:48;13089:78;13162:4;13153:6;13089:78;:::i;:::-;13081:86;;13177:66;13239:2;13228:9;13224:18;13215:6;13177:66;:::i;:::-;13253:72;13321:2;13310:9;13306:18;13297:6;13253:72;:::i;:::-;12700:632;;;;;;;:::o;13338:210::-;13425:4;13463:2;13452:9;13448:18;13440:26;;13476:65;13538:1;13527:9;13523:17;13514:6;13476:65;:::i;:::-;13338:210;;;;:::o;13554:117::-;13663:1;13660;13653:12;13677:117;13786:1;13783;13776:12;13800:180;13848:77;13845:1;13838:88;13945:4;13942:1;13935:15;13969:4;13966:1;13959:15;13986:281;14069:27;14091:4;14069:27;:::i;:::-;14061:6;14057:40;14199:6;14187:10;14184:22;14163:18;14151:10;14148:34;14145:62;14142:88;;;14210:18;;:::i;:::-;14142:88;14250:10;14246:2;14239:22;14029:238;13986:281;;:::o;14273:129::-;14307:6;14334:20;;:::i;:::-;14324:30;;14363:33;14391:4;14383:6;14363:33;:::i;:::-;14273:129;;;:::o;14408:308::-;14470:4;14560:18;14552:6;14549:30;14546:56;;;14582:18;;:::i;:::-;14546:56;14620:29;14642:6;14620:29;:::i;:::-;14612:37;;14704:4;14698;14694:15;14686:23;;14408:308;;;:::o;14722:146::-;14819:6;14814:3;14809;14796:30;14860:1;14851:6;14846:3;14842:16;14835:27;14722:146;;;:::o;14874:425::-;14952:5;14977:66;14993:49;15035:6;14993:49;:::i;:::-;14977:66;:::i;:::-;14968:75;;15066:6;15059:5;15052:21;15104:4;15097:5;15093:16;15142:3;15133:6;15128:3;15124:16;15121:25;15118:112;;;15149:79;;:::i;:::-;15118:112;15239:54;15286:6;15281:3;15276;15239:54;:::i;:::-;14958:341;14874:425;;;;;:::o;15319:340::-;15375:5;15424:3;15417:4;15409:6;15405:17;15401:27;15391:122;;15432:79;;:::i;:::-;15391:122;15549:6;15536:20;15574:79;15649:3;15641:6;15634:4;15626:6;15622:17;15574:79;:::i;:::-;15565:88;;15381:278;15319:340;;;;:::o;15665:321::-;15752:4;15842:18;15834:6;15831:30;15828:56;;;15864:18;;:::i;:::-;15828:56;15914:4;15906:6;15902:17;15894:25;;15974:4;15968;15964:15;15956:23;;15665:321;;;:::o;15992:117::-;16101:1;16098;16091:12;16131:945;16237:5;16262:91;16278:74;16345:6;16278:74;:::i;:::-;16262:91;:::i;:::-;16253:100;;16373:5;16402:6;16395:5;16388:21;16436:4;16429:5;16425:16;16418:23;;16489:4;16481:6;16477:17;16469:6;16465:30;16518:3;16510:6;16507:15;16504:122;;;16537:79;;:::i;:::-;16504:122;16652:6;16635:435;16669:6;16664:3;16661:15;16635:435;;;16758:3;16745:17;16794:18;16781:11;16778:35;16775:122;;;16816:79;;:::i;:::-;16775:122;16940:11;16932:6;16928:24;16978:47;17021:3;17009:10;16978:47;:::i;:::-;16973:3;16966:60;17055:4;17050:3;17046:14;17039:21;;16711:359;;16695:4;16690:3;16686:14;16679:21;;16635:435;;;16639:21;16243:833;;16131:945;;;;;:::o;17098:390::-;17179:5;17228:3;17221:4;17213:6;17209:17;17205:27;17195:122;;17236:79;;:::i;:::-;17195:122;17353:6;17340:20;17378:104;17478:3;17470:6;17463:4;17455:6;17451:17;17378:104;:::i;:::-;17369:113;;17185:303;17098:390;;;;:::o;17494:1355::-;17635:6;17643;17651;17659;17708:3;17696:9;17687:7;17683:23;17679:33;17676:120;;;17715:79;;:::i;:::-;17676:120;17863:1;17852:9;17848:17;17835:31;17893:18;17885:6;17882:30;17879:117;;;17915:79;;:::i;:::-;17879:117;18020:63;18075:7;18066:6;18055:9;18051:22;18020:63;:::i;:::-;18010:73;;17806:287;18160:2;18149:9;18145:18;18132:32;18191:18;18183:6;18180:30;18177:117;;;18213:79;;:::i;:::-;18177:117;18318:63;18373:7;18364:6;18353:9;18349:22;18318:63;:::i;:::-;18308:73;;18103:288;18430:2;18456:53;18501:7;18492:6;18481:9;18477:22;18456:53;:::i;:::-;18446:63;;18401:118;18586:2;18575:9;18571:18;18558:32;18617:18;18609:6;18606:30;18603:117;;;18639:79;;:::i;:::-;18603:117;18744:88;18824:7;18815:6;18804:9;18800:22;18744:88;:::i;:::-;18734:98;;18529:313;17494:1355;;;;;;;:::o;18855:799::-;18942:6;18950;18958;19007:2;18995:9;18986:7;18982:23;18978:32;18975:119;;;19013:79;;:::i;:::-;18975:119;19133:1;19158:53;19203:7;19194:6;19183:9;19179:22;19158:53;:::i;:::-;19148:63;;19104:117;19288:2;19277:9;19273:18;19260:32;19319:18;19311:6;19308:30;19305:117;;;19341:79;;:::i;:::-;19305:117;19446:63;19501:7;19492:6;19481:9;19477:22;19446:63;:::i;:::-;19436:73;;19231:288;19558:2;19584:53;19629:7;19620:6;19609:9;19605:22;19584:53;:::i;:::-;19574:63;;19529:118;18855:799;;;;;:::o;19660:60::-;19688:3;19709:5;19702:12;;19660:60;;;:::o;19726:142::-;19776:9;19809:53;19827:34;19836:24;19854:5;19836:24;:::i;:::-;19827:34;:::i;:::-;19809:53;:::i;:::-;19796:66;;19726:142;;;:::o;19874:126::-;19924:9;19957:37;19988:5;19957:37;:::i;:::-;19944:50;;19874:126;;;:::o;20006:139::-;20069:9;20102:37;20133:5;20102:37;:::i;:::-;20089:50;;20006:139;;;:::o;20151:157::-;20251:50;20295:5;20251:50;:::i;:::-;20246:3;20239:63;20151:157;;:::o;20314:248::-;20420:4;20458:2;20447:9;20443:18;20435:26;;20471:84;20552:1;20541:9;20537:17;20528:6;20471:84;:::i;:::-;20314:248;;;;:::o;20568:169::-;20708:21;20704:1;20696:6;20692:14;20685:45;20568:169;:::o;20743:366::-;20885:3;20906:67;20970:2;20965:3;20906:67;:::i;:::-;20899:74;;20982:93;21071:3;20982:93;:::i;:::-;21100:2;21095:3;21091:12;21084:19;;20743:366;;;:::o;21115:419::-;21281:4;21319:2;21308:9;21304:18;21296:26;;21368:9;21362:4;21358:20;21354:1;21343:9;21339:17;21332:47;21396:131;21522:4;21396:131;:::i;:::-;21388:139;;21115:419;;;:::o;21540:180::-;21588:77;21585:1;21578:88;21685:4;21682:1;21675:15;21709:4;21706:1;21699:15;21726:320;21770:6;21807:1;21801:4;21797:12;21787:22;;21854:1;21848:4;21844:12;21875:18;21865:81;;21931:4;21923:6;21919:17;21909:27;;21865:81;21993:2;21985:6;21982:14;21962:18;21959:38;21956:84;;22012:18;;:::i;:::-;21956:84;21777:269;21726:320;;;:::o;22052:170::-;22192:22;22188:1;22180:6;22176:14;22169:46;22052:170;:::o;22228:366::-;22370:3;22391:67;22455:2;22450:3;22391:67;:::i;:::-;22384:74;;22467:93;22556:3;22467:93;:::i;:::-;22585:2;22580:3;22576:12;22569:19;;22228:366;;;:::o;22600:419::-;22766:4;22804:2;22793:9;22789:18;22781:26;;22853:9;22847:4;22843:20;22839:1;22828:9;22824:17;22817:47;22881:131;23007:4;22881:131;:::i;:::-;22873:139;;22600:419;;;:::o;23025:228::-;23165:34;23161:1;23153:6;23149:14;23142:58;23234:11;23229:2;23221:6;23217:15;23210:36;23025:228;:::o;23259:366::-;23401:3;23422:67;23486:2;23481:3;23422:67;:::i;:::-;23415:74;;23498:93;23587:3;23498:93;:::i;:::-;23616:2;23611:3;23607:12;23600:19;;23259:366;;;:::o;23631:419::-;23797:4;23835:2;23824:9;23820:18;23812:26;;23884:9;23878:4;23874:20;23870:1;23859:9;23855:17;23848:47;23912:131;24038:4;23912:131;:::i;:::-;23904:139;;23631:419;;;:::o;24056:176::-;24196:28;24192:1;24184:6;24180:14;24173:52;24056:176;:::o;24238:366::-;24380:3;24401:67;24465:2;24460:3;24401:67;:::i;:::-;24394:74;;24477:93;24566:3;24477:93;:::i;:::-;24595:2;24590:3;24586:12;24579:19;;24238:366;;;:::o;24610:419::-;24776:4;24814:2;24803:9;24799:18;24791:26;;24863:9;24857:4;24853:20;24849:1;24838:9;24834:17;24827:47;24891:131;25017:4;24891:131;:::i;:::-;24883:139;;24610:419;;;:::o;25035:179::-;25175:31;25171:1;25163:6;25159:14;25152:55;25035:179;:::o;25220:366::-;25362:3;25383:67;25447:2;25442:3;25383:67;:::i;:::-;25376:74;;25459:93;25548:3;25459:93;:::i;:::-;25577:2;25572:3;25568:12;25561:19;;25220:366;;;:::o;25592:419::-;25758:4;25796:2;25785:9;25781:18;25773:26;;25845:9;25839:4;25835:20;25831:1;25820:9;25816:17;25809:47;25873:131;25999:4;25873:131;:::i;:::-;25865:139;;25592:419;;;:::o;26017:180::-;26065:77;26062:1;26055:88;26162:4;26159:1;26152:15;26186:4;26183:1;26176:15;26203:410;26243:7;26266:20;26284:1;26266:20;:::i;:::-;26261:25;;26300:20;26318:1;26300:20;:::i;:::-;26295:25;;26355:1;26352;26348:9;26377:30;26395:11;26377:30;:::i;:::-;26366:41;;26556:1;26547:7;26543:15;26540:1;26537:22;26517:1;26510:9;26490:83;26467:139;;26586:18;;:::i;:::-;26467:139;26251:362;26203:410;;;;:::o;26619:180::-;26667:77;26664:1;26657:88;26764:4;26761:1;26754:15;26788:4;26785:1;26778:15;26805:185;26845:1;26862:20;26880:1;26862:20;:::i;:::-;26857:25;;26896:20;26914:1;26896:20;:::i;:::-;26891:25;;26935:1;26925:35;;26940:18;;:::i;:::-;26925:35;26982:1;26979;26975:9;26970:14;;26805:185;;;;:::o;26996:191::-;27036:3;27055:20;27073:1;27055:20;:::i;:::-;27050:25;;27089:20;27107:1;27089:20;:::i;:::-;27084:25;;27132:1;27129;27125:9;27118:16;;27153:3;27150:1;27147:10;27144:36;;;27160:18;;:::i;:::-;27144:36;26996:191;;;;:::o;27193:332::-;27314:4;27352:2;27341:9;27337:18;27329:26;;27365:71;27433:1;27422:9;27418:17;27409:6;27365:71;:::i;:::-;27446:72;27514:2;27503:9;27499:18;27490:6;27446:72;:::i;:::-;27193:332;;;;;:::o;27531:116::-;27601:21;27616:5;27601:21;:::i;:::-;27594:5;27591:32;27581:60;;27637:1;27634;27627:12;27581:60;27531:116;:::o;27653:137::-;27707:5;27738:6;27732:13;27723:22;;27754:30;27778:5;27754:30;:::i;:::-;27653:137;;;;:::o;27796:345::-;27863:6;27912:2;27900:9;27891:7;27887:23;27883:32;27880:119;;;27918:79;;:::i;:::-;27880:119;28038:1;28063:61;28116:7;28107:6;28096:9;28092:22;28063:61;:::i;:::-;28053:71;;28009:125;27796:345;;;;:::o;28147:171::-;28287:23;28283:1;28275:6;28271:14;28264:47;28147:171;:::o;28324:366::-;28466:3;28487:67;28551:2;28546:3;28487:67;:::i;:::-;28480:74;;28563:93;28652:3;28563:93;:::i;:::-;28681:2;28676:3;28672:12;28665:19;;28324:366;;;:::o;28696:419::-;28862:4;28900:2;28889:9;28885:18;28877:26;;28949:9;28943:4;28939:20;28935:1;28924:9;28920:17;28913:47;28977:131;29103:4;28977:131;:::i;:::-;28969:139;;28696:419;;;:::o;29121:233::-;29160:3;29183:24;29201:5;29183:24;:::i;:::-;29174:33;;29229:66;29222:5;29219:77;29216:103;;29299:18;;:::i;:::-;29216:103;29346:1;29339:5;29335:13;29328:20;;29121:233;;;:::o;29360:141::-;29409:4;29432:3;29424:11;;29455:3;29452:1;29445:14;29489:4;29486:1;29476:18;29468:26;;29360:141;;;:::o;29507:93::-;29544:6;29591:2;29586;29579:5;29575:14;29571:23;29561:33;;29507:93;;;:::o;29606:107::-;29650:8;29700:5;29694:4;29690:16;29669:37;;29606:107;;;;:::o;29719:393::-;29788:6;29838:1;29826:10;29822:18;29861:97;29891:66;29880:9;29861:97;:::i;:::-;29979:39;30009:8;29998:9;29979:39;:::i;:::-;29967:51;;30051:4;30047:9;30040:5;30036:21;30027:30;;30100:4;30090:8;30086:19;30079:5;30076:30;30066:40;;29795:317;;29719:393;;;;;:::o;30118:142::-;30168:9;30201:53;30219:34;30228:24;30246:5;30228:24;:::i;:::-;30219:34;:::i;:::-;30201:53;:::i;:::-;30188:66;;30118:142;;;:::o;30266:75::-;30309:3;30330:5;30323:12;;30266:75;;;:::o;30347:269::-;30457:39;30488:7;30457:39;:::i;:::-;30518:91;30567:41;30591:16;30567:41;:::i;:::-;30559:6;30552:4;30546:11;30518:91;:::i;:::-;30512:4;30505:105;30423:193;30347:269;;;:::o;30622:73::-;30667:3;30622:73;:::o;30701:189::-;30778:32;;:::i;:::-;30819:65;30877:6;30869;30863:4;30819:65;:::i;:::-;30754:136;30701:189;;:::o;30896:186::-;30956:120;30973:3;30966:5;30963:14;30956:120;;;31027:39;31064:1;31057:5;31027:39;:::i;:::-;31000:1;30993:5;30989:13;30980:22;;30956:120;;;30896:186;;:::o;31088:543::-;31189:2;31184:3;31181:11;31178:446;;;31223:38;31255:5;31223:38;:::i;:::-;31307:29;31325:10;31307:29;:::i;:::-;31297:8;31293:44;31490:2;31478:10;31475:18;31472:49;;;31511:8;31496:23;;31472:49;31534:80;31590:22;31608:3;31590:22;:::i;:::-;31580:8;31576:37;31563:11;31534:80;:::i;:::-;31193:431;;31178:446;31088:543;;;:::o;31637:117::-;31691:8;31741:5;31735:4;31731:16;31710:37;;31637:117;;;;:::o;31760:169::-;31804:6;31837:51;31885:1;31881:6;31873:5;31870:1;31866:13;31837:51;:::i;:::-;31833:56;31918:4;31912;31908:15;31898:25;;31811:118;31760:169;;;;:::o;31934:295::-;32010:4;32156:29;32181:3;32175:4;32156:29;:::i;:::-;32148:37;;32218:3;32215:1;32211:11;32205:4;32202:21;32194:29;;31934:295;;;;:::o;32234:1395::-;32351:37;32384:3;32351:37;:::i;:::-;32453:18;32445:6;32442:30;32439:56;;;32475:18;;:::i;:::-;32439:56;32519:38;32551:4;32545:11;32519:38;:::i;:::-;32604:67;32664:6;32656;32650:4;32604:67;:::i;:::-;32698:1;32722:4;32709:17;;32754:2;32746:6;32743:14;32771:1;32766:618;;;;33428:1;33445:6;33442:77;;;33494:9;33489:3;33485:19;33479:26;33470:35;;33442:77;33545:67;33605:6;33598:5;33545:67;:::i;:::-;33539:4;33532:81;33401:222;32736:887;;32766:618;32818:4;32814:9;32806:6;32802:22;32852:37;32884:4;32852:37;:::i;:::-;32911:1;32925:208;32939:7;32936:1;32933:14;32925:208;;;33018:9;33013:3;33009:19;33003:26;32995:6;32988:42;33069:1;33061:6;33057:14;33047:24;;33116:2;33105:9;33101:18;33088:31;;32962:4;32959:1;32955:12;32950:17;;32925:208;;;33161:6;33152:7;33149:19;33146:179;;;33219:9;33214:3;33210:19;33204:26;33262:48;33304:4;33296:6;33292:17;33281:9;33262:48;:::i;:::-;33254:6;33247:64;33169:156;33146:179;33371:1;33367;33359:6;33355:14;33351:22;33345:4;33338:36;32773:611;;;32736:887;;32326:1303;;;32234:1395;;:::o;33635:553::-;33812:4;33850:3;33839:9;33835:19;33827:27;;33864:71;33932:1;33921:9;33917:17;33908:6;33864:71;:::i;:::-;33945:72;34013:2;34002:9;33998:18;33989:6;33945:72;:::i;:::-;34027;34095:2;34084:9;34080:18;34071:6;34027:72;:::i;:::-;34109;34177:2;34166:9;34162:18;34153:6;34109:72;:::i;:::-;33635:553;;;;;;;:::o;34218:831::-;34303:3;34340:5;34334:12;34369:36;34395:9;34369:36;:::i;:::-;34421:71;34485:6;34480:3;34421:71;:::i;:::-;34414:78;;34523:1;34512:9;34508:17;34539:1;34534:164;;;;34712:1;34707:336;;;;34501:542;;34534:164;34618:4;34614:9;34603;34599:25;34594:3;34587:38;34678:6;34671:14;34664:22;34658:4;34654:33;34649:3;34645:43;34638:50;;34534:164;;34707:336;34774:38;34806:5;34774:38;:::i;:::-;34834:1;34848:154;34862:6;34859:1;34856:13;34848:154;;;34936:7;34930:14;34926:1;34921:3;34917:11;34910:35;34986:1;34977:7;34973:15;34962:26;;34884:4;34881:1;34877:12;34872:17;;34848:154;;;35031:1;35026:3;35022:11;35015:18;;34714:329;;34501:542;;34307:742;;34218:831;;;;:::o;35055:417::-;35193:4;35231:2;35220:9;35216:18;35208:26;;35244:71;35312:1;35301:9;35297:17;35288:6;35244:71;:::i;:::-;35362:9;35356:4;35352:20;35347:2;35336:9;35332:18;35325:48;35390:75;35460:4;35451:6;35390:75;:::i;:::-;35382:83;;35055:417;;;;;:::o;35478:180::-;35526:77;35523:1;35516:88;35623:4;35620:1;35613:15;35647:4;35644:1;35637:15;35664:1037;35979:4;36017:3;36006:9;36002:19;35994:27;;36031:71;36099:1;36088:9;36084:17;36075:6;36031:71;:::i;:::-;36149:9;36143:4;36139:20;36134:2;36123:9;36119:18;36112:48;36177:78;36250:4;36241:6;36177:78;:::i;:::-;36169:86;;36302:9;36296:4;36292:20;36287:2;36276:9;36272:18;36265:48;36330:78;36403:4;36394:6;36330:78;:::i;:::-;36322:86;;36418:72;36486:2;36475:9;36471:18;36462:6;36418:72;:::i;:::-;36538:9;36532:4;36528:20;36522:3;36511:9;36507:19;36500:49;36566:128;36689:4;36680:6;36566:128;:::i;:::-;36558:136;;35664:1037;;;;;;;;:::o;36707:442::-;36856:4;36894:2;36883:9;36879:18;36871:26;;36907:71;36975:1;36964:9;36960:17;36951:6;36907:71;:::i;:::-;36988:72;37056:2;37045:9;37041:18;37032:6;36988:72;:::i;:::-;37070;37138:2;37127:9;37123:18;37114:6;37070:72;:::i;:::-;36707:442;;;;;;:::o;37155:644::-;37352:4;37390:3;37379:9;37375:19;37367:27;;37404:71;37472:1;37461:9;37457:17;37448:6;37404:71;:::i;:::-;37485:72;37553:2;37542:9;37538:18;37529:6;37485:72;:::i;:::-;37604:9;37598:4;37594:20;37589:2;37578:9;37574:18;37567:48;37632:78;37705:4;37696:6;37632:78;:::i;:::-;37624:86;;37720:72;37788:2;37777:9;37773:18;37764:6;37720:72;:::i;:::-;37155:644;;;;;;;:::o;37805:224::-;37945:34;37941:1;37933:6;37929:14;37922:58;38014:7;38009:2;38001:6;37997:15;37990:32;37805:224;:::o;38035:366::-;38177:3;38198:67;38262:2;38257:3;38198:67;:::i;:::-;38191:74;;38274:93;38363:3;38274:93;:::i;:::-;38392:2;38387:3;38383:12;38376:19;;38035:366;;;:::o;38407:419::-;38573:4;38611:2;38600:9;38596:18;38588:26;;38660:9;38654:4;38650:20;38646:1;38635:9;38631:17;38624:47;38688:131;38814:4;38688:131;:::i;:::-;38680:139;;38407:419;;;:::o;38832:332::-;38953:4;38991:2;38980:9;38976:18;38968:26;;39004:71;39072:1;39061:9;39057:17;39048:6;39004:71;:::i;:::-;39085:72;39153:2;39142:9;39138:18;39129:6;39085:72;:::i;:::-;38832:332;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2852000","executionCost":"infinite","totalCost":"infinite"},"external":{"accessPaper(uint256)":"infinite","approveContribution(uint256,uint256)":"infinite","contributions(uint256,uint256)":"infinite","getAccessibillity(address,uint256)":"3245","getContributionByIndex(uint256,uint256)":"infinite","getOwnerPaperCount(address)":"2952","getPaperById(uint256)":"infinite","getPaperIdByOwnerAndIndex(address,uint256)":"infinite","getPapersAccessedByUser(address)":"infinite","getTotalPaperCount()":"2526","ownerPaperCount(address)":"2858","ownerPapers(address,uint256)":"infinite","paperAccessFees(uint256)":"infinite","paperAccessed(address,uint256)":"3153","paperContributionCount(uint256)":"infinite","papers(uint256)":"infinite","submitContribution(uint256,string,uint256)":"infinite","token()":"infinite","uploadPaper(string,string,uint256,string[])":"infinite","userContributionCount(address)":"2837"}},"methodIdentifiers":{"accessPaper(uint256)":"df771aca","approveContribution(uint256,uint256)":"6fd91da9","contributions(uint256,uint256)":"830e28f6","getAccessibillity(address,uint256)":"8936c143","getContributionByIndex(uint256,uint256)":"218ace50","getOwnerPaperCount(address)":"dc740fa8","getPaperById(uint256)":"3e0b7810","getPaperIdByOwnerAndIndex(address,uint256)":"159f3927","getPapersAccessedByUser(address)":"7ed4cd87","getTotalPaperCount()":"ad965ae6","ownerPaperCount(address)":"e9436a28","ownerPapers(address,uint256)":"f690ab2f","paperAccessFees(uint256)":"a949dfdf","paperAccessed(address,uint256)":"f1857f36","paperContributionCount(uint256)":"87f0c8ac","papers(uint256)":"5e775a27","submitContribution(uint256,string,uint256)":"aa4a66dd","token()":"fc0c546a","uploadPaper(string,string,uint256,string[])":"a1c74be5","userContributionCount(address)":"77154fde"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPaperId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPaperId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contributionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"ContributionApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contributionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"changesHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"}],\"name\":\"ContributionSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feePaid\",\"type\":\"uint256\"}],\"name\":\"PaperAccessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPaperId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newContentHash\",\"type\":\"string\"}],\"name\":\"PaperUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accessFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"keywords\",\"type\":\"string[]\"}],\"name\":\"PaperUploaded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"}],\"name\":\"accessPaper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contributionIndex\",\"type\":\"uint256\"}],\"name\":\"approveContribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"changesHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"}],\"name\":\"getAccessibillity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getContributionByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"changesHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct MedicalResearch.Contribution\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getOwnerPaperCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"}],\"name\":\"getPaperById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"accessFee\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"keywords\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"parentPaperId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPaperIdByOwnerAndIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPapersAccessedByUser\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPaperCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerPaperCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerPapers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"paperAccessFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"paperAccessed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"paperContributionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"papers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"accessFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"parentPaperId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"changesHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"}],\"name\":\"submitContribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"accessFee\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"keywords\",\"type\":\"string[]\"}],\"name\":\"uploadPaper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userContributionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MedicalResearch.sol\":\"MedicalResearch\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/MedicalResearch.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract MedicalResearch {\\n    // ERC20 token used for payments and staking\\n    ERC20 public token;\\n\\n    // Struct to represent a research paper\\n    struct Paper {\\n        address author; // Address of the paper's author\\n        string title; // Title of the paper\\n        string contentHash; // Hash of the content to ensure integrity\\n        uint256 accessFee; // Fee in tokens to access the paper\\n        string[] keywords; // Array of keywords related to the paper\\n        bool exists; // Flag to indicate if the paper exists\\n        uint256 parentPaperId; // ID of the original paper (0 if original)\\n    }\\n\\n    // Struct to represent a contribution to a paper\\n    struct Contribution {\\n        address contributor; // Address of the contributor\\n        string changesHash; // Hash of the changes made\\n        bool approved; // Flag to indicate if the contribution is approved\\n        uint256 stakeAmount; // Amount of tokens staked for the contribution\\n    }\\n\\n    uint256 private nextPaperId; // Counter for generating new paper IDs\\n    uint256 private nextContributionIndex; // Counter for generating new contribution indices\\n    uint private totalPaperCount;\\n\\n    // Mappings to store papers, contributions, access fees, and other data\\n    mapping(uint256 => Paper) public papers; // Mapping from paper ID to Paper struct\\n    mapping(uint256 => mapping(uint256 => Contribution)) public contributions; // Mapping from paper ID to a mapping of contribution indices to Contribution structs\\n    mapping(uint256 => uint256) public paperContributionCount; // Mapping from paper ID to the number of contributions it has received\\n    mapping(uint256 => uint256) public paperAccessFees; // Mapping from paper ID to total access fees earned\\n    mapping(address => mapping(uint256 => bool)) public paperAccessed; // Mapping from user address to paper ID to access status\\n    mapping(address => uint256) public userContributionCount; // Mapping from user address to number of contributions made\\n    mapping(address => mapping(uint256 => uint256)) public ownerPapers; // Mapping from owner address to an index-to-paperId mapping\\n    mapping(address => uint256) public ownerPaperCount; // Mapping from owner address to the number of papers they own\\n\\n    // Events to log actions in the contract\\n    event PaperUploaded(\\n        uint256 paperId,\\n        address indexed author,\\n        string title,\\n        string contentHash,\\n        uint256 accessFee,\\n        string[] keywords\\n    );\\n    event ContributionSubmitted(\\n        uint256 paperId,\\n        uint256 contributionIndex,\\n        address indexed contributor,\\n        string changesHash,\\n        uint256 stakeAmount\\n    );\\n    event ContributionApproved(\\n        uint256 oldPaperId,\\n        uint256 newPaperId,\\n        uint256 contributionIndex,\\n        address indexed contributor,\\n        uint256 rewardAmount\\n    );\\n    event PaperAccessed(uint256 paperId, address indexed user, uint256 feePaid);\\n    event PaperUpdated(uint256 newPaperId, string newContentHash); // Event for new paper update\\n\\n    // Constructor to initialize the contract with the token address\\n    constructor(address _tokenAddress) {\\n        token = ERC20(_tokenAddress);\\n        nextPaperId = 1; // Start paper IDs from 1\\n        nextContributionIndex = 0; // Start contribution indices from 0\\n        totalPaperCount = 0;\\n    }\\n\\n    // Function to upload a new paper\\n    function uploadPaper(\\n        string memory title,\\n        string memory contentHash,\\n        uint256 accessFee,\\n        string[] memory keywords\\n    ) external {\\n        uint256 paperId = nextPaperId;\\n        nextPaperId++; // Increment the paper ID counter\\n\\n        papers[paperId] = Paper({\\n            author: msg.sender,\\n            title: title,\\n            contentHash: contentHash,\\n            accessFee: accessFee,\\n            keywords: keywords,\\n            exists: true,\\n            parentPaperId: 0 // No parent for original papers\\n        });\\n\\n        ownerPapers[msg.sender][ownerPaperCount[msg.sender]] = paperId;\\n        ownerPaperCount[msg.sender]++; // Increment the count of papers owned by the author\\n        totalPaperCount++;\\n        paperAccessed[msg.sender][paperId] = true;\\n\\n        emit PaperUploaded(\\n            paperId,\\n            msg.sender,\\n            title,\\n            contentHash,\\n            accessFee,\\n            keywords\\n        );\\n    }\\n\\n    // Function to access a paper by paying the access fee\\n    function accessPaper(uint256 paperId) external {\\n        require(papers[paperId].exists, \\\"Paper does not exist\\\");\\n        require(\\n            !paperAccessed[msg.sender][paperId],\\n            \\\"User already has access to this paper\\\"\\n        );\\n\\n        if (papers[paperId].accessFee > 0) {\\n            require(\\n                token.transferFrom(\\n                    msg.sender,\\n                    papers[paperId].author,\\n                    papers[paperId].accessFee\\n                ),\\n                \\\"Token transfer failed\\\"\\n            );\\n            paperAccessFees[paperId] += papers[paperId].accessFee; // Add the fee to the total access fees\\n        }\\n\\n        paperAccessed[msg.sender][paperId] = true; // Mark the paper as accessed by the user\\n\\n        emit PaperAccessed(paperId, msg.sender, papers[paperId].accessFee);\\n    }\\n\\n    // Function to submit a contribution to a paper\\n    function submitContribution(\\n        uint256 paperId,\\n        string memory changesHash,\\n        uint256 stakeAmount\\n    ) external {\\n        require(papers[paperId].exists, \\\"Paper does not exist\\\");\\n        require(\\n            token.transferFrom(msg.sender, address(this), stakeAmount),\\n            \\\"Token transfer failed\\\"\\n        );\\n\\n        uint256 contributionIndex = paperContributionCount[paperId]; // Get the index for the new contribution\\n        paperContributionCount[paperId]++; // Increment the contribution count for the paper\\n\\n        contributions[paperId][contributionIndex] = Contribution({\\n            contributor: msg.sender,\\n            changesHash: changesHash,\\n            approved: false,\\n            stakeAmount: stakeAmount\\n        });\\n\\n        userContributionCount[msg.sender]++; // Increment the contribution count for the user\\n\\n        emit ContributionSubmitted(\\n            paperId,\\n            contributionIndex,\\n            msg.sender,\\n            changesHash,\\n            stakeAmount\\n        );\\n    }\\n\\n    // Function to approve a contribution to a paper\\n    function approveContribution(\\n        uint256 paperId,\\n        uint256 contributionIndex\\n    ) external {\\n        require(papers[paperId].exists, \\\"Paper does not exist\\\");\\n        require(\\n            msg.sender == papers[paperId].author,\\n            \\\"Only the author can approve contributions\\\"\\n        );\\n        require(\\n            contributionIndex < paperContributionCount[paperId],\\n            \\\"Invalid contribution index\\\"\\n        );\\n        require(\\n            !contributions[paperId][contributionIndex].approved,\\n            \\\"Contribution already approved\\\"\\n        );\\n\\n        Contribution storage contribution = contributions[paperId][\\n            contributionIndex\\n        ];\\n        uint256 rewardAmount = contribution.stakeAmount +\\n            ((paperAccessFees[paperId] * 10) / 100); // Reward includes 10% of the access fees earned by the paper\\n\\n        require(\\n            token.transfer(contribution.contributor, rewardAmount),\\n            \\\"Token transfer failed\\\"\\n        );\\n\\n        // Create a new paper with the updated content\\n        uint256 newPaperId = nextPaperId;\\n        nextPaperId++;\\n\\n        papers[newPaperId] = Paper({\\n            author: msg.sender,\\n            title: papers[paperId].title, // Keep the title the same\\n            contentHash: contribution.changesHash,\\n            accessFee: papers[paperId].accessFee, // Keep the access fee the same\\n            keywords: papers[paperId].keywords, // Keep the keywords the same\\n            exists: true,\\n            parentPaperId: paperId // Reference to the original paper\\n        });\\n\\n        ownerPapers[msg.sender][ownerPaperCount[msg.sender]] = newPaperId;\\n        ownerPaperCount[msg.sender]++; // Increment the count of papers owned by the author\\n\\n        contribution.approved = true; // Mark the contribution as approved\\n        paperAccessed[msg.sender][newPaperId] = true;\\n\\n        emit ContributionApproved(\\n            paperId,\\n            newPaperId,\\n            contributionIndex,\\n            contribution.contributor,\\n            rewardAmount\\n        );\\n        emit PaperUpdated(newPaperId, contribution.changesHash); // Emit event for new paper\\n    }\\n\\n    // Function to get the total count of papers owned by an address\\n    function getOwnerPaperCount(address owner) external view returns (uint256) {\\n        return ownerPaperCount[owner];\\n    }\\n\\n    // Function to get the paper ID owned by an address at a specific index\\n    function getPaperIdByOwnerAndIndex(\\n        address owner,\\n        uint256 index\\n    ) external view returns (uint256) {\\n        require(index < ownerPaperCount[owner], \\\"Index out of bounds\\\");\\n        return ownerPapers[owner][index];\\n    }\\n\\n    // Function to get the contribution details by paper ID and contribution index\\n    function getContributionByIndex(\\n        uint256 paperId,\\n        uint256 index\\n    ) external view returns (Contribution memory) {\\n        require(index < paperContributionCount[paperId], \\\"Index out of bounds\\\");\\n        return contributions[paperId][index];\\n    }\\n\\n    // Function to get paper details by paper ID\\n    function getPaperById(\\n        uint256 paperId\\n    )\\n        external\\n        view\\n        returns (\\n            address author,\\n            string memory title,\\n            string memory contentHash,\\n            uint256 accessFee,\\n            string[] memory keywords,\\n            uint256 parentPaperId\\n        )\\n    {\\n        require(papers[paperId].exists, \\\"Paper does not exist\\\");\\n        Paper memory paper = papers[paperId];\\n        return (\\n            paper.author,\\n            paper.title,\\n            paper.contentHash,\\n            paper.accessFee,\\n            paper.keywords,\\n            paper.parentPaperId\\n        );\\n    }\\n\\n    // Function to get the total count of papers in the contract\\n    function getTotalPaperCount() external view returns (uint256) {\\n        return totalPaperCount;\\n    }\\n\\n    function getAccessibillity(\\n        address s,\\n        uint paperId\\n    ) public view returns (bool) {\\n        return paperAccessed[s][paperId];\\n    }\\n\\n    // Function to get the list of paper IDs accessed by a user\\n    function getPapersAccessedByUser(\\n        address user\\n    ) external view returns (uint256[] memory) {\\n        uint256 paperCount = 0;\\n        // Calculate the number of papers accessed by the user\\n        for (uint256 i = 1; i <= nextPaperId; i++) {\\n            if (paperAccessed[user][i]) {\\n                paperCount++;\\n            }\\n        }\\n\\n        uint256[] memory accessedPapers = new uint256[](paperCount);\\n        uint256 index = 0;\\n        // Collect the paper IDs\\n        for (uint256 i = 1; i <= nextPaperId; i++) {\\n            if (paperAccessed[user][i]) {\\n                accessedPapers[index] = i;\\n                index++;\\n            }\\n        }\\n        return accessedPapers;\\n    }\\n}\\n\",\"keccak256\":\"0x7b6cb9d4bad43886886bae14ca3d7968b7355b26453e92f025b952d3eda6aa5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":791,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"token","offset":0,"slot":"0","type":"t_contract(ERC20)651"},{"astId":818,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"nextPaperId","offset":0,"slot":"1","type":"t_uint256"},{"astId":820,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"nextContributionIndex","offset":0,"slot":"2","type":"t_uint256"},{"astId":822,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"totalPaperCount","offset":0,"slot":"3","type":"t_uint256"},{"astId":827,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"papers","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_struct(Paper)807_storage)"},{"astId":834,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"contributions","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Contribution)816_storage))"},{"astId":838,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"paperContributionCount","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_uint256)"},{"astId":842,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"paperAccessFees","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":848,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"paperAccessed","offset":0,"slot":"8","type":"t_mapping(t_address,t_mapping(t_uint256,t_bool))"},{"astId":852,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"userContributionCount","offset":0,"slot":"9","type":"t_mapping(t_address,t_uint256)"},{"astId":858,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"ownerPapers","offset":0,"slot":"10","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":862,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"ownerPaperCount","offset":0,"slot":"11","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(ERC20)651":{"encoding":"inplace","label":"contract ERC20","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_uint256,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => bool))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Contribution)816_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => struct MedicalResearch.Contribution))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Contribution)816_storage)"},"t_mapping(t_uint256,t_struct(Contribution)816_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MedicalResearch.Contribution)","numberOfBytes":"32","value":"t_struct(Contribution)816_storage"},"t_mapping(t_uint256,t_struct(Paper)807_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MedicalResearch.Paper)","numberOfBytes":"32","value":"t_struct(Paper)807_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Contribution)816_storage":{"encoding":"inplace","label":"struct MedicalResearch.Contribution","members":[{"astId":809,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"contributor","offset":0,"slot":"0","type":"t_address"},{"astId":811,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"changesHash","offset":0,"slot":"1","type":"t_string_storage"},{"astId":813,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"approved","offset":0,"slot":"2","type":"t_bool"},{"astId":815,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"stakeAmount","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_struct(Paper)807_storage":{"encoding":"inplace","label":"struct MedicalResearch.Paper","members":[{"astId":793,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"author","offset":0,"slot":"0","type":"t_address"},{"astId":795,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"title","offset":0,"slot":"1","type":"t_string_storage"},{"astId":797,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"contentHash","offset":0,"slot":"2","type":"t_string_storage"},{"astId":799,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"accessFee","offset":0,"slot":"3","type":"t_uint256"},{"astId":802,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"keywords","offset":0,"slot":"4","type":"t_array(t_string_storage)dyn_storage"},{"astId":804,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"exists","offset":0,"slot":"5","type":"t_bool"},{"astId":806,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"parentPaperId","offset":0,"slot":"6","type":"t_uint256"}],"numberOfBytes":"224"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}
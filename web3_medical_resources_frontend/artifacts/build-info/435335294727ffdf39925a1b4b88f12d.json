{"id":"435335294727ffdf39925a1b4b88f12d","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/MedicalResearch.sol":{"content":"pragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n// import \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MedicalResearch  {\r\n    \r\n    // ERC20 token used for payments and staking\r\n    ERC20 public token;\r\n\r\n    // Struct to represent a research paper\r\n    struct Paper {\r\n        address author; // Address of the paper's author\r\n        string title; // Title of the paper\r\n        string contentHash; // Hash of the content to ensure integrity\r\n        uint256 accessFee; // Fee in tokens to access the paper\r\n        string[] keywords; // Array of keywords related to the paper\r\n        bool exists; // Flag to indicate if the paper exists\r\n        uint256 parentPaperId; // ID of the original paper (0 if original)\r\n    }\r\n\r\n    // Struct to represent a contribution to a paper\r\n    struct Contribution {\r\n        address contributor; // Address of the contributor\r\n        string changesHash; // Hash of the changes made\r\n        bool approved; // Flag to indicate if the contribution is approved\r\n        uint256 stakeAmount; // Amount of tokens staked for the contribution\r\n    }\r\n\r\n    uint256 private nextPaperId; // Counter for generating new paper IDs\r\n    uint256 private nextContributionIndex; // Counter for generating new contribution indices\r\n\r\n    // Mappings to store papers, contributions, access fees, and other data\r\n    mapping(uint256 => Paper) public papers; // Mapping from paper ID to Paper struct\r\n    mapping(uint256 => Contribution[]) public contributions; // Mapping from paper ID to an array of Contribution structs\r\n    mapping(uint256 => uint256) public paperAccessFees; // Mapping from paper ID to total access fees earned\r\n    mapping(address => uint256[]) private papersByOwner; // Mapping from owner address to an array of paper IDs owned\r\n    mapping(uint256 => mapping(address => bool)) public paperAccessed; // Mapping from paper ID to a mapping of user addresses to access status\r\n    mapping(address => uint256) public userContributionCount; // Mapping from user address to number of contributions made\r\n\r\n    // Events to log actions in the contract\r\n    event PaperUploaded(uint256 paperId, address indexed author, string title, string contentHash, uint256 accessFee, string[] keywords);\r\n    event ContributionSubmitted(uint256 paperId, uint256 contributionIndex, address indexed contributor, string changesHash, uint256 stakeAmount);\r\n    event ContributionApproved(uint256 oldPaperId, uint256 newPaperId, uint256 contributionIndex, address indexed contributor, uint256 rewardAmount);\r\n    event PaperAccessed(uint256 paperId, address indexed user, uint256 feePaid);\r\n    event PaperUpdated(uint256 newPaperId, string newContentHash); // Event for new paper update\r\n\r\n    // Constructor to initialize the contract with the token address\r\n    constructor(address _tokenAddress) {\r\n        token = ERC20(_tokenAddress);\r\n        nextPaperId = 1; // Start paper IDs from 1\r\n        nextContributionIndex = 0; // Start contribution indices from 0\r\n    }\r\n\r\n    // Function to upload a new paper\r\n    function uploadPaper(string memory title, string memory contentHash, uint256 accessFee, string[] memory keywords) external {\r\n        uint256 paperId = nextPaperId;\r\n        nextPaperId++; // Increment the paper ID counter\r\n\r\n        papers[paperId] = Paper({\r\n            author: msg.sender,\r\n            title: title,\r\n            contentHash: contentHash,\r\n            accessFee: accessFee,\r\n            keywords: keywords,\r\n            exists: true,\r\n            parentPaperId: 0 // No parent for original papers\r\n        });\r\n\r\n        papersByOwner[msg.sender].push(paperId); // Add the paper ID to the list of papers owned by the author\r\n\r\n        emit PaperUploaded(paperId, msg.sender, title, contentHash, accessFee, keywords);\r\n    }\r\n\r\n    // Function to access a paper by paying the access fee\r\n    function accessPaper(uint256 paperId) external {\r\n        require(papers[paperId].exists, \"Paper does not exist\");\r\n        require(!paperAccessed[paperId][msg.sender], \"User already has access to this paper\");\r\n\r\n        if (papers[paperId].accessFee > 0) {\r\n            require(token.transferFrom(msg.sender, papers[paperId].author, papers[paperId].accessFee), \"Token transfer failed\");\r\n            paperAccessFees[paperId] = paperAccessFees[paperId] + papers[paperId].accessFee; // Add the fee to the total access fees\r\n        }\r\n\r\n        paperAccessed[paperId][msg.sender] = true; // Mark the paper as accessed by the user\r\n\r\n        emit PaperAccessed(paperId, msg.sender, papers[paperId].accessFee);\r\n    }\r\n\r\n    // Function to submit a contribution to a paper\r\n    function submitContribution(uint256 paperId, string memory changesHash, uint256 stakeAmount) external {\r\n        require(papers[paperId].exists, \"Paper does not exist\");\r\n        require(token.transferFrom(msg.sender, address(this), stakeAmount), \"Token transfer failed\");\r\n\r\n        uint256 contributionIndex = contributions[paperId].length; // Get the index for the new contribution\r\n\r\n        contributions[paperId].push(Contribution({\r\n            contributor: msg.sender,\r\n            changesHash: changesHash,\r\n            approved: false,\r\n            stakeAmount: stakeAmount\r\n        }));\r\n\r\n        userContributionCount[msg.sender]++; // Increment the contribution count for the user\r\n\r\n        emit ContributionSubmitted(paperId, contributionIndex, msg.sender, changesHash, stakeAmount);\r\n    }\r\n\r\n    // Function to approve a contribution to a paper\r\n    function approveContribution(uint256 paperId, uint256 contributionIndex) external {\r\n        require(papers[paperId].exists, \"Paper does not exist\");\r\n        require(msg.sender == papers[paperId].author, \"Only the author can approve contributions\");\r\n        require(contributionIndex < contributions[paperId].length, \"Invalid contribution index\");\r\n        require(!contributions[paperId][contributionIndex].approved, \"Contribution already approved\");\r\n\r\n        Contribution storage contribution = contributions[paperId][contributionIndex];\r\n        uint256 rewardAmount = contribution.stakeAmount + (\r\n            paperAccessFees[paperId] * 10 / 100 // Reward includes 10% of the access fees earned by the paper\r\n        );\r\n\r\n        require(token.transfer(contribution.contributor, rewardAmount), \"Token transfer failed\");\r\n\r\n        // Create a new paper with the updated content\r\n        uint256 newPaperId = nextPaperId;\r\n        nextPaperId++;\r\n\r\n        papers[newPaperId] = Paper({\r\n            author: msg.sender,\r\n            title: papers[paperId].title, // Keep the title the same\r\n            contentHash: contribution.changesHash,\r\n            accessFee: papers[paperId].accessFee, // Keep the access fee the same\r\n            keywords: papers[paperId].keywords, // Keep the keywords the same\r\n            exists: true,\r\n            parentPaperId: paperId // Reference to the original paper\r\n        });\r\n\r\n        papersByOwner[msg.sender].push(newPaperId); // Add the new paper ID to the list of papers owned by the author\r\n\r\n        contribution.approved = true; // Mark the contribution as approved\r\n        paperAccessed[newPaperId][papers[paperId].author] = true;\r\n\r\n        emit ContributionApproved(paperId, newPaperId, contributionIndex, contribution.contributor, rewardAmount);\r\n        emit PaperUpdated(newPaperId, contribution.changesHash); // Emit event for new paper\r\n    }\r\n\r\n    // Function to get a list of all papers\r\n    function getPapers() external view returns (Paper[] memory) {\r\n        Paper[] memory allPapers = new Paper[](nextPaperId - 1);\r\n        for (uint256 i = 1; i < nextPaperId; i++) {\r\n            allPapers[i - 1] = papers[i];\r\n        }\r\n        return allPapers;\r\n    }\r\n\r\n    // Function to get a list of papers owned by a specific address\r\n    function getPapersByOwnerAddress(address owner) external view returns (Paper[] memory) {\r\n        uint256[] memory paperIds = papersByOwner[owner];\r\n        Paper[] memory ownerPapers = new Paper[](paperIds.length);\r\n        for (uint256 i = 0; i < paperIds.length; i++) {\r\n            ownerPapers[i] = papers[paperIds[i]];\r\n        }\r\n        return ownerPapers;\r\n    }\r\n\r\n    // Function to get a list of contributions for a specific paper\r\n    function getContributions(uint256 paperId) external view returns (Contribution[] memory) {\r\n        return contributions[paperId];\r\n    }\r\n\r\n    // Function to get a list of papers accessed by a specific user\r\n    function getPapersAccessedByUser(address user) external view returns (Paper[] memory) {\r\n        uint256[] memory paperIds = new uint256[](nextPaperId - 1);\r\n        uint256 count = 0;\r\n\r\n        for (uint256 i = 1; i < nextPaperId; i++) {\r\n            if (paperAccessed[i][user]) {\r\n                paperIds[count] = i;\r\n                count++;\r\n            }\r\n        }\r\n\r\n        Paper[] memory accessedPapers = new Paper[](count);\r\n        for (uint256 i = 0; i < count; i++) {\r\n            accessedPapers[i] = papers[paperIds[i]];\r\n        }\r\n\r\n        return accessedPapers;\r\n    }\r\n\r\n    // Function to get the number of contributions made by a specific user\r\n    function getUserContributionCount(address user) external view returns (uint256) {\r\n        return userContributionCount[user];\r\n    }\r\n    \r\n    // Function to get paper details by paper ID\r\n    function getPaperById(uint256 paperId) external view returns (\r\n        address author,\r\n        string memory title,\r\n        string memory contentHash,\r\n        uint256 accessFee,\r\n        string[] memory keywords\r\n    ) {\r\n        require(papers[paperId].exists, \"Paper does not exist\");\r\n\r\n        Paper storage paper = papers[paperId];\r\n        return (\r\n            paper.author,\r\n            paper.title,\r\n            paper.contentHash,\r\n            paper.accessFee,\r\n            paper.keywords\r\n        );\r\n    }\r\n\r\n    // Function to get the original paper details (the root paper)\r\n    function getOriginalPaper(uint256 paperId) external view returns (\r\n        address author,\r\n        string memory title,\r\n        string memory contentHash,\r\n        uint256 accessFee,\r\n        string[] memory keywords\r\n    ) {\r\n        require(papers[paperId].exists, \"Paper does not exist\");\r\n\r\n        uint256 currentId = paperId;\r\n        while (papers[currentId].parentPaperId != 0) {\r\n            currentId = papers[currentId].parentPaperId; // Traverse up the chain to find the original paper\r\n        }\r\n\r\n        Paper storage originalPaper = papers[currentId];\r\n        return (\r\n            originalPaper.author,\r\n            originalPaper.title,\r\n            originalPaper.contentHash,\r\n            originalPaper.accessFee,\r\n            originalPaper.keywords\r\n        );\r\n    }\r\n}\r\n\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/MedicalResearch.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/MedicalResearch.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[136],"IERC20Errors":[41],"IERC721Errors":[89]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"138:139:0","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":41,"linearizedBaseContracts":[41],"name":"IERC20Errors","nameLocation":"288:12:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"307:309:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":11,"name":"ERC20InsufficientBalance","nameLocation":"627:24:0","nodeType":"ErrorDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"sender","nameLocation":"660:6:0","nodeType":"VariableDeclaration","scope":11,"src":"652:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"balance","nameLocation":"676:7:0","nodeType":"VariableDeclaration","scope":11,"src":"668:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"needed","nameLocation":"693:6:0","nodeType":"VariableDeclaration","scope":11,"src":"685:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:0"},"src":"621:80:0"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"707:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":16,"name":"ERC20InvalidSender","nameLocation":"870:18:0","nodeType":"ErrorDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"sender","nameLocation":"897:6:0","nodeType":"VariableDeclaration","scope":16,"src":"889:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:0"},"src":"864:41:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"911:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":21,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:0","nodeType":"ErrorDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:0","nodeType":"VariableDeclaration","scope":21,"src":"1102:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:0"},"src":"1075:45:0"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1126:345:0","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":30,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"spender","nameLocation":"1517:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1509:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:0","nodeType":"VariableDeclaration","scope":30,"src":"1526:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"needed","nameLocation":"1553:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1545:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:0"},"src":"1476:85:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1567:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":35,"name":"ERC20InvalidApprover","nameLocation":"1752:20:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"approver","nameLocation":"1781:8:0","nodeType":"VariableDeclaration","scope":35,"src":"1773:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:0"},"src":"1746:45:0"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1797:195:0","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":40,"name":"ERC20InvalidSpender","nameLocation":"2003:19:0","nodeType":"ErrorDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"spender","nameLocation":"2031:7:0","nodeType":"VariableDeclaration","scope":40,"src":"2023:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:0"},"src":"1997:43:0"}],"scope":137,"src":"278:1764:0","usedErrors":[11,16,21,30,35,40],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2044:141:0","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":89,"linearizedBaseContracts":[89],"name":"IERC721Errors","nameLocation":"2196:13:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2216:219:0","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":47,"name":"ERC721InvalidOwner","nameLocation":"2446:18:0","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"owner","nameLocation":"2473:5:0","nodeType":"VariableDeclaration","scope":47,"src":"2465:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:0"},"src":"2440:40:0"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2486:132:0","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":52,"name":"ERC721NonexistentToken","nameLocation":"2629:22:0","nodeType":"ErrorDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:0","nodeType":"VariableDeclaration","scope":52,"src":"2652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:0"},"src":"2623:46:0"},{"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2675:289:0","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":61,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:0","nodeType":"ErrorDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"sender","nameLocation":"3004:6:0","nodeType":"VariableDeclaration","scope":61,"src":"2996:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:0","nodeType":"VariableDeclaration","scope":61,"src":"3012:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"owner","nameLocation":"3037:5:0","nodeType":"VariableDeclaration","scope":61,"src":"3029:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:0"},"src":"2969:75:0"},{"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"3050:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":66,"name":"ERC721InvalidSender","nameLocation":"3213:19:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"sender","nameLocation":"3241:6:0","nodeType":"VariableDeclaration","scope":66,"src":"3233:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:0"},"src":"3207:42:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"3255:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":71,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:0","nodeType":"ErrorDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3447:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:0"},"src":"3419:46:0"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3471:247:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":78,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"operator","nameLocation":"3764:8:0","nodeType":"VariableDeclaration","scope":78,"src":"3756:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:0","nodeType":"VariableDeclaration","scope":78,"src":"3774:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:0"},"src":"3723:68:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"3797:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":83,"name":"ERC721InvalidApprover","nameLocation":"3982:21:0","nodeType":"ErrorDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"approver","nameLocation":"4012:8:0","nodeType":"VariableDeclaration","scope":83,"src":"4004:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:0"},"src":"3976:46:0"},{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"4028:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":88,"name":"ERC721InvalidOperator","nameLocation":"4236:21:0","nodeType":"ErrorDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"operator","nameLocation":"4266:8:0","nodeType":"VariableDeclaration","scope":88,"src":"4258:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:0"},"src":"4230:46:0"}],"scope":137,"src":"2186:2092:0","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"4280:143:0","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136],"name":"IERC1155Errors","nameLocation":"4434:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"4455:361:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":101,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:0","nodeType":"ErrorDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"sender","nameLocation":"4862:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4854:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"balance","nameLocation":"4878:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4870:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"needed","nameLocation":"4895:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4887:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4903:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:0"},"src":"4821:99:0"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"4926:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":106,"name":"ERC1155InvalidSender","nameLocation":"5089:20:0","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"sender","nameLocation":"5118:6:0","nodeType":"VariableDeclaration","scope":106,"src":"5110:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:0"},"src":"5083:43:0"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5132:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":111,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:0","nodeType":"ErrorDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:0","nodeType":"VariableDeclaration","scope":111,"src":"5325:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:0"},"src":"5296:47:0"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"5349:256:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":118,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:0","nodeType":"ErrorDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"operator","nameLocation":"5653:8:0","nodeType":"VariableDeclaration","scope":118,"src":"5645:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"owner","nameLocation":"5671:5:0","nodeType":"VariableDeclaration","scope":118,"src":"5663:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:0"},"src":"5610:68:0"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"5684:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":123,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:0","nodeType":"ErrorDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"approver","nameLocation":"5900:8:0","nodeType":"VariableDeclaration","scope":123,"src":"5892:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:0"},"src":"5863:47:0"},{"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5916:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":128,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:0","nodeType":"ErrorDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"operator","nameLocation":"6155:8:0","nodeType":"VariableDeclaration","scope":128,"src":"6147:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:0"},"src":"6118:47:0"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"6171:280:0","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":135,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:0","nodeType":"ErrorDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:0","nodeType":"VariableDeclaration","scope":135,"src":"6488:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:0","nodeType":"VariableDeclaration","scope":135,"src":"6507:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:0"},"src":"6456:73:0"}],"scope":137,"src":"4424:2107:0","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[]}],"src":"112:6420:0"},"id":0},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":730,"src":"131:36:1","symbolAliases":[{"foreign":{"id":139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"139:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":756,"src":"168:63:1","symbolAliases":[{"foreign":{"id":141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"176:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":786,"src":"232:48:1","symbolAliases":[{"foreign":{"id":143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"240:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":137,"src":"281:65:1","symbolAliases":[{"foreign":{"id":145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"289:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":148,"name":"Context","nameLocations":["1428:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":785,"src":"1428:7:1"},"id":149,"nodeType":"InheritanceSpecifier","src":"1428:7:1"},{"baseName":{"id":150,"name":"IERC20","nameLocations":["1437:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1437:6:1"},"id":151,"nodeType":"InheritanceSpecifier","src":"1437:6:1"},{"baseName":{"id":152,"name":"IERC20Metadata","nameLocations":["1445:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"1445:14:1"},"id":153,"nodeType":"InheritanceSpecifier","src":"1445:14:1"},{"baseName":{"id":154,"name":"IERC20Errors","nameLocations":["1461:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1461:12:1"},"id":155,"nodeType":"InheritanceSpecifier","src":"1461:12:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"348:1052:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,41,755,729,785],"name":"ERC20","nameLocation":"1419:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":159,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:1","nodeType":"VariableDeclaration","scope":651,"src":"1480:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":158,"keyName":"account","keyNameLocation":"1496:7:1","keyType":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":165,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:1","nodeType":"VariableDeclaration","scope":651,"src":"1540:83:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":164,"keyName":"account","keyNameLocation":"1556:7:1","keyType":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":163,"keyName":"spender","keyNameLocation":"1583:7:1","keyType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:1","nodeType":"VariableDeclaration","scope":651,"src":"1630:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":169,"mutability":"mutable","name":"_name","nameLocation":"1680:5:1","nodeType":"VariableDeclaration","scope":651,"src":"1665:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":168,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":171,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:1","nodeType":"VariableDeclaration","scope":651,"src":"1691:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":170,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":187,"nodeType":"Block","src":"1952:57:1","statements":[{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1962:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1970:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":182,"nodeType":"ExpressionStatement","src":"1962:13:1"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"1985:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1995:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":186,"nodeType":"ExpressionStatement","src":"1985:17:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"1720:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"name_","nameLocation":"1922:5:1","nodeType":"VariableDeclaration","scope":188,"src":"1908:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":173,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:1","nodeType":"VariableDeclaration","scope":188,"src":"1929:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":175,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:1"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1952:0:1"},"scope":651,"src":"1896:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[742],"body":{"id":196,"nodeType":"Block","src":"2134:29:1","statements":[{"expression":{"id":194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"2151:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"2144:12:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"2015:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"2087:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"2119:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":191,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:1"},"scope":651,"src":"2074:89:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[748],"body":{"id":205,"nodeType":"Block","src":"2338:31:1","statements":[{"expression":{"id":203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2355:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":202,"id":204,"nodeType":"Return","src":"2348:14:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2169:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"2291:2:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"2323:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:1"},"scope":651,"src":"2276:93:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":214,"nodeType":"Block","src":"3058:26:1","statements":[{"expression":{"hexValue":"3138","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":211,"id":213,"nodeType":"Return","src":"3068:9:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2375:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"3019:2:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"3051:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:1"},"scope":651,"src":"3002:82:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[678],"body":{"id":223,"nodeType":"Block","src":"3205:36:1","statements":[{"expression":{"id":221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3222:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":220,"id":222,"nodeType":"Return","src":"3215:19:1"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"3090:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"3164:2:1"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"3196:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:1"},"scope":651,"src":"3144:97:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[686],"body":{"id":236,"nodeType":"Block","src":"3373:42:1","statements":[{"expression":{"baseExpression":{"id":232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3390:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":234,"indexExpression":{"id":233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3400:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":231,"id":235,"nodeType":"Return","src":"3383:25:1"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"3247:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:1","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"account","nameLocation":"3326:7:1","nodeType":"VariableDeclaration","scope":237,"src":"3318:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"3364:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:1"},"scope":651,"src":"3299:116:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[696],"body":{"id":260,"nodeType":"Block","src":"3685:103:1","statements":[{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"owner","nameLocation":"3703:5:1","nodeType":"VariableDeclaration","scope":260,"src":"3695:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"3711:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:1"},{"expression":{"arguments":[{"id":253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3743:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3750:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3754:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"3733:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"3733:27:1"},{"expression":{"hexValue":"74727565","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":246,"id":259,"nodeType":"Return","src":"3770:11:1"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"3421:184:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"to","nameLocation":"3636:2:1","nodeType":"VariableDeclaration","scope":261,"src":"3628:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"value","nameLocation":"3648:5:1","nodeType":"VariableDeclaration","scope":261,"src":"3640:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":261,"src":"3679:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:1"},"scope":651,"src":"3610:178:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[706],"body":{"id":277,"nodeType":"Block","src":"3935:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"3952:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":273,"indexExpression":{"id":272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3964:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":275,"indexExpression":{"id":274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3971:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":270,"id":276,"nodeType":"Return","src":"3945:34:1"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3794:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"3873:5:1","nodeType":"VariableDeclaration","scope":278,"src":"3865:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"spender","nameLocation":"3888:7:1","nodeType":"VariableDeclaration","scope":278,"src":"3880:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"3926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:1"},"scope":651,"src":"3846:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[716],"body":{"id":301,"nodeType":"Block","src":"4372:107:1","statements":[{"assignments":[289],"declarations":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"4390:5:1","nodeType":"VariableDeclaration","scope":301,"src":"4382:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4398:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:1"},{"expression":{"arguments":[{"id":294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"4429:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4436:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4445:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":542,"src":"4420:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"4420:31:1"},{"expression":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":287,"id":300,"nodeType":"Return","src":"4461:11:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"3992:296:1","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"spender","nameLocation":"4318:7:1","nodeType":"VariableDeclaration","scope":302,"src":"4310:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"value","nameLocation":"4335:5:1","nodeType":"VariableDeclaration","scope":302,"src":"4327:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"4366:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:1"},"scope":651,"src":"4293:186:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[728],"body":{"id":333,"nodeType":"Block","src":"5132:151:1","statements":[{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"5150:7:1","nodeType":"VariableDeclaration","scope":333,"src":"5142:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"5160:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:1"},{"expression":{"arguments":[{"id":320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5198:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5204:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5213:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"5182:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"5182:37:1"},{"expression":{"arguments":[{"id":326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5239:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"5245:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5249:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"5229:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"5229:26:1"},{"expression":{"hexValue":"74727565","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":313,"id":332,"nodeType":"Return","src":"5265:11:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"4485:549:1","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:1","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"5069:4:1","nodeType":"VariableDeclaration","scope":334,"src":"5061:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"5083:2:1","nodeType":"VariableDeclaration","scope":334,"src":"5075:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"5095:5:1","nodeType":"VariableDeclaration","scope":334,"src":"5087:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:1"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"5126:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:1"},"scope":651,"src":"5039:244:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":380,"nodeType":"Block","src":"5725:231:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5739:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:1","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"5735:86:1","trueBody":{"id":357,"nodeType":"Block","src":"5759:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:1","typeDescriptions":{}}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"5780:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"RevertStatement","src":"5773:37:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5834:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:1","typeDescriptions":{}}},"id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"5830:86:1","trueBody":{"id":372,"nodeType":"Block","src":"5852:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:1","typeDescriptions":{}}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"5873:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":371,"nodeType":"RevertStatement","src":"5866:39:1"}]}},{"expression":{"arguments":[{"id":375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5933:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5939:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5943:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5925:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":379,"nodeType":"ExpressionStatement","src":"5925:24:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"5289:362:1","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"from","nameLocation":"5683:4:1","nodeType":"VariableDeclaration","scope":381,"src":"5675:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"5697:2:1","nodeType":"VariableDeclaration","scope":381,"src":"5689:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"value","nameLocation":"5709:5:1","nodeType":"VariableDeclaration","scope":381,"src":"5701:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:1"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"5725:0:1"},"scope":651,"src":"5656:300:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"6346:1032:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6360:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:1","typeDescriptions":{}}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":428,"nodeType":"Block","src":"6534:362:1","statements":[{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:1","nodeType":"VariableDeclaration","scope":428,"src":"6548:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":407,"initialValue":{"baseExpression":{"id":404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6570:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":406,"indexExpression":{"id":405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6580:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6603:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6617:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":418,"nodeType":"IfStatement","src":"6599:115:1","trueBody":{"id":417,"nodeType":"Block","src":"6624:90:1","statements":[{"errorCall":{"arguments":[{"id":412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6674:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6680:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6693:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"6649:24:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"RevertStatement","src":"6642:57:1"}]}},{"id":427,"nodeType":"UncheckedBlock","src":"6727:159:1","statements":[{"expression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6834:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"id":420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6844:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6852:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6866:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":426,"nodeType":"ExpressionStatement","src":"6834:37:1"}]}]},"id":429,"nodeType":"IfStatement","src":"6356:540:1","trueBody":{"id":401,"nodeType":"Block","src":"6380:148:1","statements":[{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6496:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6512:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"6496:21:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6910:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:1","typeDescriptions":{}}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":449,"nodeType":"Block","src":"7125:206:1","statements":[{"id":448,"nodeType":"UncheckedBlock","src":"7139:182:1","statements":[{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"7284:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":444,"indexExpression":{"id":443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7294:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7301:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"nodeType":"ExpressionStatement","src":"7284:22:1"}]}]},"id":450,"nodeType":"IfStatement","src":"6906:425:1","trueBody":{"id":441,"nodeType":"Block","src":"6928:191:1","statements":[{"id":440,"nodeType":"UncheckedBlock","src":"6942:167:1","statements":[{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"7073:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7089:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"7073:21:1"}]}]}},{"eventCall":{"arguments":[{"id":452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7355:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7361:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7365:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7346:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"EmitStatement","src":"7341:30:1"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5962:304:1","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"from","nameLocation":"6296:4:1","nodeType":"VariableDeclaration","scope":458,"src":"6288:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"to","nameLocation":"6310:2:1","nodeType":"VariableDeclaration","scope":458,"src":"6302:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"value","nameLocation":"6322:5:1","nodeType":"VariableDeclaration","scope":458,"src":"6314:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"6346:0:1"},"scope":651,"src":"6271:1107:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"7777:152:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7791:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:1","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"IfStatement","src":"7787:91:1","trueBody":{"id":479,"nodeType":"Block","src":"7814:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:1","typeDescriptions":{}}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"7835:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"RevertStatement","src":"7828:39:1"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:1","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7907:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7916:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7887:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7887:35:1"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"7384:332:1","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"account","nameLocation":"7744:7:1","nodeType":"VariableDeclaration","scope":491,"src":"7736:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"value","nameLocation":"7761:5:1","nodeType":"VariableDeclaration","scope":491,"src":"7753:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:1"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7777:0:1"},"scope":651,"src":"7721:208:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":523,"nodeType":"Block","src":"8303:150:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8317:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:1","typeDescriptions":{}}},"id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"IfStatement","src":"8313:89:1","trueBody":{"id":512,"nodeType":"Block","src":"8340:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:1","typeDescriptions":{}}},"id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"8361:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"RevertStatement","src":"8354:37:1"}]}},{"expression":{"arguments":[{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8419:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:1","typeDescriptions":{}}},"id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"8440:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"8411:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"8411:35:1"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"7935:307:1","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:1","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"account","nameLocation":"8270:7:1","nodeType":"VariableDeclaration","scope":524,"src":"8262:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"value","nameLocation":"8287:5:1","nodeType":"VariableDeclaration","scope":524,"src":"8279:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:1"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"8303:0:1"},"scope":651,"src":"8247:206:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":541,"nodeType":"Block","src":"9063:54:1","statements":[{"expression":{"arguments":[{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"9082:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"9089:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"9098:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"9073:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"9073:37:1"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"8459:525:1","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:1","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"9015:5:1","nodeType":"VariableDeclaration","scope":542,"src":"9007:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"9030:7:1","nodeType":"VariableDeclaration","scope":542,"src":"9022:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"value","nameLocation":"9047:5:1","nodeType":"VariableDeclaration","scope":542,"src":"9039:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:1"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"9063:0:1"},"scope":651,"src":"8989:128:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"10047:334:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10061:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:1","typeDescriptions":{}}},"id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":568,"nodeType":"IfStatement","src":"10057:89:1","trueBody":{"id":567,"nodeType":"Block","src":"10082:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:1","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"10103:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"RevertStatement","src":"10096:39:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10159:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:1","typeDescriptions":{}}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":583,"nodeType":"IfStatement","src":"10155:90:1","trueBody":{"id":582,"nodeType":"Block","src":"10182:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:1","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"10203:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"RevertStatement","src":"10196:38:1"}]}},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"10254:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":587,"indexExpression":{"id":585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10266:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":588,"indexExpression":{"id":586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10273:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10284:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"10254:35:1"},{"condition":{"id":592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"10303:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":600,"nodeType":"IfStatement","src":"10299:76:1","trueBody":{"id":599,"nodeType":"Block","src":"10314:61:1","statements":[{"eventCall":{"arguments":[{"id":594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10342:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10349:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10358:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10333:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"EmitStatement","src":"10328:36:1"}]}}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"9123:821:1","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"owner","nameLocation":"9975:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9967:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"spender","nameLocation":"9990:7:1","nodeType":"VariableDeclaration","scope":602,"src":"9982:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"value","nameLocation":"10007:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9999:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:1","nodeType":"VariableDeclaration","scope":602,"src":"10014:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"10047:0:1"},"scope":651,"src":"9949:432:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":649,"nodeType":"Block","src":"10752:388:1","statements":[{"assignments":[613],"declarations":[{"constant":false,"id":613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:1","nodeType":"VariableDeclaration","scope":649,"src":"10762:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":618,"initialValue":{"arguments":[{"id":615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10799:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10806:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"10789:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10828:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:1","memberName":"max","nodeType":"MemberAccess","src":"10848:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":648,"nodeType":"IfStatement","src":"10824:310:1","trueBody":{"id":647,"nodeType":"Block","src":"10867:267:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10885:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10904:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"10881:130:1","trueBody":{"id":635,"nodeType":"Block","src":"10911:100:1","statements":[{"errorCall":{"arguments":[{"id":630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10963:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10972:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10990:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"10936:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"10929:67:1"}]}},{"id":646,"nodeType":"UncheckedBlock","src":"11024:100:1","statements":[{"expression":{"arguments":[{"id":638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"11061:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"11068:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"11077:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"11096:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"11052:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"11052:57:1"}]}]}}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"10387:271:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"10696:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10688:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"spender","nameLocation":"10711:7:1","nodeType":"VariableDeclaration","scope":650,"src":"10703:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"value","nameLocation":"10728:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10720:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:1"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"10752:0:1"},"scope":651,"src":"10663:477:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"1401:9741:1","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"105:11038:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[729]},"id":730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"132:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":729,"linearizedBaseContracts":[729],"name":"IERC20","nameLocation":"213:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"226:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":663,"name":"Transfer","nameLocation":"395:8:2","nodeType":"EventDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:2","nodeType":"VariableDeclaration","scope":663,"src":"404:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:2","nodeType":"VariableDeclaration","scope":663,"src":"426:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:2","nodeType":"VariableDeclaration","scope":663,"src":"446:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:2"},"src":"389:72:2"},{"anonymous":false,"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"467:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":672,"name":"Approval","nameLocation":"626:8:2","nodeType":"EventDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:2","nodeType":"VariableDeclaration","scope":672,"src":"635:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:2","nodeType":"VariableDeclaration","scope":672,"src":"658:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:2","nodeType":"VariableDeclaration","scope":672,"src":"683:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:2"},"src":"620:78:2"},{"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"704:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":729,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"835:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:2","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"account","nameLocation":"938:7:2","nodeType":"VariableDeclaration","scope":686,"src":"930:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:2"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"970:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:2"},"scope":729,"src":"911:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"985:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"to","nameLocation":"1229:2:2","nodeType":"VariableDeclaration","scope":696,"src":"1221:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"value","nameLocation":"1241:5:2","nodeType":"VariableDeclaration","scope":696,"src":"1233:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:2"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"1266:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:2"},"scope":729,"src":"1203:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1278:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:2","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"owner","nameLocation":"1574:5:2","nodeType":"VariableDeclaration","scope":706,"src":"1566:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"spender","nameLocation":"1589:7:2","nodeType":"VariableDeclaration","scope":706,"src":"1581:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"1621:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:2"},"scope":729,"src":"1547:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"1636:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:2","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"spender","nameLocation":"2333:7:2","nodeType":"VariableDeclaration","scope":716,"src":"2325:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"value","nameLocation":"2350:5:2","nodeType":"VariableDeclaration","scope":716,"src":"2342:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:2"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"2375:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:2"},"scope":729,"src":"2308:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"2387:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:2","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"from","nameLocation":"2719:4:2","nodeType":"VariableDeclaration","scope":728,"src":"2711:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"to","nameLocation":"2733:2:2","nodeType":"VariableDeclaration","scope":728,"src":"2725:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"value","nameLocation":"2745:5:2","nodeType":"VariableDeclaration","scope":728,"src":"2737:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"2770:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":725,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:2"},"scope":729,"src":"2689:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":730,"src":"203:2575:2","usedErrors":[],"usedEvents":[663,672]}],"src":"106:2673:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[729],"IERC20Metadata":[755]},"id":756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":756,"sourceUnit":730,"src":"151:37:3","symbolAliases":[{"foreign":{"id":732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"159:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":735,"name":"IERC20","nameLocations":["305:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"305:6:3"},"id":736,"nodeType":"InheritanceSpecifier","src":"305:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"190:86:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":755,"linearizedBaseContracts":[755,729],"name":"IERC20Metadata","nameLocation":"287:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"318:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:3","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"390:2:3"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"416:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":739,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:3"},"scope":755,"src":"377:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"437:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"513:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"539:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:3"},"scope":755,"src":"498:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"560:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:3","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"647:2:3"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"673:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":751,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:3"},"scope":755,"src":"630:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":756,"src":"277:405:3","usedErrors":[],"usedEvents":[663,672]}],"src":"125:558:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[785]},"id":786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"127:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":785,"linearizedBaseContracts":[785],"name":"Context","nameLocation":"642:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":766,"nodeType":"Block","src":"718:34:4","statements":[{"expression":{"expression":{"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:4","memberName":"sender","nodeType":"MemberAccess","src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":762,"id":765,"nodeType":"Return","src":"728:17:4"}]},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:4","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"675:2:4"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"709:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:4"},"scope":785,"src":"656:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"825:32:4","statements":[{"expression":{"expression":{"id":772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:4","memberName":"data","nodeType":"MemberAccess","src":"842:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":771,"id":774,"nodeType":"Return","src":"835:15:4"}]},"id":776,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:4","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"775:2:4"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"809:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":769,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:4"},"scope":785,"src":"758:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":783,"nodeType":"Block","src":"935:25:4","statements":[{"expression":{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":780,"id":782,"nodeType":"Return","src":"945:8:4"}]},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:4","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"892:2:4"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:4"},"scope":785,"src":"863:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":786,"src":"624:338:4","usedErrors":[],"usedEvents":[]}],"src":"101:862:4"},"id":4},"contracts/MedicalResearch.sol":{"ast":{"absolutePath":"contracts/MedicalResearch.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755],"MedicalResearch":[1606]},"id":1607,"nodeType":"SourceUnit","nodes":[{"id":787,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"0:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":788,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1607,"sourceUnit":652,"src":"27:55:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MedicalResearch","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1606,"linearizedBaseContracts":[1606],"name":"MedicalResearch","nameLocation":"152:15:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fc0c546a","id":791,"mutability":"mutable","name":"token","nameLocation":"245:5:5","nodeType":"VariableDeclaration","scope":1606,"src":"232:18:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"},"typeName":{"id":790,"nodeType":"UserDefinedTypeName","pathNode":{"id":789,"name":"ERC20","nameLocations":["232:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"232:5:5"},"referencedDeclaration":651,"src":"232:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"visibility":"public"},{"canonicalName":"MedicalResearch.Paper","id":807,"members":[{"constant":false,"id":793,"mutability":"mutable","name":"author","nameLocation":"336:6:5","nodeType":"VariableDeclaration","scope":807,"src":"328:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"328:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"title","nameLocation":"393:5:5","nodeType":"VariableDeclaration","scope":807,"src":"386:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":794,"name":"string","nodeType":"ElementaryTypeName","src":"386:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":797,"mutability":"mutable","name":"contentHash","nameLocation":"438:11:5","nodeType":"VariableDeclaration","scope":807,"src":"431:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":796,"name":"string","nodeType":"ElementaryTypeName","src":"431:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":799,"mutability":"mutable","name":"accessFee","nameLocation":"511:9:5","nodeType":"VariableDeclaration","scope":807,"src":"503:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"503:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"keywords","nameLocation":"577:8:5","nodeType":"VariableDeclaration","scope":807,"src":"568:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":800,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":801,"nodeType":"ArrayTypeName","src":"568:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"exists","nameLocation":"643:6:5","nodeType":"VariableDeclaration","scope":807,"src":"638:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":803,"name":"bool","nodeType":"ElementaryTypeName","src":"638:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"parentPaperId","nameLocation":"708:13:5","nodeType":"VariableDeclaration","scope":807,"src":"700:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"700:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Paper","nameLocation":"311:5:5","nodeType":"StructDefinition","scope":1606,"src":"304:469:5","visibility":"public"},{"canonicalName":"MedicalResearch.Contribution","id":816,"members":[{"constant":false,"id":809,"mutability":"mutable","name":"contributor","nameLocation":"874:11:5","nodeType":"VariableDeclaration","scope":816,"src":"866:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"866:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":811,"mutability":"mutable","name":"changesHash","nameLocation":"933:11:5","nodeType":"VariableDeclaration","scope":816,"src":"926:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":810,"name":"string","nodeType":"ElementaryTypeName","src":"926:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"approved","nameLocation":"988:8:5","nodeType":"VariableDeclaration","scope":816,"src":"983:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":812,"name":"bool","nodeType":"ElementaryTypeName","src":"983:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"stakeAmount","nameLocation":"1067:11:5","nodeType":"VariableDeclaration","scope":816,"src":"1059:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1059:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Contribution","nameLocation":"842:12:5","nodeType":"StructDefinition","scope":1606,"src":"835:299:5","visibility":"public"},{"constant":false,"id":818,"mutability":"mutable","name":"nextPaperId","nameLocation":"1158:11:5","nodeType":"VariableDeclaration","scope":1606,"src":"1142:27:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1142:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":820,"mutability":"mutable","name":"nextContributionIndex","nameLocation":"1232:21:5","nodeType":"VariableDeclaration","scope":1606,"src":"1216:37:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"5e775a27","id":825,"mutability":"mutable","name":"papers","nameLocation":"1423:6:5","nodeType":"VariableDeclaration","scope":1606,"src":"1390:39:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper)"},"typeName":{"id":824,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":821,"name":"uint256","nodeType":"ElementaryTypeName","src":"1398:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1390:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":823,"nodeType":"UserDefinedTypeName","pathNode":{"id":822,"name":"Paper","nameLocations":["1409:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"1409:5:5"},"referencedDeclaration":807,"src":"1409:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"}}},"visibility":"public"},{"constant":false,"functionSelector":"830e28f6","id":831,"mutability":"mutable","name":"contributions","nameLocation":"1519:13:5","nodeType":"VariableDeclaration","scope":1606,"src":"1477:55:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Contribution_$816_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Contribution[])"},"typeName":{"id":830,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":826,"name":"uint256","nodeType":"ElementaryTypeName","src":"1485:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1477:34:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Contribution_$816_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Contribution[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":828,"nodeType":"UserDefinedTypeName","pathNode":{"id":827,"name":"Contribution","nameLocations":["1496:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":816,"src":"1496:12:5"},"referencedDeclaration":816,"src":"1496:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution"}},"id":829,"nodeType":"ArrayTypeName","src":"1496:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Contribution_$816_storage_$dyn_storage_ptr","typeString":"struct MedicalResearch.Contribution[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"a949dfdf","id":835,"mutability":"mutable","name":"paperAccessFees","nameLocation":"1635:15:5","nodeType":"VariableDeclaration","scope":1606,"src":"1600:50:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":834,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":832,"name":"uint256","nodeType":"ElementaryTypeName","src":"1608:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1600:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"1619:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":840,"mutability":"mutable","name":"papersByOwner","nameLocation":"1748:13:5","nodeType":"VariableDeclaration","scope":1606,"src":"1710:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":839,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1718:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1710:29:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":838,"nodeType":"ArrayTypeName","src":"1729:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"private"},{"constant":false,"functionSelector":"2c258c9e","id":846,"mutability":"mutable","name":"paperAccessed","nameLocation":"1881:13:5","nodeType":"VariableDeclaration","scope":1606,"src":"1829:65:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":845,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"1837:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1829:44:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":844,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"1856:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1848:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":843,"name":"bool","nodeType":"ElementaryTypeName","src":"1867:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"77154fde","id":850,"mutability":"mutable","name":"userContributionCount","nameLocation":"2009:21:5","nodeType":"VariableDeclaration","scope":1606,"src":"1974:56:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":849,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1974:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"1993:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"56eeaa024974e3268b1cdceef36baef0f1c89ce1f09afa010857b95d4aed2586","id":865,"name":"PaperUploaded","nameLocation":"2152:13:5","nodeType":"EventDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"indexed":false,"mutability":"mutable","name":"paperId","nameLocation":"2174:7:5","nodeType":"VariableDeclaration","scope":865,"src":"2166:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":854,"indexed":true,"mutability":"mutable","name":"author","nameLocation":"2199:6:5","nodeType":"VariableDeclaration","scope":865,"src":"2183:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"2183:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"indexed":false,"mutability":"mutable","name":"title","nameLocation":"2214:5:5","nodeType":"VariableDeclaration","scope":865,"src":"2207:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":855,"name":"string","nodeType":"ElementaryTypeName","src":"2207:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":858,"indexed":false,"mutability":"mutable","name":"contentHash","nameLocation":"2228:11:5","nodeType":"VariableDeclaration","scope":865,"src":"2221:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":857,"name":"string","nodeType":"ElementaryTypeName","src":"2221:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":860,"indexed":false,"mutability":"mutable","name":"accessFee","nameLocation":"2249:9:5","nodeType":"VariableDeclaration","scope":865,"src":"2241:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"2241:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":863,"indexed":false,"mutability":"mutable","name":"keywords","nameLocation":"2269:8:5","nodeType":"VariableDeclaration","scope":865,"src":"2260:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":861,"name":"string","nodeType":"ElementaryTypeName","src":"2260:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":862,"nodeType":"ArrayTypeName","src":"2260:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"2165:113:5"},"src":"2146:133:5"},{"anonymous":false,"eventSelector":"e17c01af799c5069ecf6fd9a231440a115adb7a1dea0306b06d8efe971a1a0b0","id":877,"name":"ContributionSubmitted","nameLocation":"2291:21:5","nodeType":"EventDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"indexed":false,"mutability":"mutable","name":"paperId","nameLocation":"2321:7:5","nodeType":"VariableDeclaration","scope":877,"src":"2313:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"2313:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":869,"indexed":false,"mutability":"mutable","name":"contributionIndex","nameLocation":"2338:17:5","nodeType":"VariableDeclaration","scope":877,"src":"2330:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"2330:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":871,"indexed":true,"mutability":"mutable","name":"contributor","nameLocation":"2373:11:5","nodeType":"VariableDeclaration","scope":877,"src":"2357:27:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"2357:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":873,"indexed":false,"mutability":"mutable","name":"changesHash","nameLocation":"2393:11:5","nodeType":"VariableDeclaration","scope":877,"src":"2386:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":872,"name":"string","nodeType":"ElementaryTypeName","src":"2386:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":875,"indexed":false,"mutability":"mutable","name":"stakeAmount","nameLocation":"2414:11:5","nodeType":"VariableDeclaration","scope":877,"src":"2406:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2312:114:5"},"src":"2285:142:5"},{"anonymous":false,"eventSelector":"09b0fc1dfdfeca1d7e9d6e25a76602e33ed913671db0f6aae33735eb74b66107","id":889,"name":"ContributionApproved","nameLocation":"2439:20:5","nodeType":"EventDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"indexed":false,"mutability":"mutable","name":"oldPaperId","nameLocation":"2468:10:5","nodeType":"VariableDeclaration","scope":889,"src":"2460:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2460:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":881,"indexed":false,"mutability":"mutable","name":"newPaperId","nameLocation":"2488:10:5","nodeType":"VariableDeclaration","scope":889,"src":"2480:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":883,"indexed":false,"mutability":"mutable","name":"contributionIndex","nameLocation":"2508:17:5","nodeType":"VariableDeclaration","scope":889,"src":"2500:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":882,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":885,"indexed":true,"mutability":"mutable","name":"contributor","nameLocation":"2543:11:5","nodeType":"VariableDeclaration","scope":889,"src":"2527:27:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"2527:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":887,"indexed":false,"mutability":"mutable","name":"rewardAmount","nameLocation":"2564:12:5","nodeType":"VariableDeclaration","scope":889,"src":"2556:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"2556:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2459:118:5"},"src":"2433:145:5"},{"anonymous":false,"eventSelector":"1442bdb26f7569db0cb308056cb26688f7aad42fc098b54920e1af1e8b67a5fc","id":897,"name":"PaperAccessed","nameLocation":"2590:13:5","nodeType":"EventDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"indexed":false,"mutability":"mutable","name":"paperId","nameLocation":"2612:7:5","nodeType":"VariableDeclaration","scope":897,"src":"2604:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2604:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":893,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2637:4:5","nodeType":"VariableDeclaration","scope":897,"src":"2621:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"2621:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":895,"indexed":false,"mutability":"mutable","name":"feePaid","nameLocation":"2651:7:5","nodeType":"VariableDeclaration","scope":897,"src":"2643:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2643:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2603:56:5"},"src":"2584:76:5"},{"anonymous":false,"eventSelector":"b97425b8ec45aa7c5ccc9b938659eb11b5502276f1eec240e61baf207824396c","id":903,"name":"PaperUpdated","nameLocation":"2672:12:5","nodeType":"EventDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"indexed":false,"mutability":"mutable","name":"newPaperId","nameLocation":"2693:10:5","nodeType":"VariableDeclaration","scope":903,"src":"2685:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"2685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":901,"indexed":false,"mutability":"mutable","name":"newContentHash","nameLocation":"2712:14:5","nodeType":"VariableDeclaration","scope":903,"src":"2705:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":900,"name":"string","nodeType":"ElementaryTypeName","src":"2705:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:43:5"},"src":"2666:62:5"},{"body":{"id":922,"nodeType":"Block","src":"2871:172:5","statements":[{"expression":{"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":908,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2882:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":910,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"2896:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":909,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"2890:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$651_$","typeString":"type(contract ERC20)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2890:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"src":"2882:28:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"id":913,"nodeType":"ExpressionStatement","src":"2882:28:5"},{"expression":{"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":914,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"2921:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2935:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2921:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":917,"nodeType":"ExpressionStatement","src":"2921:15:5"},{"expression":{"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":918,"name":"nextContributionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"2973:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2997:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2973:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":921,"nodeType":"ExpressionStatement","src":"2973:25:5"}]},"id":923,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"_tokenAddress","nameLocation":"2856:13:5","nodeType":"VariableDeclaration","scope":923,"src":"2848:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"2848:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2847:23:5"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"2871:0:5"},"scope":1606,"src":"2836:207:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":975,"nodeType":"Block","src":"3213:620:5","statements":[{"assignments":[936],"declarations":[{"constant":false,"id":936,"mutability":"mutable","name":"paperId","nameLocation":"3232:7:5","nodeType":"VariableDeclaration","scope":975,"src":"3224:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"3224:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":938,"initialValue":{"id":937,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3242:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3224:29:5"},{"expression":{"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3264:13:5","subExpression":{"id":939,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3264:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":941,"nodeType":"ExpressionStatement","src":"3264:13:5"},{"expression":{"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":942,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"3324:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":944,"indexExpression":{"id":943,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"3331:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3324:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":946,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3371:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3371:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":948,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"3403:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":949,"name":"contentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"3436:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":950,"name":"accessFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"3473:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":951,"name":"keywords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"3507:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"hexValue":"74727565","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3538:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3572:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":945,"name":"Paper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"3342:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Paper_$807_storage_ptr_$","typeString":"type(struct MedicalResearch.Paper storage pointer)"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3363:6:5","3396:5:5","3423:11:5","3462:9:5","3497:8:5","3530:6:5","3557:13:5"],"names":["author","title","contentHash","accessFee","keywords","exists","parentPaperId"],"nodeType":"FunctionCall","src":"3342:276:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"src":"3324:294:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":956,"nodeType":"ExpressionStatement","src":"3324:294:5"},{"expression":{"arguments":[{"id":962,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"3662:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":957,"name":"papersByOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"3631:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":960,"indexExpression":{"expression":{"id":958,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3645:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3649:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3645:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3631:25:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:4:5","memberName":"push","nodeType":"MemberAccess","src":"3631:30:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3631:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":964,"nodeType":"ExpressionStatement","src":"3631:39:5"},{"eventCall":{"arguments":[{"id":966,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"3764:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":967,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3773:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3777:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3773:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":969,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"3785:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":970,"name":"contentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"3792:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":971,"name":"accessFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"3805:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":972,"name":"keywords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"3816:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}],"id":965,"name":"PaperUploaded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"3750:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory,string memory,uint256,string memory[] memory)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3750:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":974,"nodeType":"EmitStatement","src":"3745:80:5"}]},"functionSelector":"a1c74be5","id":976,"implemented":true,"kind":"function","modifiers":[],"name":"uploadPaper","nameLocation":"3099:11:5","nodeType":"FunctionDefinition","parameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"title","nameLocation":"3125:5:5","nodeType":"VariableDeclaration","scope":976,"src":"3111:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":924,"name":"string","nodeType":"ElementaryTypeName","src":"3111:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"contentHash","nameLocation":"3146:11:5","nodeType":"VariableDeclaration","scope":976,"src":"3132:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":926,"name":"string","nodeType":"ElementaryTypeName","src":"3132:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"accessFee","nameLocation":"3167:9:5","nodeType":"VariableDeclaration","scope":976,"src":"3159:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"3159:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"keywords","nameLocation":"3194:8:5","nodeType":"VariableDeclaration","scope":976,"src":"3178:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":930,"name":"string","nodeType":"ElementaryTypeName","src":"3178:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":931,"nodeType":"ArrayTypeName","src":"3178:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"3110:93:5"},"returnParameters":{"id":934,"nodeType":"ParameterList","parameters":[],"src":"3213:0:5"},"scope":1606,"src":"3090:743:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1057,"nodeType":"Block","src":"3948:668:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":982,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"3967:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":984,"indexExpression":{"id":983,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"3974:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3967:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3983:6:5","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":804,"src":"3967:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506170657220646f6573206e6f74206578697374","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3991:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""},"value":"Paper does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""}],"id":981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3959:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3959:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":988,"nodeType":"ExpressionStatement","src":"3959:55:5"},{"expression":{"arguments":[{"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4033:35:5","subExpression":{"baseExpression":{"baseExpression":{"id":990,"name":"paperAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"4034:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":992,"indexExpression":{"id":991,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"4048:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4034:22:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":995,"indexExpression":{"expression":{"id":993,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4057:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4061:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4057:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4034:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5573657220616c7265616479206861732061636365737320746f2074686973207061706572","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4070:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924","typeString":"literal_string \"User already has access to this paper\""},"value":"User already has access to this paper"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924","typeString":"literal_string \"User already has access to this paper\""}],"id":989,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4025:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4025:85:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":999,"nodeType":"ExpressionStatement","src":"4025:85:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1000,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4127:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1002,"indexExpression":{"id":1001,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"4134:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4127:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4143:9:5","memberName":"accessFee","nodeType":"MemberAccess","referencedDeclaration":799,"src":"4127:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4155:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4127:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1037,"nodeType":"IfStatement","src":"4123:311:5","trueBody":{"id":1036,"nodeType":"Block","src":"4158:276:5","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":1009,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4200:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4200:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1011,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4212:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1013,"indexExpression":{"id":1012,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"4219:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4212:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4228:6:5","memberName":"author","nodeType":"MemberAccess","referencedDeclaration":793,"src":"4212:22:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1015,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4236:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1017,"indexExpression":{"id":1016,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"4243:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4236:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4252:9:5","memberName":"accessFee","nodeType":"MemberAccess","referencedDeclaration":799,"src":"4236:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1007,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"4181:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4187:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":334,"src":"4181:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4181:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572206661696c6564","id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4264:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""},"value":"Token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""}],"id":1006,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4173:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4173:115:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1022,"nodeType":"ExpressionStatement","src":"4173:115:5"},{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1023,"name":"paperAccessFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"4303:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1025,"indexExpression":{"id":1024,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"4319:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4303:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1026,"name":"paperAccessFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"4330:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1028,"indexExpression":{"id":1027,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"4346:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4330:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"baseExpression":{"id":1029,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4357:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1031,"indexExpression":{"id":1030,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"4364:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4357:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4373:9:5","memberName":"accessFee","nodeType":"MemberAccess","referencedDeclaration":799,"src":"4357:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4330:52:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4303:79:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1035,"nodeType":"ExpressionStatement","src":"4303:79:5"}]}},{"expression":{"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1038,"name":"paperAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"4446:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":1042,"indexExpression":{"id":1039,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"4460:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4446:22:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1043,"indexExpression":{"expression":{"id":1040,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4469:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4473:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4469:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4446:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4483:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4446:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1046,"nodeType":"ExpressionStatement","src":"4446:41:5"},{"eventCall":{"arguments":[{"id":1048,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"4561:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1049,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4570:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4574:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4570:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1051,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4582:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1053,"indexExpression":{"id":1052,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"4589:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4582:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4598:9:5","memberName":"accessFee","nodeType":"MemberAccess","referencedDeclaration":799,"src":"4582:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1047,"name":"PaperAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"4547:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4547:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1056,"nodeType":"EmitStatement","src":"4542:66:5"}]},"functionSelector":"df771aca","id":1058,"implemented":true,"kind":"function","modifiers":[],"name":"accessPaper","nameLocation":"3910:11:5","nodeType":"FunctionDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"paperId","nameLocation":"3930:7:5","nodeType":"VariableDeclaration","scope":1058,"src":"3922:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"3922:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3921:17:5"},"returnParameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"3948:0:5"},"scope":1606,"src":"3901:715:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1124,"nodeType":"Block","src":"4779:704:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1068,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4798:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1070,"indexExpression":{"id":1069,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"4805:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4798:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4814:6:5","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":804,"src":"4798:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506170657220646f6573206e6f74206578697374","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4822:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""},"value":"Paper does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""}],"id":1067,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4790:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4790:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1074,"nodeType":"ExpressionStatement","src":"4790:55:5"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1078,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4883:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4887:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4883:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1082,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4903:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_MedicalResearch_$1606","typeString":"contract MedicalResearch"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MedicalResearch_$1606","typeString":"contract MedicalResearch"}],"id":1081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4895:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1080,"name":"address","nodeType":"ElementaryTypeName","src":"4895:7:5","typeDescriptions":{}}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4895:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1084,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"4910:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1076,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"4864:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4870:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":334,"src":"4864:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4864:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572206661696c6564","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4924:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""},"value":"Token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""}],"id":1075,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4856:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4856:92:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"ExpressionStatement","src":"4856:92:5"},{"assignments":[1090],"declarations":[{"constant":false,"id":1090,"mutability":"mutable","name":"contributionIndex","nameLocation":"4969:17:5","nodeType":"VariableDeclaration","scope":1124,"src":"4961:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"4961:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1095,"initialValue":{"expression":{"baseExpression":{"id":1091,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"4989:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Contribution_$816_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Contribution storage ref[] storage ref)"}},"id":1093,"indexExpression":{"id":1092,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"5003:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4989:22:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Contribution_$816_storage_$dyn_storage","typeString":"struct MedicalResearch.Contribution storage ref[] storage ref"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5012:6:5","memberName":"length","nodeType":"MemberAccess","src":"4989:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4961:57:5"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1101,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5142:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5146:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5142:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1103,"name":"changesHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"5180:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"66616c7365","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5216:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":1105,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"5249:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1100,"name":"Contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"5101:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Contribution_$816_storage_ptr_$","typeString":"type(struct MedicalResearch.Contribution storage pointer)"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5129:11:5","5167:11:5","5206:8:5","5236:11:5"],"names":["contributor","changesHash","approved","stakeAmount"],"nodeType":"FunctionCall","src":"5101:171:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_memory_ptr","typeString":"struct MedicalResearch.Contribution memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Contribution_$816_memory_ptr","typeString":"struct MedicalResearch.Contribution memory"}],"expression":{"baseExpression":{"id":1096,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5073:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Contribution_$816_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Contribution storage ref[] storage ref)"}},"id":1098,"indexExpression":{"id":1097,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"5087:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5073:22:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Contribution_$816_storage_$dyn_storage","typeString":"struct MedicalResearch.Contribution storage ref[] storage ref"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5096:4:5","memberName":"push","nodeType":"MemberAccess","src":"5073:27:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Contribution_$816_storage_$dyn_storage_ptr_$_t_struct$_Contribution_$816_storage_$returns$__$attached_to$_t_array$_t_struct$_Contribution_$816_storage_$dyn_storage_ptr_$","typeString":"function (struct MedicalResearch.Contribution storage ref[] storage pointer,struct MedicalResearch.Contribution storage ref)"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:200:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"ExpressionStatement","src":"5073:200:5"},{"expression":{"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5286:35:5","subExpression":{"baseExpression":{"id":1109,"name":"userContributionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"5286:21:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1112,"indexExpression":{"expression":{"id":1110,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5308:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5312:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5308:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5286:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1114,"nodeType":"ExpressionStatement","src":"5286:35:5"},{"eventCall":{"arguments":[{"id":1116,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"5410:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1117,"name":"contributionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"5419:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1118,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5438:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5442:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5438:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1120,"name":"changesHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"5450:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1121,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"5463:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1115,"name":"ContributionSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"5388:21:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,address,string memory,uint256)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1123,"nodeType":"EmitStatement","src":"5383:92:5"}]},"functionSelector":"aa4a66dd","id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"submitContribution","nameLocation":"4686:18:5","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"paperId","nameLocation":"4713:7:5","nodeType":"VariableDeclaration","scope":1125,"src":"4705:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"4705:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"changesHash","nameLocation":"4736:11:5","nodeType":"VariableDeclaration","scope":1125,"src":"4722:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1061,"name":"string","nodeType":"ElementaryTypeName","src":"4722:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"stakeAmount","nameLocation":"4757:11:5","nodeType":"VariableDeclaration","scope":1125,"src":"4749:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"4749:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4704:65:5"},"returnParameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"4779:0:5"},"scope":1606,"src":"4677:806:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1277,"nodeType":"Block","src":"5627:1824:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1133,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5646:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1135,"indexExpression":{"id":1134,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5653:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5646:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5662:6:5","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":804,"src":"5646:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506170657220646f6573206e6f74206578697374","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5670:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""},"value":"Paper does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""}],"id":1132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5638:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5638:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1139,"nodeType":"ExpressionStatement","src":"5638:55:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1141,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5712:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5712:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":1143,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5726:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1145,"indexExpression":{"id":1144,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5733:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5726:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5742:6:5","memberName":"author","nodeType":"MemberAccess","referencedDeclaration":793,"src":"5726:22:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5712:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792074686520617574686f722063616e20617070726f766520636f6e747269627574696f6e73","id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5750:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1","typeString":"literal_string \"Only the author can approve contributions\""},"value":"Only the author can approve contributions"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1","typeString":"literal_string \"Only the author can approve contributions\""}],"id":1140,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5704:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5704:90:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1150,"nodeType":"ExpressionStatement","src":"5704:90:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1152,"name":"contributionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"5813:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":1153,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5833:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Contribution_$816_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Contribution storage ref[] storage ref)"}},"id":1155,"indexExpression":{"id":1154,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5847:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5833:22:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Contribution_$816_storage_$dyn_storage","typeString":"struct MedicalResearch.Contribution storage ref[] storage ref"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5856:6:5","memberName":"length","nodeType":"MemberAccess","src":"5833:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5813:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f6e747269627574696f6e20696e646578","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5864:28:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340","typeString":"literal_string \"Invalid contribution index\""},"value":"Invalid contribution index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340","typeString":"literal_string \"Invalid contribution index\""}],"id":1151,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5805:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5805:88:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"ExpressionStatement","src":"5805:88:5"},{"expression":{"arguments":[{"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5912:51:5","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1162,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5913:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Contribution_$816_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Contribution storage ref[] storage ref)"}},"id":1164,"indexExpression":{"id":1163,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5927:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5913:22:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Contribution_$816_storage_$dyn_storage","typeString":"struct MedicalResearch.Contribution storage ref[] storage ref"}},"id":1166,"indexExpression":{"id":1165,"name":"contributionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"5936:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5913:41:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage","typeString":"struct MedicalResearch.Contribution storage ref"}},"id":1167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5955:8:5","memberName":"approved","nodeType":"MemberAccess","referencedDeclaration":813,"src":"5913:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e747269627574696f6e20616c726561647920617070726f766564","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5965:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20","typeString":"literal_string \"Contribution already approved\""},"value":"Contribution already approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20","typeString":"literal_string \"Contribution already approved\""}],"id":1161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5904:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5904:93:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1171,"nodeType":"ExpressionStatement","src":"5904:93:5"},{"assignments":[1174],"declarations":[{"constant":false,"id":1174,"mutability":"mutable","name":"contribution","nameLocation":"6031:12:5","nodeType":"VariableDeclaration","scope":1277,"src":"6010:33:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution"},"typeName":{"id":1173,"nodeType":"UserDefinedTypeName","pathNode":{"id":1172,"name":"Contribution","nameLocations":["6010:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":816,"src":"6010:12:5"},"referencedDeclaration":816,"src":"6010:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution"}},"visibility":"internal"}],"id":1180,"initialValue":{"baseExpression":{"baseExpression":{"id":1175,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"6046:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Contribution_$816_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Contribution storage ref[] storage ref)"}},"id":1177,"indexExpression":{"id":1176,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"6060:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6046:22:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Contribution_$816_storage_$dyn_storage","typeString":"struct MedicalResearch.Contribution storage ref[] storage ref"}},"id":1179,"indexExpression":{"id":1178,"name":"contributionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"6069:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6046:41:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage","typeString":"struct MedicalResearch.Contribution storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6010:77:5"},{"assignments":[1182],"declarations":[{"constant":false,"id":1182,"mutability":"mutable","name":"rewardAmount","nameLocation":"6106:12:5","nodeType":"VariableDeclaration","scope":1277,"src":"6098:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"6098:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1194,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1183,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"6121:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution storage pointer"}},"id":1184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6134:11:5","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":815,"src":"6121:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1185,"name":"paperAccessFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"6163:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1187,"indexExpression":{"id":1186,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"6179:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6163:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6190:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6163:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6195:3:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"6163:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6148:123:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6121:150:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6098:173:5"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1198,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"6307:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution storage pointer"}},"id":1199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6320:11:5","memberName":"contributor","nodeType":"MemberAccess","referencedDeclaration":809,"src":"6307:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1200,"name":"rewardAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"6333:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1196,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"6292:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6298:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":261,"src":"6292:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572206661696c6564","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6348:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""},"value":"Token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""}],"id":1195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6284:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6284:88:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1204,"nodeType":"ExpressionStatement","src":"6284:88:5"},{"assignments":[1206],"declarations":[{"constant":false,"id":1206,"mutability":"mutable","name":"newPaperId","nameLocation":"6449:10:5","nodeType":"VariableDeclaration","scope":1277,"src":"6441:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"6441:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1208,"initialValue":{"id":1207,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"6462:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6441:32:5"},{"expression":{"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6484:13:5","subExpression":{"id":1209,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"6484:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1211,"nodeType":"ExpressionStatement","src":"6484:13:5"},{"expression":{"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1212,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"6510:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1214,"indexExpression":{"id":1213,"name":"newPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"6517:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6510:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1216,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6560:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6564:6:5","memberName":"sender","nodeType":"MemberAccess","src":"6560:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1218,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"6592:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1220,"indexExpression":{"id":1219,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"6599:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6592:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6608:5:5","memberName":"title","nodeType":"MemberAccess","referencedDeclaration":795,"src":"6592:21:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":1222,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"6668:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution storage pointer"}},"id":1223,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6681:11:5","memberName":"changesHash","nodeType":"MemberAccess","referencedDeclaration":811,"src":"6668:24:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"baseExpression":{"id":1224,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"6718:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1226,"indexExpression":{"id":1225,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"6725:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6718:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6734:9:5","memberName":"accessFee","nodeType":"MemberAccess","referencedDeclaration":799,"src":"6718:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":1228,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"6800:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1230,"indexExpression":{"id":1229,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"6807:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6800:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6816:8:5","memberName":"keywords","nodeType":"MemberAccess","referencedDeclaration":802,"src":"6800:24:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},{"hexValue":"74727565","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6877:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1233,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"6911:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1215,"name":"Paper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"6531:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Paper_$807_storage_ptr_$","typeString":"type(struct MedicalResearch.Paper storage pointer)"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6552:6:5","6585:5:5","6655:11:5","6707:9:5","6790:8:5","6869:6:5","6896:13:5"],"names":["author","title","contentHash","accessFee","keywords","exists","parentPaperId"],"nodeType":"FunctionCall","src":"6531:434:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"src":"6510:455:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1236,"nodeType":"ExpressionStatement","src":"6510:455:5"},{"expression":{"arguments":[{"id":1242,"name":"newPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"7009:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":1237,"name":"papersByOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"6978:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1240,"indexExpression":{"expression":{"id":1238,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6992:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6996:6:5","memberName":"sender","nodeType":"MemberAccess","src":"6992:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6978:25:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7004:4:5","memberName":"push","nodeType":"MemberAccess","src":"6978:30:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6978:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1244,"nodeType":"ExpressionStatement","src":"6978:42:5"},{"expression":{"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1245,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"7099:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution storage pointer"}},"id":1247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7112:8:5","memberName":"approved","nodeType":"MemberAccess","referencedDeclaration":813,"src":"7099:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7123:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7099:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1250,"nodeType":"ExpressionStatement","src":"7099:28:5"},{"expression":{"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1251,"name":"paperAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"7175:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":1257,"indexExpression":{"id":1252,"name":"newPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"7189:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7175:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1258,"indexExpression":{"expression":{"baseExpression":{"id":1253,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"7201:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1255,"indexExpression":{"id":1254,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"7208:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7201:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7217:6:5","memberName":"author","nodeType":"MemberAccess","referencedDeclaration":793,"src":"7201:22:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7175:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7227:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7175:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1261,"nodeType":"ExpressionStatement","src":"7175:56:5"},{"eventCall":{"arguments":[{"id":1263,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"7270:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1264,"name":"newPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"7279:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1265,"name":"contributionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"7291:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1266,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"7310:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution storage pointer"}},"id":1267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7323:11:5","memberName":"contributor","nodeType":"MemberAccess","referencedDeclaration":809,"src":"7310:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1268,"name":"rewardAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"7336:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1262,"name":"ContributionApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"7249:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,address,uint256)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7249:100:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1270,"nodeType":"EmitStatement","src":"7244:105:5"},{"eventCall":{"arguments":[{"id":1272,"name":"newPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"7378:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1273,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"7390:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution storage pointer"}},"id":1274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7403:11:5","memberName":"changesHash","nodeType":"MemberAccess","referencedDeclaration":811,"src":"7390:24:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1271,"name":"PaperUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"7365:12:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7365:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1276,"nodeType":"EmitStatement","src":"7360:55:5"}]},"functionSelector":"6fd91da9","id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"approveContribution","nameLocation":"5554:19:5","nodeType":"FunctionDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"paperId","nameLocation":"5582:7:5","nodeType":"VariableDeclaration","scope":1278,"src":"5574:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"5574:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1129,"mutability":"mutable","name":"contributionIndex","nameLocation":"5599:17:5","nodeType":"VariableDeclaration","scope":1278,"src":"5591:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5573:44:5"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"5627:0:5"},"scope":1606,"src":"5545:1906:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1323,"nodeType":"Block","src":"7564:208:5","statements":[{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"allPapers","nameLocation":"7590:9:5","nodeType":"VariableDeclaration","scope":1323,"src":"7575:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Paper[]"},"typeName":{"baseType":{"id":1287,"nodeType":"UserDefinedTypeName","pathNode":{"id":1286,"name":"Paper","nameLocations":["7575:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"7575:5:5"},"referencedDeclaration":807,"src":"7575:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"}},"id":1288,"nodeType":"ArrayTypeName","src":"7575:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_storage_$dyn_storage_ptr","typeString":"struct MedicalResearch.Paper[]"}},"visibility":"internal"}],"id":1298,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1294,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"7614:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7628:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7614:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7602:11:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct MedicalResearch.Paper memory[] memory)"},"typeName":{"baseType":{"id":1291,"nodeType":"UserDefinedTypeName","pathNode":{"id":1290,"name":"Paper","nameLocations":["7606:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"7606:5:5"},"referencedDeclaration":807,"src":"7606:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"}},"id":1292,"nodeType":"ArrayTypeName","src":"7606:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_storage_$dyn_storage_ptr","typeString":"struct MedicalResearch.Paper[]"}}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7602:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Paper memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7575:55:5"},{"body":{"id":1319,"nodeType":"Block","src":"7683:55:5","statements":[{"expression":{"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1309,"name":"allPapers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"7698:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Paper memory[] memory"}},"id":1313,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1310,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"7708:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7712:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7708:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7698:16:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1314,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"7717:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1316,"indexExpression":{"id":1315,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"7724:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7717:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"src":"7698:28:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"id":1318,"nodeType":"ExpressionStatement","src":"7698:28:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1303,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"7661:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1304,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"7665:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7661:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1320,"initializationExpression":{"assignments":[1300],"declarations":[{"constant":false,"id":1300,"mutability":"mutable","name":"i","nameLocation":"7654:1:5","nodeType":"VariableDeclaration","scope":1320,"src":"7646:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"7646:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1302,"initialValue":{"hexValue":"31","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7658:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"7646:13:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7678:3:5","subExpression":{"id":1306,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"7678:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1308,"nodeType":"ExpressionStatement","src":"7678:3:5"},"nodeType":"ForStatement","src":"7641:97:5"},{"expression":{"id":1321,"name":"allPapers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"7755:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Paper memory[] memory"}},"functionReturnParameters":1284,"id":1322,"nodeType":"Return","src":"7748:16:5"}]},"functionSelector":"972a2239","id":1324,"implemented":true,"kind":"function","modifiers":[],"name":"getPapers","nameLocation":"7513:9:5","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[],"src":"7522:2:5"},"returnParameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1324,"src":"7548:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Paper[]"},"typeName":{"baseType":{"id":1281,"nodeType":"UserDefinedTypeName","pathNode":{"id":1280,"name":"Paper","nameLocations":["7548:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"7548:5:5"},"referencedDeclaration":807,"src":"7548:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"}},"id":1282,"nodeType":"ArrayTypeName","src":"7548:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_storage_$dyn_storage_ptr","typeString":"struct MedicalResearch.Paper[]"}},"visibility":"internal"}],"src":"7547:16:5"},"scope":1606,"src":"7504:268:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1380,"nodeType":"Block","src":"7936:283:5","statements":[{"assignments":[1337],"declarations":[{"constant":false,"id":1337,"mutability":"mutable","name":"paperIds","nameLocation":"7964:8:5","nodeType":"VariableDeclaration","scope":1380,"src":"7947:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"7947:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1336,"nodeType":"ArrayTypeName","src":"7947:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1341,"initialValue":{"baseExpression":{"id":1338,"name":"papersByOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"7975:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1340,"indexExpression":{"id":1339,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"7989:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7975:20:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7947:48:5"},{"assignments":[1346],"declarations":[{"constant":false,"id":1346,"mutability":"mutable","name":"ownerPapers","nameLocation":"8021:11:5","nodeType":"VariableDeclaration","scope":1380,"src":"8006:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Paper[]"},"typeName":{"baseType":{"id":1344,"nodeType":"UserDefinedTypeName","pathNode":{"id":1343,"name":"Paper","nameLocations":["8006:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"8006:5:5"},"referencedDeclaration":807,"src":"8006:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"}},"id":1345,"nodeType":"ArrayTypeName","src":"8006:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_storage_$dyn_storage_ptr","typeString":"struct MedicalResearch.Paper[]"}},"visibility":"internal"}],"id":1354,"initialValue":{"arguments":[{"expression":{"id":1351,"name":"paperIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"8047:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8056:6:5","memberName":"length","nodeType":"MemberAccess","src":"8047:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8035:11:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct MedicalResearch.Paper memory[] memory)"},"typeName":{"baseType":{"id":1348,"nodeType":"UserDefinedTypeName","pathNode":{"id":1347,"name":"Paper","nameLocations":["8039:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"8039:5:5"},"referencedDeclaration":807,"src":"8039:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"}},"id":1349,"nodeType":"ArrayTypeName","src":"8039:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_storage_$dyn_storage_ptr","typeString":"struct MedicalResearch.Paper[]"}}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8035:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Paper memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8006:57:5"},{"body":{"id":1376,"nodeType":"Block","src":"8120:63:5","statements":[{"expression":{"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1366,"name":"ownerPapers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"8135:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Paper memory[] memory"}},"id":1368,"indexExpression":{"id":1367,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"8147:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8135:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1369,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"8152:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1373,"indexExpression":{"baseExpression":{"id":1370,"name":"paperIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"8159:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1372,"indexExpression":{"id":1371,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"8168:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8159:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8152:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"src":"8135:36:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"id":1375,"nodeType":"ExpressionStatement","src":"8135:36:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1359,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"8094:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1360,"name":"paperIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"8098:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8107:6:5","memberName":"length","nodeType":"MemberAccess","src":"8098:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8094:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1377,"initializationExpression":{"assignments":[1356],"declarations":[{"constant":false,"id":1356,"mutability":"mutable","name":"i","nameLocation":"8087:1:5","nodeType":"VariableDeclaration","scope":1377,"src":"8079:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"8079:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1358,"initialValue":{"hexValue":"30","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8091:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8079:13:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8115:3:5","subExpression":{"id":1363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"8115:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1365,"nodeType":"ExpressionStatement","src":"8115:3:5"},"nodeType":"ForStatement","src":"8074:109:5"},{"expression":{"id":1378,"name":"ownerPapers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"8200:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Paper memory[] memory"}},"functionReturnParameters":1332,"id":1379,"nodeType":"Return","src":"8193:18:5"}]},"functionSelector":"c2414def","id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"getPapersByOwnerAddress","nameLocation":"7858:23:5","nodeType":"FunctionDefinition","parameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"owner","nameLocation":"7890:5:5","nodeType":"VariableDeclaration","scope":1381,"src":"7882:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"7882:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7881:15:5"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"7920:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Paper[]"},"typeName":{"baseType":{"id":1329,"nodeType":"UserDefinedTypeName","pathNode":{"id":1328,"name":"Paper","nameLocations":["7920:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"7920:5:5"},"referencedDeclaration":807,"src":"7920:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"}},"id":1330,"nodeType":"ArrayTypeName","src":"7920:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_storage_$dyn_storage_ptr","typeString":"struct MedicalResearch.Paper[]"}},"visibility":"internal"}],"src":"7919:16:5"},"scope":1606,"src":"7849:370:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1394,"nodeType":"Block","src":"8385:48:5","statements":[{"expression":{"baseExpression":{"id":1390,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"8403:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Contribution_$816_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Contribution storage ref[] storage ref)"}},"id":1392,"indexExpression":{"id":1391,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"8417:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8403:22:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Contribution_$816_storage_$dyn_storage","typeString":"struct MedicalResearch.Contribution storage ref[] storage ref"}},"functionReturnParameters":1389,"id":1393,"nodeType":"Return","src":"8396:29:5"}]},"functionSelector":"d05e3cc5","id":1395,"implemented":true,"kind":"function","modifiers":[],"name":"getContributions","nameLocation":"8305:16:5","nodeType":"FunctionDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"paperId","nameLocation":"8330:7:5","nodeType":"VariableDeclaration","scope":1395,"src":"8322:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"8322:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8321:17:5"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"8362:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Contribution[]"},"typeName":{"baseType":{"id":1386,"nodeType":"UserDefinedTypeName","pathNode":{"id":1385,"name":"Contribution","nameLocations":["8362:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":816,"src":"8362:12:5"},"referencedDeclaration":816,"src":"8362:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$816_storage_ptr","typeString":"struct MedicalResearch.Contribution"}},"id":1387,"nodeType":"ArrayTypeName","src":"8362:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Contribution_$816_storage_$dyn_storage_ptr","typeString":"struct MedicalResearch.Contribution[]"}},"visibility":"internal"}],"src":"8361:23:5"},"scope":1606,"src":"8296:137:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1485,"nodeType":"Block","src":"8596:502:5","statements":[{"assignments":[1408],"declarations":[{"constant":false,"id":1408,"mutability":"mutable","name":"paperIds","nameLocation":"8624:8:5","nodeType":"VariableDeclaration","scope":1485,"src":"8607:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"8607:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1407,"nodeType":"ArrayTypeName","src":"8607:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1416,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1412,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"8649:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8649:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8635:13:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"8639:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1410,"nodeType":"ArrayTypeName","src":"8639:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8635:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8607:58:5"},{"assignments":[1418],"declarations":[{"constant":false,"id":1418,"mutability":"mutable","name":"count","nameLocation":"8684:5:5","nodeType":"VariableDeclaration","scope":1485,"src":"8676:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"8676:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1420,"initialValue":{"hexValue":"30","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8692:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8676:17:5"},{"body":{"id":1447,"nodeType":"Block","src":"8748:134:5","statements":[{"condition":{"baseExpression":{"baseExpression":{"id":1431,"name":"paperAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"8767:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":1433,"indexExpression":{"id":1432,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"8781:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8767:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1435,"indexExpression":{"id":1434,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"8784:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8767:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1446,"nodeType":"IfStatement","src":"8763:108:5","trueBody":{"id":1445,"nodeType":"Block","src":"8791:80:5","statements":[{"expression":{"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1436,"name":"paperIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"8810:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1438,"indexExpression":{"id":1437,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"8819:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8810:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"8828:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8810:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1441,"nodeType":"ExpressionStatement","src":"8810:19:5"},{"expression":{"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8848:7:5","subExpression":{"id":1442,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"8848:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1444,"nodeType":"ExpressionStatement","src":"8848:7:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"8726:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1426,"name":"nextPaperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"8730:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8726:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1448,"initializationExpression":{"assignments":[1422],"declarations":[{"constant":false,"id":1422,"mutability":"mutable","name":"i","nameLocation":"8719:1:5","nodeType":"VariableDeclaration","scope":1448,"src":"8711:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"8711:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1424,"initialValue":{"hexValue":"31","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8723:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"8711:13:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8743:3:5","subExpression":{"id":1428,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"8743:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1430,"nodeType":"ExpressionStatement","src":"8743:3:5"},"nodeType":"ForStatement","src":"8706:176:5"},{"assignments":[1453],"declarations":[{"constant":false,"id":1453,"mutability":"mutable","name":"accessedPapers","nameLocation":"8909:14:5","nodeType":"VariableDeclaration","scope":1485,"src":"8894:29:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Paper[]"},"typeName":{"baseType":{"id":1451,"nodeType":"UserDefinedTypeName","pathNode":{"id":1450,"name":"Paper","nameLocations":["8894:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"8894:5:5"},"referencedDeclaration":807,"src":"8894:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"}},"id":1452,"nodeType":"ArrayTypeName","src":"8894:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_storage_$dyn_storage_ptr","typeString":"struct MedicalResearch.Paper[]"}},"visibility":"internal"}],"id":1460,"initialValue":{"arguments":[{"id":1458,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"8938:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8926:11:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct MedicalResearch.Paper memory[] memory)"},"typeName":{"baseType":{"id":1455,"nodeType":"UserDefinedTypeName","pathNode":{"id":1454,"name":"Paper","nameLocations":["8930:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"8930:5:5"},"referencedDeclaration":807,"src":"8930:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"}},"id":1456,"nodeType":"ArrayTypeName","src":"8930:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_storage_$dyn_storage_ptr","typeString":"struct MedicalResearch.Paper[]"}}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8926:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Paper memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8894:50:5"},{"body":{"id":1481,"nodeType":"Block","src":"8991:66:5","statements":[{"expression":{"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1471,"name":"accessedPapers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"9006:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Paper memory[] memory"}},"id":1473,"indexExpression":{"id":1472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"9021:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9006:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1474,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"9026:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1478,"indexExpression":{"baseExpression":{"id":1475,"name":"paperIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"9033:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1477,"indexExpression":{"id":1476,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"9042:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9033:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9026:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"src":"9006:39:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_memory_ptr","typeString":"struct MedicalResearch.Paper memory"}},"id":1480,"nodeType":"ExpressionStatement","src":"9006:39:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1465,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"8975:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1466,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"8979:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8975:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1482,"initializationExpression":{"assignments":[1462],"declarations":[{"constant":false,"id":1462,"mutability":"mutable","name":"i","nameLocation":"8968:1:5","nodeType":"VariableDeclaration","scope":1482,"src":"8960:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"8960:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1464,"initialValue":{"hexValue":"30","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8972:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8960:13:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8986:3:5","subExpression":{"id":1468,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"8986:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1470,"nodeType":"ExpressionStatement","src":"8986:3:5"},"nodeType":"ForStatement","src":"8955:102:5"},{"expression":{"id":1483,"name":"accessedPapers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"9076:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Paper memory[] memory"}},"functionReturnParameters":1403,"id":1484,"nodeType":"Return","src":"9069:21:5"}]},"functionSelector":"7ed4cd87","id":1486,"implemented":true,"kind":"function","modifiers":[],"name":"getPapersAccessedByUser","nameLocation":"8519:23:5","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"user","nameLocation":"8551:4:5","nodeType":"VariableDeclaration","scope":1486,"src":"8543:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"8543:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8542:14:5"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1486,"src":"8580:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","typeString":"struct MedicalResearch.Paper[]"},"typeName":{"baseType":{"id":1400,"nodeType":"UserDefinedTypeName","pathNode":{"id":1399,"name":"Paper","nameLocations":["8580:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"8580:5:5"},"referencedDeclaration":807,"src":"8580:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"}},"id":1401,"nodeType":"ArrayTypeName","src":"8580:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Paper_$807_storage_$dyn_storage_ptr","typeString":"struct MedicalResearch.Paper[]"}},"visibility":"internal"}],"src":"8579:16:5"},"scope":1606,"src":"8510:588:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1497,"nodeType":"Block","src":"9262:53:5","statements":[{"expression":{"baseExpression":{"id":1493,"name":"userContributionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"9280:21:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1495,"indexExpression":{"id":1494,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"9302:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9280:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1492,"id":1496,"nodeType":"Return","src":"9273:34:5"}]},"functionSelector":"e7565890","id":1498,"implemented":true,"kind":"function","modifiers":[],"name":"getUserContributionCount","nameLocation":"9191:24:5","nodeType":"FunctionDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"user","nameLocation":"9224:4:5","nodeType":"VariableDeclaration","scope":1498,"src":"9216:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"9216:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9215:14:5"},"returnParameters":{"id":1492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1498,"src":"9253:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1490,"name":"uint256","nodeType":"ElementaryTypeName","src":"9253:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9252:9:5"},"scope":1606,"src":"9182:133:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1541,"nodeType":"Block","src":"9600:297:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1515,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"9619:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1517,"indexExpression":{"id":1516,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"9626:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9619:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9635:6:5","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":804,"src":"9619:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506170657220646f6573206e6f74206578697374","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9643:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""},"value":"Paper does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""}],"id":1514,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9611:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9611:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1521,"nodeType":"ExpressionStatement","src":"9611:55:5"},{"assignments":[1524],"declarations":[{"constant":false,"id":1524,"mutability":"mutable","name":"paper","nameLocation":"9693:5:5","nodeType":"VariableDeclaration","scope":1541,"src":"9679:19:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"},"typeName":{"id":1523,"nodeType":"UserDefinedTypeName","pathNode":{"id":1522,"name":"Paper","nameLocations":["9679:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"9679:5:5"},"referencedDeclaration":807,"src":"9679:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"}},"visibility":"internal"}],"id":1528,"initialValue":{"baseExpression":{"id":1525,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"9701:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1527,"indexExpression":{"id":1526,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"9708:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9701:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9679:37:5"},{"expression":{"components":[{"expression":{"id":1529,"name":"paper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"9749:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper storage pointer"}},"id":1530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9755:6:5","memberName":"author","nodeType":"MemberAccess","referencedDeclaration":793,"src":"9749:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1531,"name":"paper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"9776:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper storage pointer"}},"id":1532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9782:5:5","memberName":"title","nodeType":"MemberAccess","referencedDeclaration":795,"src":"9776:11:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":1533,"name":"paper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"9802:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper storage pointer"}},"id":1534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9808:11:5","memberName":"contentHash","nodeType":"MemberAccess","referencedDeclaration":797,"src":"9802:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":1535,"name":"paper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"9834:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper storage pointer"}},"id":1536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9840:9:5","memberName":"accessFee","nodeType":"MemberAccess","referencedDeclaration":799,"src":"9834:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1537,"name":"paper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"9864:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper storage pointer"}},"id":1538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9870:8:5","memberName":"keywords","nodeType":"MemberAccess","referencedDeclaration":802,"src":"9864:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}}],"id":1539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9734:155:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_string_storage_$_t_string_storage_$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"tuple(address,string storage ref,string storage ref,uint256,string storage ref[] storage ref)"}},"functionReturnParameters":1513,"id":1540,"nodeType":"Return","src":"9727:162:5"}]},"functionSelector":"3e0b7810","id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"getPaperById","nameLocation":"9386:12:5","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"mutability":"mutable","name":"paperId","nameLocation":"9407:7:5","nodeType":"VariableDeclaration","scope":1542,"src":"9399:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"9399:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9398:17:5"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"author","nameLocation":"9457:6:5","nodeType":"VariableDeclaration","scope":1542,"src":"9449:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1502,"name":"address","nodeType":"ElementaryTypeName","src":"9449:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1505,"mutability":"mutable","name":"title","nameLocation":"9488:5:5","nodeType":"VariableDeclaration","scope":1542,"src":"9474:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1504,"name":"string","nodeType":"ElementaryTypeName","src":"9474:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"contentHash","nameLocation":"9518:11:5","nodeType":"VariableDeclaration","scope":1542,"src":"9504:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1506,"name":"string","nodeType":"ElementaryTypeName","src":"9504:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"accessFee","nameLocation":"9548:9:5","nodeType":"VariableDeclaration","scope":1542,"src":"9540:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"9540:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1512,"mutability":"mutable","name":"keywords","nameLocation":"9584:8:5","nodeType":"VariableDeclaration","scope":1542,"src":"9568:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1510,"name":"string","nodeType":"ElementaryTypeName","src":"9568:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1511,"nodeType":"ArrayTypeName","src":"9568:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"9438:161:5"},"scope":1606,"src":"9377:520:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1604,"nodeType":"Block","src":"10200:564:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1559,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"10219:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1561,"indexExpression":{"id":1560,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"10226:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10219:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10235:6:5","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":804,"src":"10219:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506170657220646f6573206e6f74206578697374","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10243:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""},"value":"Paper does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","typeString":"literal_string \"Paper does not exist\""}],"id":1558,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10211:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10211:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1565,"nodeType":"ExpressionStatement","src":"10211:55:5"},{"assignments":[1567],"declarations":[{"constant":false,"id":1567,"mutability":"mutable","name":"currentId","nameLocation":"10287:9:5","nodeType":"VariableDeclaration","scope":1604,"src":"10279:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"10279:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1569,"initialValue":{"id":1568,"name":"paperId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"10299:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10279:27:5"},{"body":{"id":1583,"nodeType":"Block","src":"10362:122:5","statements":[{"expression":{"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1576,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"10377:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1577,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"10389:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1579,"indexExpression":{"id":1578,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"10396:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10389:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10407:13:5","memberName":"parentPaperId","nodeType":"MemberAccess","referencedDeclaration":806,"src":"10389:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10377:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1582,"nodeType":"ExpressionStatement","src":"10377:43:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1570,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"10324:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1572,"indexExpression":{"id":1571,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"10331:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10324:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"id":1573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10342:13:5","memberName":"parentPaperId","nodeType":"MemberAccess","referencedDeclaration":806,"src":"10324:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10359:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10324:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1584,"nodeType":"WhileStatement","src":"10317:167:5"},{"assignments":[1587],"declarations":[{"constant":false,"id":1587,"mutability":"mutable","name":"originalPaper","nameLocation":"10510:13:5","nodeType":"VariableDeclaration","scope":1604,"src":"10496:27:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"},"typeName":{"id":1586,"nodeType":"UserDefinedTypeName","pathNode":{"id":1585,"name":"Paper","nameLocations":["10496:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"10496:5:5"},"referencedDeclaration":807,"src":"10496:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper"}},"visibility":"internal"}],"id":1591,"initialValue":{"baseExpression":{"id":1588,"name":"papers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"10526:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Paper_$807_storage_$","typeString":"mapping(uint256 => struct MedicalResearch.Paper storage ref)"}},"id":1590,"indexExpression":{"id":1589,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"10533:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10526:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage","typeString":"struct MedicalResearch.Paper storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10496:47:5"},{"expression":{"components":[{"expression":{"id":1592,"name":"originalPaper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"10576:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper storage pointer"}},"id":1593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10590:6:5","memberName":"author","nodeType":"MemberAccess","referencedDeclaration":793,"src":"10576:20:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1594,"name":"originalPaper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"10611:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper storage pointer"}},"id":1595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10625:5:5","memberName":"title","nodeType":"MemberAccess","referencedDeclaration":795,"src":"10611:19:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":1596,"name":"originalPaper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"10645:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper storage pointer"}},"id":1597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10659:11:5","memberName":"contentHash","nodeType":"MemberAccess","referencedDeclaration":797,"src":"10645:25:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":1598,"name":"originalPaper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"10685:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper storage pointer"}},"id":1599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10699:9:5","memberName":"accessFee","nodeType":"MemberAccess","referencedDeclaration":799,"src":"10685:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1600,"name":"originalPaper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"10723:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Paper_$807_storage_ptr","typeString":"struct MedicalResearch.Paper storage pointer"}},"id":1601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10737:8:5","memberName":"keywords","nodeType":"MemberAccess","referencedDeclaration":802,"src":"10723:22:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}}],"id":1602,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10561:195:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_string_storage_$_t_string_storage_$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"tuple(address,string storage ref,string storage ref,uint256,string storage ref[] storage ref)"}},"functionReturnParameters":1557,"id":1603,"nodeType":"Return","src":"10554:202:5"}]},"functionSelector":"ed272a99","id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"getOriginalPaper","nameLocation":"9982:16:5","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"paperId","nameLocation":"10007:7:5","nodeType":"VariableDeclaration","scope":1605,"src":"9999:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9998:17:5"},"returnParameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"author","nameLocation":"10057:6:5","nodeType":"VariableDeclaration","scope":1605,"src":"10049:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"10049:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"title","nameLocation":"10088:5:5","nodeType":"VariableDeclaration","scope":1605,"src":"10074:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1548,"name":"string","nodeType":"ElementaryTypeName","src":"10074:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"contentHash","nameLocation":"10118:11:5","nodeType":"VariableDeclaration","scope":1605,"src":"10104:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1550,"name":"string","nodeType":"ElementaryTypeName","src":"10104:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1553,"mutability":"mutable","name":"accessFee","nameLocation":"10148:9:5","nodeType":"VariableDeclaration","scope":1605,"src":"10140:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"10140:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"keywords","nameLocation":"10184:8:5","nodeType":"VariableDeclaration","scope":1605,"src":"10168:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1554,"name":"string","nodeType":"ElementaryTypeName","src":"10168:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1555,"nodeType":"ArrayTypeName","src":"10168:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"10038:161:5"},"scope":1606,"src":"9973:791:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1607,"src":"143:10624:5","usedErrors":[],"usedEvents":[865,877,889,897,903]}],"src":"0:10771:5"},"id":5}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MedicalResearch.sol":{"MedicalResearch":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPaperId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPaperId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"contributionIndex","type":"uint256"},{"indexed":true,"internalType":"address","name":"contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"rewardAmount","type":"uint256"}],"name":"ContributionApproved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"paperId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"contributionIndex","type":"uint256"},{"indexed":true,"internalType":"address","name":"contributor","type":"address"},{"indexed":false,"internalType":"string","name":"changesHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"stakeAmount","type":"uint256"}],"name":"ContributionSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"paperId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"feePaid","type":"uint256"}],"name":"PaperAccessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newPaperId","type":"uint256"},{"indexed":false,"internalType":"string","name":"newContentHash","type":"string"}],"name":"PaperUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"paperId","type":"uint256"},{"indexed":true,"internalType":"address","name":"author","type":"address"},{"indexed":false,"internalType":"string","name":"title","type":"string"},{"indexed":false,"internalType":"string","name":"contentHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"accessFee","type":"uint256"},{"indexed":false,"internalType":"string[]","name":"keywords","type":"string[]"}],"name":"PaperUploaded","type":"event"},{"inputs":[{"internalType":"uint256","name":"paperId","type":"uint256"}],"name":"accessPaper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"paperId","type":"uint256"},{"internalType":"uint256","name":"contributionIndex","type":"uint256"}],"name":"approveContribution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"contributions","outputs":[{"internalType":"address","name":"contributor","type":"address"},{"internalType":"string","name":"changesHash","type":"string"},{"internalType":"bool","name":"approved","type":"bool"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"paperId","type":"uint256"}],"name":"getContributions","outputs":[{"components":[{"internalType":"address","name":"contributor","type":"address"},{"internalType":"string","name":"changesHash","type":"string"},{"internalType":"bool","name":"approved","type":"bool"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"}],"internalType":"struct MedicalResearch.Contribution[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"paperId","type":"uint256"}],"name":"getOriginalPaper","outputs":[{"internalType":"address","name":"author","type":"address"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"contentHash","type":"string"},{"internalType":"uint256","name":"accessFee","type":"uint256"},{"internalType":"string[]","name":"keywords","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"paperId","type":"uint256"}],"name":"getPaperById","outputs":[{"internalType":"address","name":"author","type":"address"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"contentHash","type":"string"},{"internalType":"uint256","name":"accessFee","type":"uint256"},{"internalType":"string[]","name":"keywords","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPapers","outputs":[{"components":[{"internalType":"address","name":"author","type":"address"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"contentHash","type":"string"},{"internalType":"uint256","name":"accessFee","type":"uint256"},{"internalType":"string[]","name":"keywords","type":"string[]"},{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"uint256","name":"parentPaperId","type":"uint256"}],"internalType":"struct MedicalResearch.Paper[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getPapersAccessedByUser","outputs":[{"components":[{"internalType":"address","name":"author","type":"address"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"contentHash","type":"string"},{"internalType":"uint256","name":"accessFee","type":"uint256"},{"internalType":"string[]","name":"keywords","type":"string[]"},{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"uint256","name":"parentPaperId","type":"uint256"}],"internalType":"struct MedicalResearch.Paper[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"getPapersByOwnerAddress","outputs":[{"components":[{"internalType":"address","name":"author","type":"address"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"contentHash","type":"string"},{"internalType":"uint256","name":"accessFee","type":"uint256"},{"internalType":"string[]","name":"keywords","type":"string[]"},{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"uint256","name":"parentPaperId","type":"uint256"}],"internalType":"struct MedicalResearch.Paper[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserContributionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"paperAccessFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"paperAccessed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"papers","outputs":[{"internalType":"address","name":"author","type":"address"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"contentHash","type":"string"},{"internalType":"uint256","name":"accessFee","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"uint256","name":"parentPaperId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"paperId","type":"uint256"},{"internalType":"string","name":"changesHash","type":"string"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"}],"name":"submitContribution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract ERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"contentHash","type":"string"},{"internalType":"uint256","name":"accessFee","type":"uint256"},{"internalType":"string[]","name":"keywords","type":"string[]"}],"name":"uploadPaper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userContributionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_923":{"entryPoint":null,"id":923,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":224,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":247,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":178,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":146,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":141,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":198,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1199:6","nodeType":"YulBlock","src":"0:1199:6","statements":[{"body":{"nativeSrc":"47:35:6","nodeType":"YulBlock","src":"47:35:6","statements":[{"nativeSrc":"57:19:6","nodeType":"YulAssignment","src":"57:19:6","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:6","nodeType":"YulLiteral","src":"73:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:6","nodeType":"YulIdentifier","src":"67:5:6"},"nativeSrc":"67:9:6","nodeType":"YulFunctionCall","src":"67:9:6"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:6","nodeType":"YulIdentifier","src":"57:6:6"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:6","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:6","nodeType":"YulTypedName","src":"40:6:6","type":""}],"src":"7:75:6"},{"body":{"nativeSrc":"177:28:6","nodeType":"YulBlock","src":"177:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:6","nodeType":"YulLiteral","src":"194:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:6","nodeType":"YulLiteral","src":"197:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:6","nodeType":"YulIdentifier","src":"187:6:6"},"nativeSrc":"187:12:6","nodeType":"YulFunctionCall","src":"187:12:6"},"nativeSrc":"187:12:6","nodeType":"YulExpressionStatement","src":"187:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:6","nodeType":"YulFunctionDefinition","src":"88:117:6"},{"body":{"nativeSrc":"300:28:6","nodeType":"YulBlock","src":"300:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:6","nodeType":"YulLiteral","src":"317:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:6","nodeType":"YulLiteral","src":"320:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:6","nodeType":"YulIdentifier","src":"310:6:6"},"nativeSrc":"310:12:6","nodeType":"YulFunctionCall","src":"310:12:6"},"nativeSrc":"310:12:6","nodeType":"YulExpressionStatement","src":"310:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:6","nodeType":"YulFunctionDefinition","src":"211:117:6"},{"body":{"nativeSrc":"379:81:6","nodeType":"YulBlock","src":"379:81:6","statements":[{"nativeSrc":"389:65:6","nodeType":"YulAssignment","src":"389:65:6","value":{"arguments":[{"name":"value","nativeSrc":"404:5:6","nodeType":"YulIdentifier","src":"404:5:6"},{"kind":"number","nativeSrc":"411:42:6","nodeType":"YulLiteral","src":"411:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:6","nodeType":"YulIdentifier","src":"400:3:6"},"nativeSrc":"400:54:6","nodeType":"YulFunctionCall","src":"400:54:6"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:6","nodeType":"YulIdentifier","src":"389:7:6"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:6","nodeType":"YulTypedName","src":"361:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:6","nodeType":"YulTypedName","src":"371:7:6","type":""}],"src":"334:126:6"},{"body":{"nativeSrc":"511:51:6","nodeType":"YulBlock","src":"511:51:6","statements":[{"nativeSrc":"521:35:6","nodeType":"YulAssignment","src":"521:35:6","value":{"arguments":[{"name":"value","nativeSrc":"550:5:6","nodeType":"YulIdentifier","src":"550:5:6"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:6","nodeType":"YulIdentifier","src":"532:17:6"},"nativeSrc":"532:24:6","nodeType":"YulFunctionCall","src":"532:24:6"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:6","nodeType":"YulIdentifier","src":"521:7:6"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:6","nodeType":"YulTypedName","src":"493:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:6","nodeType":"YulTypedName","src":"503:7:6","type":""}],"src":"466:96:6"},{"body":{"nativeSrc":"611:79:6","nodeType":"YulBlock","src":"611:79:6","statements":[{"body":{"nativeSrc":"668:16:6","nodeType":"YulBlock","src":"668:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:6","nodeType":"YulLiteral","src":"677:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:6","nodeType":"YulLiteral","src":"680:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:6","nodeType":"YulIdentifier","src":"670:6:6"},"nativeSrc":"670:12:6","nodeType":"YulFunctionCall","src":"670:12:6"},"nativeSrc":"670:12:6","nodeType":"YulExpressionStatement","src":"670:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:6","nodeType":"YulIdentifier","src":"634:5:6"},{"arguments":[{"name":"value","nativeSrc":"659:5:6","nodeType":"YulIdentifier","src":"659:5:6"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:6","nodeType":"YulIdentifier","src":"641:17:6"},"nativeSrc":"641:24:6","nodeType":"YulFunctionCall","src":"641:24:6"}],"functionName":{"name":"eq","nativeSrc":"631:2:6","nodeType":"YulIdentifier","src":"631:2:6"},"nativeSrc":"631:35:6","nodeType":"YulFunctionCall","src":"631:35:6"}],"functionName":{"name":"iszero","nativeSrc":"624:6:6","nodeType":"YulIdentifier","src":"624:6:6"},"nativeSrc":"624:43:6","nodeType":"YulFunctionCall","src":"624:43:6"},"nativeSrc":"621:63:6","nodeType":"YulIf","src":"621:63:6"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:6","nodeType":"YulTypedName","src":"604:5:6","type":""}],"src":"568:122:6"},{"body":{"nativeSrc":"759:80:6","nodeType":"YulBlock","src":"759:80:6","statements":[{"nativeSrc":"769:22:6","nodeType":"YulAssignment","src":"769:22:6","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:6","nodeType":"YulIdentifier","src":"784:6:6"}],"functionName":{"name":"mload","nativeSrc":"778:5:6","nodeType":"YulIdentifier","src":"778:5:6"},"nativeSrc":"778:13:6","nodeType":"YulFunctionCall","src":"778:13:6"},"variableNames":[{"name":"value","nativeSrc":"769:5:6","nodeType":"YulIdentifier","src":"769:5:6"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:6","nodeType":"YulIdentifier","src":"827:5:6"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:6","nodeType":"YulIdentifier","src":"800:26:6"},"nativeSrc":"800:33:6","nodeType":"YulFunctionCall","src":"800:33:6"},"nativeSrc":"800:33:6","nodeType":"YulExpressionStatement","src":"800:33:6"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:6","nodeType":"YulTypedName","src":"737:6:6","type":""},{"name":"end","nativeSrc":"745:3:6","nodeType":"YulTypedName","src":"745:3:6","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:6","nodeType":"YulTypedName","src":"753:5:6","type":""}],"src":"696:143:6"},{"body":{"nativeSrc":"922:274:6","nodeType":"YulBlock","src":"922:274:6","statements":[{"body":{"nativeSrc":"968:83:6","nodeType":"YulBlock","src":"968:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"970:77:6","nodeType":"YulIdentifier","src":"970:77:6"},"nativeSrc":"970:79:6","nodeType":"YulFunctionCall","src":"970:79:6"},"nativeSrc":"970:79:6","nodeType":"YulExpressionStatement","src":"970:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"943:7:6","nodeType":"YulIdentifier","src":"943:7:6"},{"name":"headStart","nativeSrc":"952:9:6","nodeType":"YulIdentifier","src":"952:9:6"}],"functionName":{"name":"sub","nativeSrc":"939:3:6","nodeType":"YulIdentifier","src":"939:3:6"},"nativeSrc":"939:23:6","nodeType":"YulFunctionCall","src":"939:23:6"},{"kind":"number","nativeSrc":"964:2:6","nodeType":"YulLiteral","src":"964:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"935:3:6","nodeType":"YulIdentifier","src":"935:3:6"},"nativeSrc":"935:32:6","nodeType":"YulFunctionCall","src":"935:32:6"},"nativeSrc":"932:119:6","nodeType":"YulIf","src":"932:119:6"},{"nativeSrc":"1061:128:6","nodeType":"YulBlock","src":"1061:128:6","statements":[{"nativeSrc":"1076:15:6","nodeType":"YulVariableDeclaration","src":"1076:15:6","value":{"kind":"number","nativeSrc":"1090:1:6","nodeType":"YulLiteral","src":"1090:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1080:6:6","nodeType":"YulTypedName","src":"1080:6:6","type":""}]},{"nativeSrc":"1105:74:6","nodeType":"YulAssignment","src":"1105:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1151:9:6","nodeType":"YulIdentifier","src":"1151:9:6"},{"name":"offset","nativeSrc":"1162:6:6","nodeType":"YulIdentifier","src":"1162:6:6"}],"functionName":{"name":"add","nativeSrc":"1147:3:6","nodeType":"YulIdentifier","src":"1147:3:6"},"nativeSrc":"1147:22:6","nodeType":"YulFunctionCall","src":"1147:22:6"},{"name":"dataEnd","nativeSrc":"1171:7:6","nodeType":"YulIdentifier","src":"1171:7:6"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1115:31:6","nodeType":"YulIdentifier","src":"1115:31:6"},"nativeSrc":"1115:64:6","nodeType":"YulFunctionCall","src":"1115:64:6"},"variableNames":[{"name":"value0","nativeSrc":"1105:6:6","nodeType":"YulIdentifier","src":"1105:6:6"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"845:351:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"892:9:6","nodeType":"YulTypedName","src":"892:9:6","type":""},{"name":"dataEnd","nativeSrc":"903:7:6","nodeType":"YulTypedName","src":"903:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"915:6:6","nodeType":"YulTypedName","src":"915:6:6","type":""}],"src":"845:351:6"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4392 CODESIZE SUB DUP1 PUSH3 0x4392 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xF7 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP PUSH3 0x129 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xBF DUP3 PUSH3 0x92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xD1 DUP2 PUSH3 0xB2 JUMP JUMPDEST DUP2 EQ PUSH3 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xF1 DUP2 PUSH3 0xC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x110 JUMPI PUSH3 0x10F PUSH3 0x8D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x120 DUP5 DUP3 DUP6 ADD PUSH3 0xE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4259 DUP1 PUSH3 0x139 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA1C74BE5 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD05E3CC5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD05E3CC5 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xDF771ACA EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xE7565890 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xED272A99 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3BE JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0xA1C74BE5 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xA949DFDF EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xAA4A66DD EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xC2414DEF EQ PUSH2 0x2DE JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x77154FDE GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x77154FDE EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x7ED4CD87 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x830E28F6 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x972A2239 EQ PUSH2 0x258 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x2C258C9E EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x3E0B7810 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x5E775A27 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x6FD91DA9 EQ PUSH2 0x1A9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x2CED JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x2D48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x3021 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x3061 JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x308E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x3061 JUMP JUMPDEST PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x3021 JUMP JUMPDEST PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x3551 JUMP JUMPDEST PUSH2 0x19B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x308E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x360C JUMP JUMPDEST PUSH2 0x1BD1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x3061 JUMP JUMPDEST PUSH2 0x1EDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x37A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x2444 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x3061 JUMP JUMPDEST PUSH2 0x27AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x308E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x27F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C6 PUSH2 0x2AF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x3821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x477 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46E SWAP1 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD DUP3 PUSH1 0x2 ADD DUP4 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x4 ADD DUP4 DUP1 SLOAD PUSH2 0x4D0 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FC SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x549 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x549 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP DUP3 DUP1 SLOAD PUSH2 0x55C SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x588 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x6A9 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x61C SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x648 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x695 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x695 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x678 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x5FD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x70C SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x738 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x785 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x75A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x785 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x768 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x79A SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7C6 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x813 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x813 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x896 SWAP1 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x943 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93A SWAP1 PUSH2 0x397A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x992 SWAP1 PUSH2 0x39E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9C0 JUMPI PUSH2 0x9BF PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA16 SWAP1 PUSH2 0x3A81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA46 JUMPI PUSH2 0xA45 PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0xA PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA7A SWAP2 SWAP1 PUSH2 0x3AD0 JUMP JUMPDEST PUSH2 0xA84 SWAP2 SWAP1 PUSH2 0x3B41 JUMP JUMPDEST DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0xA93 SWAP2 SWAP1 PUSH2 0x3B72 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB14 SWAP3 SWAP2 SWAP1 PUSH2 0x3BA6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB57 SWAP2 SWAP1 PUSH2 0x3BFB JUMP JUMPDEST PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8D SWAP1 PUSH2 0x3C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xBB0 SWAP1 PUSH2 0x3C94 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xBFD SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC29 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC76 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC4B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC59 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xC8F SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCBB SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD08 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCDD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD08 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCEB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xE10 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xD83 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDAF SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDFC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDD1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDFC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDDF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD64 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xE95 SWAP2 SWAP1 PUSH2 0x3E7E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xEAB SWAP2 SWAP1 PUSH2 0x3E7E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xED2 SWAP3 SWAP2 SWAP1 PUSH2 0x2B16 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x1 DUP4 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B0FC1DFDFECA1D7E9D6E25A76602E33ED913671DB0F6AAE33735EB74B66107 DUP7 DUP4 DUP8 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1092 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH32 0xB97425B8EC45AA7C5CCC9B938659EB11B5502276F1EEC240E61BAF207824396C DUP2 DUP5 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x10CE SWAP3 SWAP2 SWAP1 PUSH2 0x4019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1107 SWAP2 SWAP1 PUSH2 0x4049 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1120 JUMPI PUSH2 0x111F PUSH2 0x3340 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x114E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x1202 JUMPI PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11F5 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11DA JUMPI PUSH2 0x11D9 PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x11F1 SWAP1 PUSH2 0x3C94 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1159 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x121F JUMPI PUSH2 0x121E PUSH2 0x3340 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1258 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1245 PUSH2 0x2B6F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x123D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x154B JUMPI PUSH1 0x3 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x127D JUMPI PUSH2 0x127C PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1304 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1330 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x137D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1352 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x137D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1360 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x1396 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13C2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x140F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x140F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x14F3 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1466 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1492 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1447 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1533 JUMPI PUSH2 0x1532 PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x125E JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x15BD SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15E9 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1636 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x160B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1636 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1619 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD PUSH2 0x166B SWAP2 SWAP1 PUSH2 0x4049 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1684 JUMPI PUSH2 0x1683 PUSH2 0x3340 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16BD JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x16AA PUSH2 0x2B6F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x16A2 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x19A8 JUMPI PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1755 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1781 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x17E7 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1813 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1860 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1835 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1860 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1843 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1944 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x18B7 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18E3 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1930 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1905 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1930 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1913 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1898 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 PUSH1 0x1 DUP4 PUSH2 0x197F SWAP2 SWAP1 PUSH2 0x4049 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1990 JUMPI PUSH2 0x198F PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x16C7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x19CA SWAP1 PUSH2 0x3C94 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1A8B SWAP2 SWAP1 PUSH2 0x3E7E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1AA1 SWAP2 SWAP1 PUSH2 0x3E7E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1AC8 SWAP3 SWAP2 SWAP1 PUSH2 0x2B16 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x56EEAA024974E3268B1CDCEEF36BAEF0F1C89CE1F09AFA010857B95D4AED2586 DUP3 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1BAA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x407D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1C34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2B SWAP1 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C91 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CD4 SWAP2 SWAP1 PUSH2 0x3BFB JUMP JUMPDEST PUSH2 0x1D13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0A SWAP1 PUSH2 0x3C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1E00 SWAP2 SWAP1 PUSH2 0x3E7E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1E7D SWAP1 PUSH2 0x3C94 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE17C01AF799C5069ECF6FD9A231440A115ADB7A1DEA0306B06D8EFE971A1A0B0 DUP6 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1ECE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x411C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1F69 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1F55 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F8D JUMPI PUSH2 0x1F8C PUSH2 0x3340 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FC6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1FB3 PUSH2 0x2B6F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1FAB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x22BA JUMPI PUSH1 0x3 PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FEC JUMPI PUSH2 0x1FEB PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x2073 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x209F SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x2105 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2131 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x217E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2153 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x217E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2161 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2262 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x21D5 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2201 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x224E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x224E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x21B6 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x22A2 JUMPI PUSH2 0x22A1 PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1FCC JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2439 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x2383 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23AF SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x23FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x23FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x23DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x22FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x24A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249E SWAP1 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2545 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x253C SWAP1 PUSH2 0x41DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x26DC JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x260D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x262C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2650 SWAP2 SWAP1 PUSH2 0x3BFB JUMP JUMPDEST PUSH2 0x268F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2686 SWAP1 PUSH2 0x3C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26C4 SWAP2 SWAP1 PUSH2 0x3B72 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1442BDB26F7569DB0CB308056CB26688F7AAD42FC098B54920E1AF1E8B67A5FC DUP3 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x27A3 SWAP3 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2863 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285A SWAP1 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD EQ PUSH2 0x28A5 JUMPI PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 POP PUSH2 0x2869 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD DUP3 PUSH1 0x2 ADD DUP4 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x4 ADD DUP4 DUP1 SLOAD PUSH2 0x28FE SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x292A SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2977 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x294C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2977 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x295A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP DUP3 DUP1 SLOAD PUSH2 0x298A SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29B6 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A03 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A03 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2AD7 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x2A4A SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A76 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AC3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A98 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AC3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AA6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2A2B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2B5E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2B5D JUMPI DUP3 MLOAD DUP3 SWAP1 DUP2 PUSH2 0x2B4D SWAP2 SWAP1 PUSH2 0x3E7E JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2B36 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2B6B SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BE4 JUMPI PUSH1 0x0 DUP2 DUP2 PUSH2 0x2BDB SWAP2 SWAP1 PUSH2 0x2BE8 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2BC5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2BF4 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2C06 JUMPI POP PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2C24 SWAP2 SWAP1 PUSH2 0x2C28 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2C41 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2C29 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C6C DUP2 PUSH2 0x2C59 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C89 DUP2 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CBA DUP3 PUSH2 0x2C8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CCA DUP2 PUSH2 0x2CAF JUMP JUMPDEST DUP2 EQ PUSH2 0x2CD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CE7 DUP2 PUSH2 0x2CC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D04 JUMPI PUSH2 0x2D03 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D12 DUP6 DUP3 DUP7 ADD PUSH2 0x2C7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D23 DUP6 DUP3 DUP7 ADD PUSH2 0x2CD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D42 DUP2 PUSH2 0x2D2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D79 JUMPI PUSH2 0x2D78 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D87 DUP5 DUP3 DUP6 ADD PUSH2 0x2C7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D99 DUP2 PUSH2 0x2CAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DD9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DBE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E01 DUP3 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x2E0B DUP2 DUP6 PUSH2 0x2DAA JUMP JUMPDEST SWAP4 POP PUSH2 0x2E1B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DBB JUMP JUMPDEST PUSH2 0x2E24 DUP2 PUSH2 0x2DE5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E38 DUP2 PUSH2 0x2C59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E86 DUP3 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x2E90 DUP2 DUP6 PUSH2 0x2E6A JUMP JUMPDEST SWAP4 POP PUSH2 0x2EA0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DBB JUMP JUMPDEST PUSH2 0x2EA9 DUP2 PUSH2 0x2DE5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC0 DUP4 DUP4 PUSH2 0x2E7B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE0 DUP3 PUSH2 0x2E3E JUMP JUMPDEST PUSH2 0x2EEA DUP2 DUP6 PUSH2 0x2E49 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x2EFC DUP6 PUSH2 0x2E5A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2F38 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x2F19 DUP6 DUP3 PUSH2 0x2EB4 JUMP JUMPDEST SWAP5 POP PUSH2 0x2F24 DUP4 PUSH2 0x2EC8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2F00 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2F5F PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2D90 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2F71 DUP2 DUP8 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2F85 DUP2 DUP7 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F94 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2E2F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2FA6 DUP2 DUP5 PUSH2 0x2ED5 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2FC7 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2D90 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2FD9 DUP2 DUP9 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2FED DUP2 DUP8 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FFC PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x3009 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2D39 JUMP JUMPDEST PUSH2 0x3016 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3038 JUMPI PUSH2 0x3037 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3046 DUP6 DUP3 DUP7 ADD PUSH2 0x2C7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3057 DUP6 DUP3 DUP7 ADD PUSH2 0x2C7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3077 JUMPI PUSH2 0x3076 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3085 DUP5 DUP3 DUP6 ADD PUSH2 0x2CD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30DE DUP2 PUSH2 0x2CAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x30ED DUP2 PUSH2 0x2C59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310F DUP3 PUSH2 0x2E3E JUMP JUMPDEST PUSH2 0x3119 DUP2 DUP6 PUSH2 0x30F3 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x312B DUP6 PUSH2 0x2E5A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3167 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3148 DUP6 DUP3 PUSH2 0x2EB4 JUMP JUMPDEST SWAP5 POP PUSH2 0x3153 DUP4 PUSH2 0x2EC8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x312F JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3182 DUP2 PUSH2 0x2D2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x31A0 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x30D5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x31B8 DUP3 DUP3 PUSH2 0x2E7B JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x31D2 DUP3 DUP3 PUSH2 0x2E7B JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x31E7 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x30E4 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x31FF DUP3 DUP3 PUSH2 0x3104 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x3214 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x3179 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x3227 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x30E4 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x323E DUP4 DUP4 PUSH2 0x3188 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x325E DUP3 PUSH2 0x30A9 JUMP JUMPDEST PUSH2 0x3268 DUP2 DUP6 PUSH2 0x30B4 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x327A DUP6 PUSH2 0x30C5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x32B6 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3297 DUP6 DUP3 PUSH2 0x3232 JUMP JUMPDEST SWAP5 POP PUSH2 0x32A2 DUP4 PUSH2 0x3246 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x327E JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32E2 DUP2 DUP5 PUSH2 0x3253 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x32FF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2D90 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3311 DUP2 DUP7 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP PUSH2 0x3320 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2D39 JUMP JUMPDEST PUSH2 0x332D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3378 DUP3 PUSH2 0x2DE5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3397 JUMPI PUSH2 0x3396 PUSH2 0x3340 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33AA PUSH2 0x2C45 JUMP JUMPDEST SWAP1 POP PUSH2 0x33B6 DUP3 DUP3 PUSH2 0x336F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x33D6 JUMPI PUSH2 0x33D5 PUSH2 0x3340 JUMP JUMPDEST JUMPDEST PUSH2 0x33DF DUP3 PUSH2 0x2DE5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x340E PUSH2 0x3409 DUP5 PUSH2 0x33BB JUMP JUMPDEST PUSH2 0x33A0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x342A JUMPI PUSH2 0x3429 PUSH2 0x333B JUMP JUMPDEST JUMPDEST PUSH2 0x3435 DUP5 DUP3 DUP6 PUSH2 0x33EC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3452 JUMPI PUSH2 0x3451 PUSH2 0x3336 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3462 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x33FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3486 JUMPI PUSH2 0x3485 PUSH2 0x3340 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x34AF PUSH2 0x34AA DUP5 PUSH2 0x346B JUMP JUMPDEST PUSH2 0x33A0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x34D2 JUMPI PUSH2 0x34D1 PUSH2 0x3497 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3519 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34F7 JUMPI PUSH2 0x34F6 PUSH2 0x3336 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x3504 DUP10 DUP3 PUSH2 0x343D JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x34D4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3538 JUMPI PUSH2 0x3537 PUSH2 0x3336 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3548 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x349C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x356B JUMPI PUSH2 0x356A PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3589 JUMPI PUSH2 0x3588 PUSH2 0x2C54 JUMP JUMPDEST JUMPDEST PUSH2 0x3595 DUP8 DUP3 DUP9 ADD PUSH2 0x343D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35B6 JUMPI PUSH2 0x35B5 PUSH2 0x2C54 JUMP JUMPDEST JUMPDEST PUSH2 0x35C2 DUP8 DUP3 DUP9 ADD PUSH2 0x343D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x35D3 DUP8 DUP3 DUP9 ADD PUSH2 0x2C7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35F4 JUMPI PUSH2 0x35F3 PUSH2 0x2C54 JUMP JUMPDEST JUMPDEST PUSH2 0x3600 DUP8 DUP3 DUP9 ADD PUSH2 0x3523 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3625 JUMPI PUSH2 0x3624 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3633 DUP7 DUP3 DUP8 ADD PUSH2 0x2C7A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3654 JUMPI PUSH2 0x3653 PUSH2 0x2C54 JUMP JUMPDEST JUMPDEST PUSH2 0x3660 DUP7 DUP3 DUP8 ADD PUSH2 0x343D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3671 DUP7 DUP3 DUP8 ADD PUSH2 0x2C7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x36BF PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x30D5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x36D7 DUP3 DUP3 PUSH2 0x2E7B JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x36EC PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x3179 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x36FF PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x30E4 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3716 DUP4 DUP4 PUSH2 0x36A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3736 DUP3 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x3740 DUP2 DUP6 PUSH2 0x3686 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3752 DUP6 PUSH2 0x3697 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x378E JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x376F DUP6 DUP3 PUSH2 0x370A JUMP JUMPDEST SWAP5 POP PUSH2 0x377A DUP4 PUSH2 0x371E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3756 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37BA DUP2 DUP5 PUSH2 0x372B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E7 PUSH2 0x37E2 PUSH2 0x37DD DUP5 PUSH2 0x2C8F JUMP JUMPDEST PUSH2 0x37C2 JUMP JUMPDEST PUSH2 0x2C8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F9 DUP3 PUSH2 0x37CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x380B DUP3 PUSH2 0x37EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x381B DUP2 PUSH2 0x3800 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3836 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3812 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506170657220646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3872 PUSH1 0x14 DUP4 PUSH2 0x2DAA JUMP JUMPDEST SWAP2 POP PUSH2 0x387D DUP3 PUSH2 0x383C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38A1 DUP2 PUSH2 0x3865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x38EF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3902 JUMPI PUSH2 0x3901 PUSH2 0x38A8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792074686520617574686F722063616E20617070726F766520636F6E74 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7269627574696F6E730000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3964 PUSH1 0x29 DUP4 PUSH2 0x2DAA JUMP JUMPDEST SWAP2 POP PUSH2 0x396F DUP3 PUSH2 0x3908 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3993 DUP2 PUSH2 0x3957 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F6E747269627574696F6E20696E646578000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39D0 PUSH1 0x1A DUP4 PUSH2 0x2DAA JUMP JUMPDEST SWAP2 POP PUSH2 0x39DB DUP3 PUSH2 0x399A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39FF DUP2 PUSH2 0x39C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x436F6E747269627574696F6E20616C726561647920617070726F766564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A6B PUSH1 0x1D DUP4 PUSH2 0x2DAA JUMP JUMPDEST SWAP2 POP PUSH2 0x3A76 DUP3 PUSH2 0x3A35 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A9A DUP2 PUSH2 0x3A5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3ADB DUP3 PUSH2 0x2C59 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AE6 DUP4 PUSH2 0x2C59 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3AF4 DUP2 PUSH2 0x2C59 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3B0B JUMPI PUSH2 0x3B0A PUSH2 0x3AA1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B4C DUP3 PUSH2 0x2C59 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B57 DUP4 PUSH2 0x2C59 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3B67 JUMPI PUSH2 0x3B66 PUSH2 0x3B12 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B7D DUP3 PUSH2 0x2C59 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B88 DUP4 PUSH2 0x2C59 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3BA0 JUMPI PUSH2 0x3B9F PUSH2 0x3AA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3BBB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D90 JUMP JUMPDEST PUSH2 0x3BC8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3BD8 DUP2 PUSH2 0x2D2D JUMP JUMPDEST DUP2 EQ PUSH2 0x3BE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3BF5 DUP2 PUSH2 0x3BCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C11 JUMPI PUSH2 0x3C10 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C1F DUP5 DUP3 DUP6 ADD PUSH2 0x3BE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5E PUSH1 0x15 DUP4 PUSH2 0x2DAA JUMP JUMPDEST SWAP2 POP PUSH2 0x3C69 DUP3 PUSH2 0x3C28 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C8D DUP2 PUSH2 0x3C51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C9F DUP3 PUSH2 0x2C59 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3CD1 JUMPI PUSH2 0x3CD0 PUSH2 0x3AA1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3D3E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3D01 JUMP JUMPDEST PUSH2 0x3D48 DUP7 DUP4 PUSH2 0x3D01 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D7B PUSH2 0x3D76 PUSH2 0x3D71 DUP5 PUSH2 0x2C59 JUMP JUMPDEST PUSH2 0x37C2 JUMP JUMPDEST PUSH2 0x2C59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D95 DUP4 PUSH2 0x3D60 JUMP JUMPDEST PUSH2 0x3DA9 PUSH2 0x3DA1 DUP3 PUSH2 0x3D82 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3D0E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3DBE PUSH2 0x3DB1 JUMP JUMPDEST PUSH2 0x3DC9 DUP2 DUP5 DUP5 PUSH2 0x3D8C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DED JUMPI PUSH2 0x3DE2 PUSH1 0x0 DUP3 PUSH2 0x3DB6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3DCF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E32 JUMPI PUSH2 0x3E03 DUP2 PUSH2 0x3CDC JUMP JUMPDEST PUSH2 0x3E0C DUP5 PUSH2 0x3CF1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3E1B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3E2F PUSH2 0x3E27 DUP6 PUSH2 0x3CF1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3DCE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E55 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3E37 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E6E DUP4 DUP4 PUSH2 0x3E44 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E87 DUP3 PUSH2 0x2D9F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EA0 JUMPI PUSH2 0x3E9F PUSH2 0x3340 JUMP JUMPDEST JUMPDEST PUSH2 0x3EAA DUP3 SLOAD PUSH2 0x38D7 JUMP JUMPDEST PUSH2 0x3EB5 DUP3 DUP3 DUP6 PUSH2 0x3DF1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3EE8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3ED6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3EE0 DUP6 DUP3 PUSH2 0x3E62 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3F48 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3EF6 DUP7 PUSH2 0x3CDC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3F1E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3EF9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3F3B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3F37 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3E44 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F65 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x3F72 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x3F7F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x3F8C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3FA2 DUP2 PUSH2 0x38D7 JUMP JUMPDEST PUSH2 0x3FAC DUP2 DUP7 PUSH2 0x2DAA JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3FC7 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3FDD JUMPI PUSH2 0x4010 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x4010 JUMP JUMPDEST PUSH2 0x3FE6 DUP6 PUSH2 0x3CDC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4008 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3FE9 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x402E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2E2F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4040 DUP2 DUP5 PUSH2 0x3F95 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4054 DUP3 PUSH2 0x2C59 JUMP JUMPDEST SWAP2 POP PUSH2 0x405F DUP4 PUSH2 0x2C59 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4077 JUMPI PUSH2 0x4076 PUSH2 0x3AA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4092 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2E2F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x40A4 DUP2 DUP8 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x40B8 DUP2 DUP7 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP PUSH2 0x40C7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2E2F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x40D9 DUP2 DUP5 PUSH2 0x2ED5 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x40FA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D90 JUMP JUMPDEST PUSH2 0x4107 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2D90 JUMP JUMPDEST PUSH2 0x4114 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4131 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x413E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2E2F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4150 DUP2 DUP6 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP PUSH2 0x415F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5573657220616C7265616479206861732061636365737320746F207468697320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7061706572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C4 PUSH1 0x25 DUP4 PUSH2 0x2DAA JUMP JUMPDEST SWAP2 POP PUSH2 0x41CF DUP3 PUSH2 0x4168 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x41F3 DUP2 PUSH2 0x41B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x420F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x421C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 ADDMOD KECCAK256 0x2F EXTCODECOPY SMOD 0x4B PUSH8 0x6C6CE5E16EECC0C 0xD5 CODECOPY 0x21 MSTORE 0x4C MLOAD 0xD3 0x4E INVALID 0xE3 BASEFEE 0x2E PUSH12 0x143E6164736F6C6343000818 STOP CALLER ","sourceMap":"143:10624:5:-:0;;;2836:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2896:13;2882:5;;:28;;;;;;;;;;;;;;;;;;2935:1;2921:11;:15;;;;2997:1;2973:21;:25;;;;2836:207;143:10624;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;143:10624:5:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@accessPaper_1058":{"entryPoint":9284,"id":1058,"parameterSlots":1,"returnSlots":0},"@approveContribution_1278":{"entryPoint":2108,"id":1278,"parameterSlots":2,"returnSlots":0},"@contributions_831":{"entryPoint":5463,"id":831,"parameterSlots":0,"returnSlots":0},"@getContributions_1395":{"entryPoint":8901,"id":1395,"parameterSlots":1,"returnSlots":1},"@getOriginalPaper_1605":{"entryPoint":10231,"id":1605,"parameterSlots":1,"returnSlots":5},"@getPaperById_1542":{"entryPoint":1035,"id":1542,"parameterSlots":1,"returnSlots":5},"@getPapersAccessedByUser_1486":{"entryPoint":4341,"id":1486,"parameterSlots":1,"returnSlots":1},"@getPapersByOwnerAddress_1381":{"entryPoint":7900,"id":1381,"parameterSlots":1,"returnSlots":1},"@getPapers_1324":{"entryPoint":5721,"id":1324,"parameterSlots":0,"returnSlots":1},"@getUserContributionCount_1498":{"entryPoint":10158,"id":1498,"parameterSlots":1,"returnSlots":1},"@paperAccessFees_835":{"entryPoint":7097,"id":835,"parameterSlots":0,"returnSlots":0},"@paperAccessed_846":{"entryPoint":988,"id":846,"parameterSlots":0,"returnSlots":0},"@papers_825":{"entryPoint":1731,"id":825,"parameterSlots":0,"returnSlots":0},"@submitContribution_1125":{"entryPoint":7121,"id":1125,"parameterSlots":3,"returnSlots":0},"@token_791":{"entryPoint":10994,"id":791,"parameterSlots":0,"returnSlots":0},"@uploadPaper_976":{"entryPoint":6576,"id":976,"parameterSlots":4,"returnSlots":0},"@userContributionCount_850":{"entryPoint":4317,"id":850,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":13468,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":13307,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":11480,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":13603,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":15334,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":13373,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":11386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":12385,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":15355,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":13649,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":11619,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":11501,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256":{"entryPoint":13836,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":12321,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":11956,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_Contribution_$816_memory_ptr_to_t_struct$_Contribution_$816_memory_ptr":{"entryPoint":14090,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_Paper_$807_memory_ptr_to_t_struct$_Paper_$807_memory_ptr":{"entryPoint":12850,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":12501,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":11664,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":12548,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":11989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":14123,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":12883,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":12665,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":11577,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack":{"entryPoint":14354,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":11899,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":11766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack":{"entryPoint":16277,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf_to_t_string_memory_ptr_fromStack":{"entryPoint":14437,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924_to_t_string_memory_ptr_fromStack":{"entryPoint":16823,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack":{"entryPoint":15441,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1_to_t_string_memory_ptr_fromStack":{"entryPoint":14679,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340_to_t_string_memory_ptr_fromStack":{"entryPoint":14787,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20_to_t_string_memory_ptr_fromStack":{"entryPoint":14942,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Contribution_$816_memory_ptr_to_t_struct$_Contribution_$816_memory_ptr":{"entryPoint":13991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_Paper_$807_memory_ptr_to_t_struct$_Paper_$807_memory_ptr":{"entryPoint":12680,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":12516,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":11823,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":16613,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_string_memory_ptr_t_bool_t_uint256__to_t_address_t_string_memory_ptr_t_bool_t_uint256__fromStack_reversed":{"entryPoint":13034,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12106,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_uint256__fromStack_reversed":{"entryPoint":12210,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":15270,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14240,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13000,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":11592,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed":{"entryPoint":14369,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14472,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16858,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15476,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14714,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14822,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14977,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":12430,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":16509,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_storage__to_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16409,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16890,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":16668,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16208,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":13216,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":11333,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":13419,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":13243,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":11866,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr":{"entryPoint":13975,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr":{"entryPoint":12485,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":15580,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":11838,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr":{"entryPoint":13947,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr":{"entryPoint":12457,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":11679,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":11976,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr":{"entryPoint":14110,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr":{"entryPoint":12870,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":12531,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":11849,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13958,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":12468,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":11882,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":11690,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":15218,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":15169,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":15056,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":16457,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":15857,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":11439,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":11565,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":11407,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":11353,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":15822,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_contract$_ERC20_$651_to_t_address":{"entryPoint":14336,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":14318,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":14284,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":15712,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":15998,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":13292,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":11707,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":15601,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":14551,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":15970,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":13167,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":14274,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":15508,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":15940,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":15009,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":15122,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":14504,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":14854,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13120,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":15746,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":13110,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":13463,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":13115,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":11348,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":11343,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":11749,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":15617,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":15927,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":15798,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf":{"entryPoint":14396,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924":{"entryPoint":16744,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4":{"entryPoint":15400,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1":{"entryPoint":14600,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340":{"entryPoint":14746,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20":{"entryPoint":14901,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":15630,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":15756,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":11457,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":15311,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":11363,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":15793,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:44153:6","nodeType":"YulBlock","src":"0:44153:6","statements":[{"body":{"nativeSrc":"47:35:6","nodeType":"YulBlock","src":"47:35:6","statements":[{"nativeSrc":"57:19:6","nodeType":"YulAssignment","src":"57:19:6","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:6","nodeType":"YulLiteral","src":"73:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:6","nodeType":"YulIdentifier","src":"67:5:6"},"nativeSrc":"67:9:6","nodeType":"YulFunctionCall","src":"67:9:6"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:6","nodeType":"YulIdentifier","src":"57:6:6"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:6","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:6","nodeType":"YulTypedName","src":"40:6:6","type":""}],"src":"7:75:6"},{"body":{"nativeSrc":"177:28:6","nodeType":"YulBlock","src":"177:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:6","nodeType":"YulLiteral","src":"194:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:6","nodeType":"YulLiteral","src":"197:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:6","nodeType":"YulIdentifier","src":"187:6:6"},"nativeSrc":"187:12:6","nodeType":"YulFunctionCall","src":"187:12:6"},"nativeSrc":"187:12:6","nodeType":"YulExpressionStatement","src":"187:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:6","nodeType":"YulFunctionDefinition","src":"88:117:6"},{"body":{"nativeSrc":"300:28:6","nodeType":"YulBlock","src":"300:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:6","nodeType":"YulLiteral","src":"317:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:6","nodeType":"YulLiteral","src":"320:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:6","nodeType":"YulIdentifier","src":"310:6:6"},"nativeSrc":"310:12:6","nodeType":"YulFunctionCall","src":"310:12:6"},"nativeSrc":"310:12:6","nodeType":"YulExpressionStatement","src":"310:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:6","nodeType":"YulFunctionDefinition","src":"211:117:6"},{"body":{"nativeSrc":"379:32:6","nodeType":"YulBlock","src":"379:32:6","statements":[{"nativeSrc":"389:16:6","nodeType":"YulAssignment","src":"389:16:6","value":{"name":"value","nativeSrc":"400:5:6","nodeType":"YulIdentifier","src":"400:5:6"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:6","nodeType":"YulIdentifier","src":"389:7:6"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:6","nodeType":"YulTypedName","src":"361:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:6","nodeType":"YulTypedName","src":"371:7:6","type":""}],"src":"334:77:6"},{"body":{"nativeSrc":"460:79:6","nodeType":"YulBlock","src":"460:79:6","statements":[{"body":{"nativeSrc":"517:16:6","nodeType":"YulBlock","src":"517:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:6","nodeType":"YulLiteral","src":"526:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:6","nodeType":"YulLiteral","src":"529:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:6","nodeType":"YulIdentifier","src":"519:6:6"},"nativeSrc":"519:12:6","nodeType":"YulFunctionCall","src":"519:12:6"},"nativeSrc":"519:12:6","nodeType":"YulExpressionStatement","src":"519:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:6","nodeType":"YulIdentifier","src":"483:5:6"},{"arguments":[{"name":"value","nativeSrc":"508:5:6","nodeType":"YulIdentifier","src":"508:5:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:6","nodeType":"YulIdentifier","src":"490:17:6"},"nativeSrc":"490:24:6","nodeType":"YulFunctionCall","src":"490:24:6"}],"functionName":{"name":"eq","nativeSrc":"480:2:6","nodeType":"YulIdentifier","src":"480:2:6"},"nativeSrc":"480:35:6","nodeType":"YulFunctionCall","src":"480:35:6"}],"functionName":{"name":"iszero","nativeSrc":"473:6:6","nodeType":"YulIdentifier","src":"473:6:6"},"nativeSrc":"473:43:6","nodeType":"YulFunctionCall","src":"473:43:6"},"nativeSrc":"470:63:6","nodeType":"YulIf","src":"470:63:6"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:6","nodeType":"YulTypedName","src":"453:5:6","type":""}],"src":"417:122:6"},{"body":{"nativeSrc":"597:87:6","nodeType":"YulBlock","src":"597:87:6","statements":[{"nativeSrc":"607:29:6","nodeType":"YulAssignment","src":"607:29:6","value":{"arguments":[{"name":"offset","nativeSrc":"629:6:6","nodeType":"YulIdentifier","src":"629:6:6"}],"functionName":{"name":"calldataload","nativeSrc":"616:12:6","nodeType":"YulIdentifier","src":"616:12:6"},"nativeSrc":"616:20:6","nodeType":"YulFunctionCall","src":"616:20:6"},"variableNames":[{"name":"value","nativeSrc":"607:5:6","nodeType":"YulIdentifier","src":"607:5:6"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"672:5:6","nodeType":"YulIdentifier","src":"672:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"645:26:6","nodeType":"YulIdentifier","src":"645:26:6"},"nativeSrc":"645:33:6","nodeType":"YulFunctionCall","src":"645:33:6"},"nativeSrc":"645:33:6","nodeType":"YulExpressionStatement","src":"645:33:6"}]},"name":"abi_decode_t_uint256","nativeSrc":"545:139:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"575:6:6","nodeType":"YulTypedName","src":"575:6:6","type":""},{"name":"end","nativeSrc":"583:3:6","nodeType":"YulTypedName","src":"583:3:6","type":""}],"returnVariables":[{"name":"value","nativeSrc":"591:5:6","nodeType":"YulTypedName","src":"591:5:6","type":""}],"src":"545:139:6"},{"body":{"nativeSrc":"735:81:6","nodeType":"YulBlock","src":"735:81:6","statements":[{"nativeSrc":"745:65:6","nodeType":"YulAssignment","src":"745:65:6","value":{"arguments":[{"name":"value","nativeSrc":"760:5:6","nodeType":"YulIdentifier","src":"760:5:6"},{"kind":"number","nativeSrc":"767:42:6","nodeType":"YulLiteral","src":"767:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"756:3:6","nodeType":"YulIdentifier","src":"756:3:6"},"nativeSrc":"756:54:6","nodeType":"YulFunctionCall","src":"756:54:6"},"variableNames":[{"name":"cleaned","nativeSrc":"745:7:6","nodeType":"YulIdentifier","src":"745:7:6"}]}]},"name":"cleanup_t_uint160","nativeSrc":"690:126:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"717:5:6","nodeType":"YulTypedName","src":"717:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"727:7:6","nodeType":"YulTypedName","src":"727:7:6","type":""}],"src":"690:126:6"},{"body":{"nativeSrc":"867:51:6","nodeType":"YulBlock","src":"867:51:6","statements":[{"nativeSrc":"877:35:6","nodeType":"YulAssignment","src":"877:35:6","value":{"arguments":[{"name":"value","nativeSrc":"906:5:6","nodeType":"YulIdentifier","src":"906:5:6"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"888:17:6","nodeType":"YulIdentifier","src":"888:17:6"},"nativeSrc":"888:24:6","nodeType":"YulFunctionCall","src":"888:24:6"},"variableNames":[{"name":"cleaned","nativeSrc":"877:7:6","nodeType":"YulIdentifier","src":"877:7:6"}]}]},"name":"cleanup_t_address","nativeSrc":"822:96:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"849:5:6","nodeType":"YulTypedName","src":"849:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"859:7:6","nodeType":"YulTypedName","src":"859:7:6","type":""}],"src":"822:96:6"},{"body":{"nativeSrc":"967:79:6","nodeType":"YulBlock","src":"967:79:6","statements":[{"body":{"nativeSrc":"1024:16:6","nodeType":"YulBlock","src":"1024:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1033:1:6","nodeType":"YulLiteral","src":"1033:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"1036:1:6","nodeType":"YulLiteral","src":"1036:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1026:6:6","nodeType":"YulIdentifier","src":"1026:6:6"},"nativeSrc":"1026:12:6","nodeType":"YulFunctionCall","src":"1026:12:6"},"nativeSrc":"1026:12:6","nodeType":"YulExpressionStatement","src":"1026:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"990:5:6","nodeType":"YulIdentifier","src":"990:5:6"},{"arguments":[{"name":"value","nativeSrc":"1015:5:6","nodeType":"YulIdentifier","src":"1015:5:6"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"997:17:6","nodeType":"YulIdentifier","src":"997:17:6"},"nativeSrc":"997:24:6","nodeType":"YulFunctionCall","src":"997:24:6"}],"functionName":{"name":"eq","nativeSrc":"987:2:6","nodeType":"YulIdentifier","src":"987:2:6"},"nativeSrc":"987:35:6","nodeType":"YulFunctionCall","src":"987:35:6"}],"functionName":{"name":"iszero","nativeSrc":"980:6:6","nodeType":"YulIdentifier","src":"980:6:6"},"nativeSrc":"980:43:6","nodeType":"YulFunctionCall","src":"980:43:6"},"nativeSrc":"977:63:6","nodeType":"YulIf","src":"977:63:6"}]},"name":"validator_revert_t_address","nativeSrc":"924:122:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"960:5:6","nodeType":"YulTypedName","src":"960:5:6","type":""}],"src":"924:122:6"},{"body":{"nativeSrc":"1104:87:6","nodeType":"YulBlock","src":"1104:87:6","statements":[{"nativeSrc":"1114:29:6","nodeType":"YulAssignment","src":"1114:29:6","value":{"arguments":[{"name":"offset","nativeSrc":"1136:6:6","nodeType":"YulIdentifier","src":"1136:6:6"}],"functionName":{"name":"calldataload","nativeSrc":"1123:12:6","nodeType":"YulIdentifier","src":"1123:12:6"},"nativeSrc":"1123:20:6","nodeType":"YulFunctionCall","src":"1123:20:6"},"variableNames":[{"name":"value","nativeSrc":"1114:5:6","nodeType":"YulIdentifier","src":"1114:5:6"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1179:5:6","nodeType":"YulIdentifier","src":"1179:5:6"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1152:26:6","nodeType":"YulIdentifier","src":"1152:26:6"},"nativeSrc":"1152:33:6","nodeType":"YulFunctionCall","src":"1152:33:6"},"nativeSrc":"1152:33:6","nodeType":"YulExpressionStatement","src":"1152:33:6"}]},"name":"abi_decode_t_address","nativeSrc":"1052:139:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1082:6:6","nodeType":"YulTypedName","src":"1082:6:6","type":""},{"name":"end","nativeSrc":"1090:3:6","nodeType":"YulTypedName","src":"1090:3:6","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1098:5:6","nodeType":"YulTypedName","src":"1098:5:6","type":""}],"src":"1052:139:6"},{"body":{"nativeSrc":"1280:391:6","nodeType":"YulBlock","src":"1280:391:6","statements":[{"body":{"nativeSrc":"1326:83:6","nodeType":"YulBlock","src":"1326:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1328:77:6","nodeType":"YulIdentifier","src":"1328:77:6"},"nativeSrc":"1328:79:6","nodeType":"YulFunctionCall","src":"1328:79:6"},"nativeSrc":"1328:79:6","nodeType":"YulExpressionStatement","src":"1328:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1301:7:6","nodeType":"YulIdentifier","src":"1301:7:6"},{"name":"headStart","nativeSrc":"1310:9:6","nodeType":"YulIdentifier","src":"1310:9:6"}],"functionName":{"name":"sub","nativeSrc":"1297:3:6","nodeType":"YulIdentifier","src":"1297:3:6"},"nativeSrc":"1297:23:6","nodeType":"YulFunctionCall","src":"1297:23:6"},{"kind":"number","nativeSrc":"1322:2:6","nodeType":"YulLiteral","src":"1322:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1293:3:6","nodeType":"YulIdentifier","src":"1293:3:6"},"nativeSrc":"1293:32:6","nodeType":"YulFunctionCall","src":"1293:32:6"},"nativeSrc":"1290:119:6","nodeType":"YulIf","src":"1290:119:6"},{"nativeSrc":"1419:117:6","nodeType":"YulBlock","src":"1419:117:6","statements":[{"nativeSrc":"1434:15:6","nodeType":"YulVariableDeclaration","src":"1434:15:6","value":{"kind":"number","nativeSrc":"1448:1:6","nodeType":"YulLiteral","src":"1448:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1438:6:6","nodeType":"YulTypedName","src":"1438:6:6","type":""}]},{"nativeSrc":"1463:63:6","nodeType":"YulAssignment","src":"1463:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1498:9:6","nodeType":"YulIdentifier","src":"1498:9:6"},{"name":"offset","nativeSrc":"1509:6:6","nodeType":"YulIdentifier","src":"1509:6:6"}],"functionName":{"name":"add","nativeSrc":"1494:3:6","nodeType":"YulIdentifier","src":"1494:3:6"},"nativeSrc":"1494:22:6","nodeType":"YulFunctionCall","src":"1494:22:6"},{"name":"dataEnd","nativeSrc":"1518:7:6","nodeType":"YulIdentifier","src":"1518:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1473:20:6","nodeType":"YulIdentifier","src":"1473:20:6"},"nativeSrc":"1473:53:6","nodeType":"YulFunctionCall","src":"1473:53:6"},"variableNames":[{"name":"value0","nativeSrc":"1463:6:6","nodeType":"YulIdentifier","src":"1463:6:6"}]}]},{"nativeSrc":"1546:118:6","nodeType":"YulBlock","src":"1546:118:6","statements":[{"nativeSrc":"1561:16:6","nodeType":"YulVariableDeclaration","src":"1561:16:6","value":{"kind":"number","nativeSrc":"1575:2:6","nodeType":"YulLiteral","src":"1575:2:6","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1565:6:6","nodeType":"YulTypedName","src":"1565:6:6","type":""}]},{"nativeSrc":"1591:63:6","nodeType":"YulAssignment","src":"1591:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1626:9:6","nodeType":"YulIdentifier","src":"1626:9:6"},{"name":"offset","nativeSrc":"1637:6:6","nodeType":"YulIdentifier","src":"1637:6:6"}],"functionName":{"name":"add","nativeSrc":"1622:3:6","nodeType":"YulIdentifier","src":"1622:3:6"},"nativeSrc":"1622:22:6","nodeType":"YulFunctionCall","src":"1622:22:6"},{"name":"dataEnd","nativeSrc":"1646:7:6","nodeType":"YulIdentifier","src":"1646:7:6"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1601:20:6","nodeType":"YulIdentifier","src":"1601:20:6"},"nativeSrc":"1601:53:6","nodeType":"YulFunctionCall","src":"1601:53:6"},"variableNames":[{"name":"value1","nativeSrc":"1591:6:6","nodeType":"YulIdentifier","src":"1591:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nativeSrc":"1197:474:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1242:9:6","nodeType":"YulTypedName","src":"1242:9:6","type":""},{"name":"dataEnd","nativeSrc":"1253:7:6","nodeType":"YulTypedName","src":"1253:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1265:6:6","nodeType":"YulTypedName","src":"1265:6:6","type":""},{"name":"value1","nativeSrc":"1273:6:6","nodeType":"YulTypedName","src":"1273:6:6","type":""}],"src":"1197:474:6"},{"body":{"nativeSrc":"1719:48:6","nodeType":"YulBlock","src":"1719:48:6","statements":[{"nativeSrc":"1729:32:6","nodeType":"YulAssignment","src":"1729:32:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1754:5:6","nodeType":"YulIdentifier","src":"1754:5:6"}],"functionName":{"name":"iszero","nativeSrc":"1747:6:6","nodeType":"YulIdentifier","src":"1747:6:6"},"nativeSrc":"1747:13:6","nodeType":"YulFunctionCall","src":"1747:13:6"}],"functionName":{"name":"iszero","nativeSrc":"1740:6:6","nodeType":"YulIdentifier","src":"1740:6:6"},"nativeSrc":"1740:21:6","nodeType":"YulFunctionCall","src":"1740:21:6"},"variableNames":[{"name":"cleaned","nativeSrc":"1729:7:6","nodeType":"YulIdentifier","src":"1729:7:6"}]}]},"name":"cleanup_t_bool","nativeSrc":"1677:90:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1701:5:6","nodeType":"YulTypedName","src":"1701:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1711:7:6","nodeType":"YulTypedName","src":"1711:7:6","type":""}],"src":"1677:90:6"},{"body":{"nativeSrc":"1832:50:6","nodeType":"YulBlock","src":"1832:50:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1849:3:6","nodeType":"YulIdentifier","src":"1849:3:6"},{"arguments":[{"name":"value","nativeSrc":"1869:5:6","nodeType":"YulIdentifier","src":"1869:5:6"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1854:14:6","nodeType":"YulIdentifier","src":"1854:14:6"},"nativeSrc":"1854:21:6","nodeType":"YulFunctionCall","src":"1854:21:6"}],"functionName":{"name":"mstore","nativeSrc":"1842:6:6","nodeType":"YulIdentifier","src":"1842:6:6"},"nativeSrc":"1842:34:6","nodeType":"YulFunctionCall","src":"1842:34:6"},"nativeSrc":"1842:34:6","nodeType":"YulExpressionStatement","src":"1842:34:6"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1773:109:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1820:5:6","nodeType":"YulTypedName","src":"1820:5:6","type":""},{"name":"pos","nativeSrc":"1827:3:6","nodeType":"YulTypedName","src":"1827:3:6","type":""}],"src":"1773:109:6"},{"body":{"nativeSrc":"1980:118:6","nodeType":"YulBlock","src":"1980:118:6","statements":[{"nativeSrc":"1990:26:6","nodeType":"YulAssignment","src":"1990:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"2002:9:6","nodeType":"YulIdentifier","src":"2002:9:6"},{"kind":"number","nativeSrc":"2013:2:6","nodeType":"YulLiteral","src":"2013:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1998:3:6","nodeType":"YulIdentifier","src":"1998:3:6"},"nativeSrc":"1998:18:6","nodeType":"YulFunctionCall","src":"1998:18:6"},"variableNames":[{"name":"tail","nativeSrc":"1990:4:6","nodeType":"YulIdentifier","src":"1990:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2064:6:6","nodeType":"YulIdentifier","src":"2064:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"2077:9:6","nodeType":"YulIdentifier","src":"2077:9:6"},{"kind":"number","nativeSrc":"2088:1:6","nodeType":"YulLiteral","src":"2088:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2073:3:6","nodeType":"YulIdentifier","src":"2073:3:6"},"nativeSrc":"2073:17:6","nodeType":"YulFunctionCall","src":"2073:17:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"2026:37:6","nodeType":"YulIdentifier","src":"2026:37:6"},"nativeSrc":"2026:65:6","nodeType":"YulFunctionCall","src":"2026:65:6"},"nativeSrc":"2026:65:6","nodeType":"YulExpressionStatement","src":"2026:65:6"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1888:210:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1952:9:6","nodeType":"YulTypedName","src":"1952:9:6","type":""},{"name":"value0","nativeSrc":"1964:6:6","nodeType":"YulTypedName","src":"1964:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1975:4:6","nodeType":"YulTypedName","src":"1975:4:6","type":""}],"src":"1888:210:6"},{"body":{"nativeSrc":"2170:263:6","nodeType":"YulBlock","src":"2170:263:6","statements":[{"body":{"nativeSrc":"2216:83:6","nodeType":"YulBlock","src":"2216:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2218:77:6","nodeType":"YulIdentifier","src":"2218:77:6"},"nativeSrc":"2218:79:6","nodeType":"YulFunctionCall","src":"2218:79:6"},"nativeSrc":"2218:79:6","nodeType":"YulExpressionStatement","src":"2218:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2191:7:6","nodeType":"YulIdentifier","src":"2191:7:6"},{"name":"headStart","nativeSrc":"2200:9:6","nodeType":"YulIdentifier","src":"2200:9:6"}],"functionName":{"name":"sub","nativeSrc":"2187:3:6","nodeType":"YulIdentifier","src":"2187:3:6"},"nativeSrc":"2187:23:6","nodeType":"YulFunctionCall","src":"2187:23:6"},{"kind":"number","nativeSrc":"2212:2:6","nodeType":"YulLiteral","src":"2212:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2183:3:6","nodeType":"YulIdentifier","src":"2183:3:6"},"nativeSrc":"2183:32:6","nodeType":"YulFunctionCall","src":"2183:32:6"},"nativeSrc":"2180:119:6","nodeType":"YulIf","src":"2180:119:6"},{"nativeSrc":"2309:117:6","nodeType":"YulBlock","src":"2309:117:6","statements":[{"nativeSrc":"2324:15:6","nodeType":"YulVariableDeclaration","src":"2324:15:6","value":{"kind":"number","nativeSrc":"2338:1:6","nodeType":"YulLiteral","src":"2338:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2328:6:6","nodeType":"YulTypedName","src":"2328:6:6","type":""}]},{"nativeSrc":"2353:63:6","nodeType":"YulAssignment","src":"2353:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2388:9:6","nodeType":"YulIdentifier","src":"2388:9:6"},{"name":"offset","nativeSrc":"2399:6:6","nodeType":"YulIdentifier","src":"2399:6:6"}],"functionName":{"name":"add","nativeSrc":"2384:3:6","nodeType":"YulIdentifier","src":"2384:3:6"},"nativeSrc":"2384:22:6","nodeType":"YulFunctionCall","src":"2384:22:6"},{"name":"dataEnd","nativeSrc":"2408:7:6","nodeType":"YulIdentifier","src":"2408:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2363:20:6","nodeType":"YulIdentifier","src":"2363:20:6"},"nativeSrc":"2363:53:6","nodeType":"YulFunctionCall","src":"2363:53:6"},"variableNames":[{"name":"value0","nativeSrc":"2353:6:6","nodeType":"YulIdentifier","src":"2353:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"2104:329:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2140:9:6","nodeType":"YulTypedName","src":"2140:9:6","type":""},{"name":"dataEnd","nativeSrc":"2151:7:6","nodeType":"YulTypedName","src":"2151:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2163:6:6","nodeType":"YulTypedName","src":"2163:6:6","type":""}],"src":"2104:329:6"},{"body":{"nativeSrc":"2504:53:6","nodeType":"YulBlock","src":"2504:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2521:3:6","nodeType":"YulIdentifier","src":"2521:3:6"},{"arguments":[{"name":"value","nativeSrc":"2544:5:6","nodeType":"YulIdentifier","src":"2544:5:6"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2526:17:6","nodeType":"YulIdentifier","src":"2526:17:6"},"nativeSrc":"2526:24:6","nodeType":"YulFunctionCall","src":"2526:24:6"}],"functionName":{"name":"mstore","nativeSrc":"2514:6:6","nodeType":"YulIdentifier","src":"2514:6:6"},"nativeSrc":"2514:37:6","nodeType":"YulFunctionCall","src":"2514:37:6"},"nativeSrc":"2514:37:6","nodeType":"YulExpressionStatement","src":"2514:37:6"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2439:118:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2492:5:6","nodeType":"YulTypedName","src":"2492:5:6","type":""},{"name":"pos","nativeSrc":"2499:3:6","nodeType":"YulTypedName","src":"2499:3:6","type":""}],"src":"2439:118:6"},{"body":{"nativeSrc":"2622:40:6","nodeType":"YulBlock","src":"2622:40:6","statements":[{"nativeSrc":"2633:22:6","nodeType":"YulAssignment","src":"2633:22:6","value":{"arguments":[{"name":"value","nativeSrc":"2649:5:6","nodeType":"YulIdentifier","src":"2649:5:6"}],"functionName":{"name":"mload","nativeSrc":"2643:5:6","nodeType":"YulIdentifier","src":"2643:5:6"},"nativeSrc":"2643:12:6","nodeType":"YulFunctionCall","src":"2643:12:6"},"variableNames":[{"name":"length","nativeSrc":"2633:6:6","nodeType":"YulIdentifier","src":"2633:6:6"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"2563:99:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2605:5:6","nodeType":"YulTypedName","src":"2605:5:6","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2615:6:6","nodeType":"YulTypedName","src":"2615:6:6","type":""}],"src":"2563:99:6"},{"body":{"nativeSrc":"2764:73:6","nodeType":"YulBlock","src":"2764:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2781:3:6","nodeType":"YulIdentifier","src":"2781:3:6"},{"name":"length","nativeSrc":"2786:6:6","nodeType":"YulIdentifier","src":"2786:6:6"}],"functionName":{"name":"mstore","nativeSrc":"2774:6:6","nodeType":"YulIdentifier","src":"2774:6:6"},"nativeSrc":"2774:19:6","nodeType":"YulFunctionCall","src":"2774:19:6"},"nativeSrc":"2774:19:6","nodeType":"YulExpressionStatement","src":"2774:19:6"},{"nativeSrc":"2802:29:6","nodeType":"YulAssignment","src":"2802:29:6","value":{"arguments":[{"name":"pos","nativeSrc":"2821:3:6","nodeType":"YulIdentifier","src":"2821:3:6"},{"kind":"number","nativeSrc":"2826:4:6","nodeType":"YulLiteral","src":"2826:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2817:3:6","nodeType":"YulIdentifier","src":"2817:3:6"},"nativeSrc":"2817:14:6","nodeType":"YulFunctionCall","src":"2817:14:6"},"variableNames":[{"name":"updated_pos","nativeSrc":"2802:11:6","nodeType":"YulIdentifier","src":"2802:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2668:169:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2736:3:6","nodeType":"YulTypedName","src":"2736:3:6","type":""},{"name":"length","nativeSrc":"2741:6:6","nodeType":"YulTypedName","src":"2741:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"2752:11:6","nodeType":"YulTypedName","src":"2752:11:6","type":""}],"src":"2668:169:6"},{"body":{"nativeSrc":"2905:184:6","nodeType":"YulBlock","src":"2905:184:6","statements":[{"nativeSrc":"2915:10:6","nodeType":"YulVariableDeclaration","src":"2915:10:6","value":{"kind":"number","nativeSrc":"2924:1:6","nodeType":"YulLiteral","src":"2924:1:6","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2919:1:6","nodeType":"YulTypedName","src":"2919:1:6","type":""}]},{"body":{"nativeSrc":"2984:63:6","nodeType":"YulBlock","src":"2984:63:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3009:3:6","nodeType":"YulIdentifier","src":"3009:3:6"},{"name":"i","nativeSrc":"3014:1:6","nodeType":"YulIdentifier","src":"3014:1:6"}],"functionName":{"name":"add","nativeSrc":"3005:3:6","nodeType":"YulIdentifier","src":"3005:3:6"},"nativeSrc":"3005:11:6","nodeType":"YulFunctionCall","src":"3005:11:6"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3028:3:6","nodeType":"YulIdentifier","src":"3028:3:6"},{"name":"i","nativeSrc":"3033:1:6","nodeType":"YulIdentifier","src":"3033:1:6"}],"functionName":{"name":"add","nativeSrc":"3024:3:6","nodeType":"YulIdentifier","src":"3024:3:6"},"nativeSrc":"3024:11:6","nodeType":"YulFunctionCall","src":"3024:11:6"}],"functionName":{"name":"mload","nativeSrc":"3018:5:6","nodeType":"YulIdentifier","src":"3018:5:6"},"nativeSrc":"3018:18:6","nodeType":"YulFunctionCall","src":"3018:18:6"}],"functionName":{"name":"mstore","nativeSrc":"2998:6:6","nodeType":"YulIdentifier","src":"2998:6:6"},"nativeSrc":"2998:39:6","nodeType":"YulFunctionCall","src":"2998:39:6"},"nativeSrc":"2998:39:6","nodeType":"YulExpressionStatement","src":"2998:39:6"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2945:1:6","nodeType":"YulIdentifier","src":"2945:1:6"},{"name":"length","nativeSrc":"2948:6:6","nodeType":"YulIdentifier","src":"2948:6:6"}],"functionName":{"name":"lt","nativeSrc":"2942:2:6","nodeType":"YulIdentifier","src":"2942:2:6"},"nativeSrc":"2942:13:6","nodeType":"YulFunctionCall","src":"2942:13:6"},"nativeSrc":"2934:113:6","nodeType":"YulForLoop","post":{"nativeSrc":"2956:19:6","nodeType":"YulBlock","src":"2956:19:6","statements":[{"nativeSrc":"2958:15:6","nodeType":"YulAssignment","src":"2958:15:6","value":{"arguments":[{"name":"i","nativeSrc":"2967:1:6","nodeType":"YulIdentifier","src":"2967:1:6"},{"kind":"number","nativeSrc":"2970:2:6","nodeType":"YulLiteral","src":"2970:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2963:3:6","nodeType":"YulIdentifier","src":"2963:3:6"},"nativeSrc":"2963:10:6","nodeType":"YulFunctionCall","src":"2963:10:6"},"variableNames":[{"name":"i","nativeSrc":"2958:1:6","nodeType":"YulIdentifier","src":"2958:1:6"}]}]},"pre":{"nativeSrc":"2938:3:6","nodeType":"YulBlock","src":"2938:3:6","statements":[]},"src":"2934:113:6"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3067:3:6","nodeType":"YulIdentifier","src":"3067:3:6"},{"name":"length","nativeSrc":"3072:6:6","nodeType":"YulIdentifier","src":"3072:6:6"}],"functionName":{"name":"add","nativeSrc":"3063:3:6","nodeType":"YulIdentifier","src":"3063:3:6"},"nativeSrc":"3063:16:6","nodeType":"YulFunctionCall","src":"3063:16:6"},{"kind":"number","nativeSrc":"3081:1:6","nodeType":"YulLiteral","src":"3081:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3056:6:6","nodeType":"YulIdentifier","src":"3056:6:6"},"nativeSrc":"3056:27:6","nodeType":"YulFunctionCall","src":"3056:27:6"},"nativeSrc":"3056:27:6","nodeType":"YulExpressionStatement","src":"3056:27:6"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2843:246:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2887:3:6","nodeType":"YulTypedName","src":"2887:3:6","type":""},{"name":"dst","nativeSrc":"2892:3:6","nodeType":"YulTypedName","src":"2892:3:6","type":""},{"name":"length","nativeSrc":"2897:6:6","nodeType":"YulTypedName","src":"2897:6:6","type":""}],"src":"2843:246:6"},{"body":{"nativeSrc":"3143:54:6","nodeType":"YulBlock","src":"3143:54:6","statements":[{"nativeSrc":"3153:38:6","nodeType":"YulAssignment","src":"3153:38:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3171:5:6","nodeType":"YulIdentifier","src":"3171:5:6"},{"kind":"number","nativeSrc":"3178:2:6","nodeType":"YulLiteral","src":"3178:2:6","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3167:3:6","nodeType":"YulIdentifier","src":"3167:3:6"},"nativeSrc":"3167:14:6","nodeType":"YulFunctionCall","src":"3167:14:6"},{"arguments":[{"kind":"number","nativeSrc":"3187:2:6","nodeType":"YulLiteral","src":"3187:2:6","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3183:3:6","nodeType":"YulIdentifier","src":"3183:3:6"},"nativeSrc":"3183:7:6","nodeType":"YulFunctionCall","src":"3183:7:6"}],"functionName":{"name":"and","nativeSrc":"3163:3:6","nodeType":"YulIdentifier","src":"3163:3:6"},"nativeSrc":"3163:28:6","nodeType":"YulFunctionCall","src":"3163:28:6"},"variableNames":[{"name":"result","nativeSrc":"3153:6:6","nodeType":"YulIdentifier","src":"3153:6:6"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"3095:102:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3126:5:6","nodeType":"YulTypedName","src":"3126:5:6","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3136:6:6","nodeType":"YulTypedName","src":"3136:6:6","type":""}],"src":"3095:102:6"},{"body":{"nativeSrc":"3295:285:6","nodeType":"YulBlock","src":"3295:285:6","statements":[{"nativeSrc":"3305:53:6","nodeType":"YulVariableDeclaration","src":"3305:53:6","value":{"arguments":[{"name":"value","nativeSrc":"3352:5:6","nodeType":"YulIdentifier","src":"3352:5:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"3319:32:6","nodeType":"YulIdentifier","src":"3319:32:6"},"nativeSrc":"3319:39:6","nodeType":"YulFunctionCall","src":"3319:39:6"},"variables":[{"name":"length","nativeSrc":"3309:6:6","nodeType":"YulTypedName","src":"3309:6:6","type":""}]},{"nativeSrc":"3367:78:6","nodeType":"YulAssignment","src":"3367:78:6","value":{"arguments":[{"name":"pos","nativeSrc":"3433:3:6","nodeType":"YulIdentifier","src":"3433:3:6"},{"name":"length","nativeSrc":"3438:6:6","nodeType":"YulIdentifier","src":"3438:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3374:58:6","nodeType":"YulIdentifier","src":"3374:58:6"},"nativeSrc":"3374:71:6","nodeType":"YulFunctionCall","src":"3374:71:6"},"variableNames":[{"name":"pos","nativeSrc":"3367:3:6","nodeType":"YulIdentifier","src":"3367:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3493:5:6","nodeType":"YulIdentifier","src":"3493:5:6"},{"kind":"number","nativeSrc":"3500:4:6","nodeType":"YulLiteral","src":"3500:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3489:3:6","nodeType":"YulIdentifier","src":"3489:3:6"},"nativeSrc":"3489:16:6","nodeType":"YulFunctionCall","src":"3489:16:6"},{"name":"pos","nativeSrc":"3507:3:6","nodeType":"YulIdentifier","src":"3507:3:6"},{"name":"length","nativeSrc":"3512:6:6","nodeType":"YulIdentifier","src":"3512:6:6"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3454:34:6","nodeType":"YulIdentifier","src":"3454:34:6"},"nativeSrc":"3454:65:6","nodeType":"YulFunctionCall","src":"3454:65:6"},"nativeSrc":"3454:65:6","nodeType":"YulExpressionStatement","src":"3454:65:6"},{"nativeSrc":"3528:46:6","nodeType":"YulAssignment","src":"3528:46:6","value":{"arguments":[{"name":"pos","nativeSrc":"3539:3:6","nodeType":"YulIdentifier","src":"3539:3:6"},{"arguments":[{"name":"length","nativeSrc":"3566:6:6","nodeType":"YulIdentifier","src":"3566:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"3544:21:6","nodeType":"YulIdentifier","src":"3544:21:6"},"nativeSrc":"3544:29:6","nodeType":"YulFunctionCall","src":"3544:29:6"}],"functionName":{"name":"add","nativeSrc":"3535:3:6","nodeType":"YulIdentifier","src":"3535:3:6"},"nativeSrc":"3535:39:6","nodeType":"YulFunctionCall","src":"3535:39:6"},"variableNames":[{"name":"end","nativeSrc":"3528:3:6","nodeType":"YulIdentifier","src":"3528:3:6"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"3203:377:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3276:5:6","nodeType":"YulTypedName","src":"3276:5:6","type":""},{"name":"pos","nativeSrc":"3283:3:6","nodeType":"YulTypedName","src":"3283:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3291:3:6","nodeType":"YulTypedName","src":"3291:3:6","type":""}],"src":"3203:377:6"},{"body":{"nativeSrc":"3651:53:6","nodeType":"YulBlock","src":"3651:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3668:3:6","nodeType":"YulIdentifier","src":"3668:3:6"},{"arguments":[{"name":"value","nativeSrc":"3691:5:6","nodeType":"YulIdentifier","src":"3691:5:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3673:17:6","nodeType":"YulIdentifier","src":"3673:17:6"},"nativeSrc":"3673:24:6","nodeType":"YulFunctionCall","src":"3673:24:6"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:6","nodeType":"YulIdentifier","src":"3661:6:6"},"nativeSrc":"3661:37:6","nodeType":"YulFunctionCall","src":"3661:37:6"},"nativeSrc":"3661:37:6","nodeType":"YulExpressionStatement","src":"3661:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3586:118:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3639:5:6","nodeType":"YulTypedName","src":"3639:5:6","type":""},{"name":"pos","nativeSrc":"3646:3:6","nodeType":"YulTypedName","src":"3646:3:6","type":""}],"src":"3586:118:6"},{"body":{"nativeSrc":"3794:40:6","nodeType":"YulBlock","src":"3794:40:6","statements":[{"nativeSrc":"3805:22:6","nodeType":"YulAssignment","src":"3805:22:6","value":{"arguments":[{"name":"value","nativeSrc":"3821:5:6","nodeType":"YulIdentifier","src":"3821:5:6"}],"functionName":{"name":"mload","nativeSrc":"3815:5:6","nodeType":"YulIdentifier","src":"3815:5:6"},"nativeSrc":"3815:12:6","nodeType":"YulFunctionCall","src":"3815:12:6"},"variableNames":[{"name":"length","nativeSrc":"3805:6:6","nodeType":"YulIdentifier","src":"3805:6:6"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"3710:124:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3777:5:6","nodeType":"YulTypedName","src":"3777:5:6","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3787:6:6","nodeType":"YulTypedName","src":"3787:6:6","type":""}],"src":"3710:124:6"},{"body":{"nativeSrc":"3961:73:6","nodeType":"YulBlock","src":"3961:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3978:3:6","nodeType":"YulIdentifier","src":"3978:3:6"},{"name":"length","nativeSrc":"3983:6:6","nodeType":"YulIdentifier","src":"3983:6:6"}],"functionName":{"name":"mstore","nativeSrc":"3971:6:6","nodeType":"YulIdentifier","src":"3971:6:6"},"nativeSrc":"3971:19:6","nodeType":"YulFunctionCall","src":"3971:19:6"},"nativeSrc":"3971:19:6","nodeType":"YulExpressionStatement","src":"3971:19:6"},{"nativeSrc":"3999:29:6","nodeType":"YulAssignment","src":"3999:29:6","value":{"arguments":[{"name":"pos","nativeSrc":"4018:3:6","nodeType":"YulIdentifier","src":"4018:3:6"},{"kind":"number","nativeSrc":"4023:4:6","nodeType":"YulLiteral","src":"4023:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4014:3:6","nodeType":"YulIdentifier","src":"4014:3:6"},"nativeSrc":"4014:14:6","nodeType":"YulFunctionCall","src":"4014:14:6"},"variableNames":[{"name":"updated_pos","nativeSrc":"3999:11:6","nodeType":"YulIdentifier","src":"3999:11:6"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"3840:194:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3933:3:6","nodeType":"YulTypedName","src":"3933:3:6","type":""},{"name":"length","nativeSrc":"3938:6:6","nodeType":"YulTypedName","src":"3938:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"3949:11:6","nodeType":"YulTypedName","src":"3949:11:6","type":""}],"src":"3840:194:6"},{"body":{"nativeSrc":"4122:60:6","nodeType":"YulBlock","src":"4122:60:6","statements":[{"nativeSrc":"4132:11:6","nodeType":"YulAssignment","src":"4132:11:6","value":{"name":"ptr","nativeSrc":"4140:3:6","nodeType":"YulIdentifier","src":"4140:3:6"},"variableNames":[{"name":"data","nativeSrc":"4132:4:6","nodeType":"YulIdentifier","src":"4132:4:6"}]},{"nativeSrc":"4153:22:6","nodeType":"YulAssignment","src":"4153:22:6","value":{"arguments":[{"name":"ptr","nativeSrc":"4165:3:6","nodeType":"YulIdentifier","src":"4165:3:6"},{"kind":"number","nativeSrc":"4170:4:6","nodeType":"YulLiteral","src":"4170:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4161:3:6","nodeType":"YulIdentifier","src":"4161:3:6"},"nativeSrc":"4161:14:6","nodeType":"YulFunctionCall","src":"4161:14:6"},"variableNames":[{"name":"data","nativeSrc":"4153:4:6","nodeType":"YulIdentifier","src":"4153:4:6"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"4040:142:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4109:3:6","nodeType":"YulTypedName","src":"4109:3:6","type":""}],"returnVariables":[{"name":"data","nativeSrc":"4117:4:6","nodeType":"YulTypedName","src":"4117:4:6","type":""}],"src":"4040:142:6"},{"body":{"nativeSrc":"4274:73:6","nodeType":"YulBlock","src":"4274:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4291:3:6","nodeType":"YulIdentifier","src":"4291:3:6"},{"name":"length","nativeSrc":"4296:6:6","nodeType":"YulIdentifier","src":"4296:6:6"}],"functionName":{"name":"mstore","nativeSrc":"4284:6:6","nodeType":"YulIdentifier","src":"4284:6:6"},"nativeSrc":"4284:19:6","nodeType":"YulFunctionCall","src":"4284:19:6"},"nativeSrc":"4284:19:6","nodeType":"YulExpressionStatement","src":"4284:19:6"},{"nativeSrc":"4312:29:6","nodeType":"YulAssignment","src":"4312:29:6","value":{"arguments":[{"name":"pos","nativeSrc":"4331:3:6","nodeType":"YulIdentifier","src":"4331:3:6"},{"kind":"number","nativeSrc":"4336:4:6","nodeType":"YulLiteral","src":"4336:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4327:3:6","nodeType":"YulIdentifier","src":"4327:3:6"},"nativeSrc":"4327:14:6","nodeType":"YulFunctionCall","src":"4327:14:6"},"variableNames":[{"name":"updated_pos","nativeSrc":"4312:11:6","nodeType":"YulIdentifier","src":"4312:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nativeSrc":"4188:159:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4246:3:6","nodeType":"YulTypedName","src":"4246:3:6","type":""},{"name":"length","nativeSrc":"4251:6:6","nodeType":"YulTypedName","src":"4251:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"4262:11:6","nodeType":"YulTypedName","src":"4262:11:6","type":""}],"src":"4188:159:6"},{"body":{"nativeSrc":"4435:275:6","nodeType":"YulBlock","src":"4435:275:6","statements":[{"nativeSrc":"4445:53:6","nodeType":"YulVariableDeclaration","src":"4445:53:6","value":{"arguments":[{"name":"value","nativeSrc":"4492:5:6","nodeType":"YulIdentifier","src":"4492:5:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"4459:32:6","nodeType":"YulIdentifier","src":"4459:32:6"},"nativeSrc":"4459:39:6","nodeType":"YulFunctionCall","src":"4459:39:6"},"variables":[{"name":"length","nativeSrc":"4449:6:6","nodeType":"YulTypedName","src":"4449:6:6","type":""}]},{"nativeSrc":"4507:68:6","nodeType":"YulAssignment","src":"4507:68:6","value":{"arguments":[{"name":"pos","nativeSrc":"4563:3:6","nodeType":"YulIdentifier","src":"4563:3:6"},{"name":"length","nativeSrc":"4568:6:6","nodeType":"YulIdentifier","src":"4568:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nativeSrc":"4514:48:6","nodeType":"YulIdentifier","src":"4514:48:6"},"nativeSrc":"4514:61:6","nodeType":"YulFunctionCall","src":"4514:61:6"},"variableNames":[{"name":"pos","nativeSrc":"4507:3:6","nodeType":"YulIdentifier","src":"4507:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4623:5:6","nodeType":"YulIdentifier","src":"4623:5:6"},{"kind":"number","nativeSrc":"4630:4:6","nodeType":"YulLiteral","src":"4630:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4619:3:6","nodeType":"YulIdentifier","src":"4619:3:6"},"nativeSrc":"4619:16:6","nodeType":"YulFunctionCall","src":"4619:16:6"},{"name":"pos","nativeSrc":"4637:3:6","nodeType":"YulIdentifier","src":"4637:3:6"},{"name":"length","nativeSrc":"4642:6:6","nodeType":"YulIdentifier","src":"4642:6:6"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"4584:34:6","nodeType":"YulIdentifier","src":"4584:34:6"},"nativeSrc":"4584:65:6","nodeType":"YulFunctionCall","src":"4584:65:6"},"nativeSrc":"4584:65:6","nodeType":"YulExpressionStatement","src":"4584:65:6"},{"nativeSrc":"4658:46:6","nodeType":"YulAssignment","src":"4658:46:6","value":{"arguments":[{"name":"pos","nativeSrc":"4669:3:6","nodeType":"YulIdentifier","src":"4669:3:6"},{"arguments":[{"name":"length","nativeSrc":"4696:6:6","nodeType":"YulIdentifier","src":"4696:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4674:21:6","nodeType":"YulIdentifier","src":"4674:21:6"},"nativeSrc":"4674:29:6","nodeType":"YulFunctionCall","src":"4674:29:6"}],"functionName":{"name":"add","nativeSrc":"4665:3:6","nodeType":"YulIdentifier","src":"4665:3:6"},"nativeSrc":"4665:39:6","nodeType":"YulFunctionCall","src":"4665:39:6"},"variableNames":[{"name":"end","nativeSrc":"4658:3:6","nodeType":"YulIdentifier","src":"4658:3:6"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"4353:357:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4416:5:6","nodeType":"YulTypedName","src":"4416:5:6","type":""},{"name":"pos","nativeSrc":"4423:3:6","nodeType":"YulTypedName","src":"4423:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4431:3:6","nodeType":"YulTypedName","src":"4431:3:6","type":""}],"src":"4353:357:6"},{"body":{"nativeSrc":"4816:96:6","nodeType":"YulBlock","src":"4816:96:6","statements":[{"nativeSrc":"4826:80:6","nodeType":"YulAssignment","src":"4826:80:6","value":{"arguments":[{"name":"value0","nativeSrc":"4894:6:6","nodeType":"YulIdentifier","src":"4894:6:6"},{"name":"pos","nativeSrc":"4902:3:6","nodeType":"YulIdentifier","src":"4902:3:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"4840:53:6","nodeType":"YulIdentifier","src":"4840:53:6"},"nativeSrc":"4840:66:6","nodeType":"YulFunctionCall","src":"4840:66:6"},"variableNames":[{"name":"updatedPos","nativeSrc":"4826:10:6","nodeType":"YulIdentifier","src":"4826:10:6"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"4716:196:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"4789:6:6","nodeType":"YulTypedName","src":"4789:6:6","type":""},{"name":"pos","nativeSrc":"4797:3:6","nodeType":"YulTypedName","src":"4797:3:6","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"4805:10:6","nodeType":"YulTypedName","src":"4805:10:6","type":""}],"src":"4716:196:6"},{"body":{"nativeSrc":"5003:38:6","nodeType":"YulBlock","src":"5003:38:6","statements":[{"nativeSrc":"5013:22:6","nodeType":"YulAssignment","src":"5013:22:6","value":{"arguments":[{"name":"ptr","nativeSrc":"5025:3:6","nodeType":"YulIdentifier","src":"5025:3:6"},{"kind":"number","nativeSrc":"5030:4:6","nodeType":"YulLiteral","src":"5030:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5021:3:6","nodeType":"YulIdentifier","src":"5021:3:6"},"nativeSrc":"5021:14:6","nodeType":"YulFunctionCall","src":"5021:14:6"},"variableNames":[{"name":"next","nativeSrc":"5013:4:6","nodeType":"YulIdentifier","src":"5013:4:6"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"4918:123:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4990:3:6","nodeType":"YulTypedName","src":"4990:3:6","type":""}],"returnVariables":[{"name":"next","nativeSrc":"4998:4:6","nodeType":"YulTypedName","src":"4998:4:6","type":""}],"src":"4918:123:6"},{"body":{"nativeSrc":"5219:847:6","nodeType":"YulBlock","src":"5219:847:6","statements":[{"nativeSrc":"5229:78:6","nodeType":"YulVariableDeclaration","src":"5229:78:6","value":{"arguments":[{"name":"value","nativeSrc":"5301:5:6","nodeType":"YulIdentifier","src":"5301:5:6"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"5243:57:6","nodeType":"YulIdentifier","src":"5243:57:6"},"nativeSrc":"5243:64:6","nodeType":"YulFunctionCall","src":"5243:64:6"},"variables":[{"name":"length","nativeSrc":"5233:6:6","nodeType":"YulTypedName","src":"5233:6:6","type":""}]},{"nativeSrc":"5316:103:6","nodeType":"YulAssignment","src":"5316:103:6","value":{"arguments":[{"name":"pos","nativeSrc":"5407:3:6","nodeType":"YulIdentifier","src":"5407:3:6"},{"name":"length","nativeSrc":"5412:6:6","nodeType":"YulIdentifier","src":"5412:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"5323:83:6","nodeType":"YulIdentifier","src":"5323:83:6"},"nativeSrc":"5323:96:6","nodeType":"YulFunctionCall","src":"5323:96:6"},"variableNames":[{"name":"pos","nativeSrc":"5316:3:6","nodeType":"YulIdentifier","src":"5316:3:6"}]},{"nativeSrc":"5428:20:6","nodeType":"YulVariableDeclaration","src":"5428:20:6","value":{"name":"pos","nativeSrc":"5445:3:6","nodeType":"YulIdentifier","src":"5445:3:6"},"variables":[{"name":"headStart","nativeSrc":"5432:9:6","nodeType":"YulTypedName","src":"5432:9:6","type":""}]},{"nativeSrc":"5457:39:6","nodeType":"YulVariableDeclaration","src":"5457:39:6","value":{"arguments":[{"name":"pos","nativeSrc":"5473:3:6","nodeType":"YulIdentifier","src":"5473:3:6"},{"arguments":[{"name":"length","nativeSrc":"5482:6:6","nodeType":"YulIdentifier","src":"5482:6:6"},{"kind":"number","nativeSrc":"5490:4:6","nodeType":"YulLiteral","src":"5490:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"5478:3:6","nodeType":"YulIdentifier","src":"5478:3:6"},"nativeSrc":"5478:17:6","nodeType":"YulFunctionCall","src":"5478:17:6"}],"functionName":{"name":"add","nativeSrc":"5469:3:6","nodeType":"YulIdentifier","src":"5469:3:6"},"nativeSrc":"5469:27:6","nodeType":"YulFunctionCall","src":"5469:27:6"},"variables":[{"name":"tail","nativeSrc":"5461:4:6","nodeType":"YulTypedName","src":"5461:4:6","type":""}]},{"nativeSrc":"5505:81:6","nodeType":"YulVariableDeclaration","src":"5505:81:6","value":{"arguments":[{"name":"value","nativeSrc":"5580:5:6","nodeType":"YulIdentifier","src":"5580:5:6"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"5520:59:6","nodeType":"YulIdentifier","src":"5520:59:6"},"nativeSrc":"5520:66:6","nodeType":"YulFunctionCall","src":"5520:66:6"},"variables":[{"name":"baseRef","nativeSrc":"5509:7:6","nodeType":"YulTypedName","src":"5509:7:6","type":""}]},{"nativeSrc":"5595:21:6","nodeType":"YulVariableDeclaration","src":"5595:21:6","value":{"name":"baseRef","nativeSrc":"5609:7:6","nodeType":"YulIdentifier","src":"5609:7:6"},"variables":[{"name":"srcPtr","nativeSrc":"5599:6:6","nodeType":"YulTypedName","src":"5599:6:6","type":""}]},{"body":{"nativeSrc":"5685:336:6","nodeType":"YulBlock","src":"5685:336:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5706:3:6","nodeType":"YulIdentifier","src":"5706:3:6"},{"arguments":[{"name":"tail","nativeSrc":"5715:4:6","nodeType":"YulIdentifier","src":"5715:4:6"},{"name":"headStart","nativeSrc":"5721:9:6","nodeType":"YulIdentifier","src":"5721:9:6"}],"functionName":{"name":"sub","nativeSrc":"5711:3:6","nodeType":"YulIdentifier","src":"5711:3:6"},"nativeSrc":"5711:20:6","nodeType":"YulFunctionCall","src":"5711:20:6"}],"functionName":{"name":"mstore","nativeSrc":"5699:6:6","nodeType":"YulIdentifier","src":"5699:6:6"},"nativeSrc":"5699:33:6","nodeType":"YulFunctionCall","src":"5699:33:6"},"nativeSrc":"5699:33:6","nodeType":"YulExpressionStatement","src":"5699:33:6"},{"nativeSrc":"5745:34:6","nodeType":"YulVariableDeclaration","src":"5745:34:6","value":{"arguments":[{"name":"srcPtr","nativeSrc":"5772:6:6","nodeType":"YulIdentifier","src":"5772:6:6"}],"functionName":{"name":"mload","nativeSrc":"5766:5:6","nodeType":"YulIdentifier","src":"5766:5:6"},"nativeSrc":"5766:13:6","nodeType":"YulFunctionCall","src":"5766:13:6"},"variables":[{"name":"elementValue0","nativeSrc":"5749:13:6","nodeType":"YulTypedName","src":"5749:13:6","type":""}]},{"nativeSrc":"5792:92:6","nodeType":"YulAssignment","src":"5792:92:6","value":{"arguments":[{"name":"elementValue0","nativeSrc":"5864:13:6","nodeType":"YulIdentifier","src":"5864:13:6"},{"name":"tail","nativeSrc":"5879:4:6","nodeType":"YulIdentifier","src":"5879:4:6"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"5800:63:6","nodeType":"YulIdentifier","src":"5800:63:6"},"nativeSrc":"5800:84:6","nodeType":"YulFunctionCall","src":"5800:84:6"},"variableNames":[{"name":"tail","nativeSrc":"5792:4:6","nodeType":"YulIdentifier","src":"5792:4:6"}]},{"nativeSrc":"5897:80:6","nodeType":"YulAssignment","src":"5897:80:6","value":{"arguments":[{"name":"srcPtr","nativeSrc":"5970:6:6","nodeType":"YulIdentifier","src":"5970:6:6"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"5907:62:6","nodeType":"YulIdentifier","src":"5907:62:6"},"nativeSrc":"5907:70:6","nodeType":"YulFunctionCall","src":"5907:70:6"},"variableNames":[{"name":"srcPtr","nativeSrc":"5897:6:6","nodeType":"YulIdentifier","src":"5897:6:6"}]},{"nativeSrc":"5990:21:6","nodeType":"YulAssignment","src":"5990:21:6","value":{"arguments":[{"name":"pos","nativeSrc":"6001:3:6","nodeType":"YulIdentifier","src":"6001:3:6"},{"kind":"number","nativeSrc":"6006:4:6","nodeType":"YulLiteral","src":"6006:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5997:3:6","nodeType":"YulIdentifier","src":"5997:3:6"},"nativeSrc":"5997:14:6","nodeType":"YulFunctionCall","src":"5997:14:6"},"variableNames":[{"name":"pos","nativeSrc":"5990:3:6","nodeType":"YulIdentifier","src":"5990:3:6"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5647:1:6","nodeType":"YulIdentifier","src":"5647:1:6"},{"name":"length","nativeSrc":"5650:6:6","nodeType":"YulIdentifier","src":"5650:6:6"}],"functionName":{"name":"lt","nativeSrc":"5644:2:6","nodeType":"YulIdentifier","src":"5644:2:6"},"nativeSrc":"5644:13:6","nodeType":"YulFunctionCall","src":"5644:13:6"},"nativeSrc":"5625:396:6","nodeType":"YulForLoop","post":{"nativeSrc":"5658:18:6","nodeType":"YulBlock","src":"5658:18:6","statements":[{"nativeSrc":"5660:14:6","nodeType":"YulAssignment","src":"5660:14:6","value":{"arguments":[{"name":"i","nativeSrc":"5669:1:6","nodeType":"YulIdentifier","src":"5669:1:6"},{"kind":"number","nativeSrc":"5672:1:6","nodeType":"YulLiteral","src":"5672:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5665:3:6","nodeType":"YulIdentifier","src":"5665:3:6"},"nativeSrc":"5665:9:6","nodeType":"YulFunctionCall","src":"5665:9:6"},"variableNames":[{"name":"i","nativeSrc":"5660:1:6","nodeType":"YulIdentifier","src":"5660:1:6"}]}]},"pre":{"nativeSrc":"5629:14:6","nodeType":"YulBlock","src":"5629:14:6","statements":[{"nativeSrc":"5631:10:6","nodeType":"YulVariableDeclaration","src":"5631:10:6","value":{"kind":"number","nativeSrc":"5640:1:6","nodeType":"YulLiteral","src":"5640:1:6","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5635:1:6","nodeType":"YulTypedName","src":"5635:1:6","type":""}]}]},"src":"5625:396:6"},{"nativeSrc":"6030:11:6","nodeType":"YulAssignment","src":"6030:11:6","value":{"name":"tail","nativeSrc":"6037:4:6","nodeType":"YulIdentifier","src":"6037:4:6"},"variableNames":[{"name":"pos","nativeSrc":"6030:3:6","nodeType":"YulIdentifier","src":"6030:3:6"}]},{"nativeSrc":"6050:10:6","nodeType":"YulAssignment","src":"6050:10:6","value":{"name":"pos","nativeSrc":"6057:3:6","nodeType":"YulIdentifier","src":"6057:3:6"},"variableNames":[{"name":"end","nativeSrc":"6050:3:6","nodeType":"YulIdentifier","src":"6050:3:6"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"5075:991:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5198:5:6","nodeType":"YulTypedName","src":"5198:5:6","type":""},{"name":"pos","nativeSrc":"5205:3:6","nodeType":"YulTypedName","src":"5205:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5214:3:6","nodeType":"YulTypedName","src":"5214:3:6","type":""}],"src":"5075:991:6"},{"body":{"nativeSrc":"6392:717:6","nodeType":"YulBlock","src":"6392:717:6","statements":[{"nativeSrc":"6402:27:6","nodeType":"YulAssignment","src":"6402:27:6","value":{"arguments":[{"name":"headStart","nativeSrc":"6414:9:6","nodeType":"YulIdentifier","src":"6414:9:6"},{"kind":"number","nativeSrc":"6425:3:6","nodeType":"YulLiteral","src":"6425:3:6","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6410:3:6","nodeType":"YulIdentifier","src":"6410:3:6"},"nativeSrc":"6410:19:6","nodeType":"YulFunctionCall","src":"6410:19:6"},"variableNames":[{"name":"tail","nativeSrc":"6402:4:6","nodeType":"YulIdentifier","src":"6402:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6483:6:6","nodeType":"YulIdentifier","src":"6483:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"6496:9:6","nodeType":"YulIdentifier","src":"6496:9:6"},{"kind":"number","nativeSrc":"6507:1:6","nodeType":"YulLiteral","src":"6507:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6492:3:6","nodeType":"YulIdentifier","src":"6492:3:6"},"nativeSrc":"6492:17:6","nodeType":"YulFunctionCall","src":"6492:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6439:43:6","nodeType":"YulIdentifier","src":"6439:43:6"},"nativeSrc":"6439:71:6","nodeType":"YulFunctionCall","src":"6439:71:6"},"nativeSrc":"6439:71:6","nodeType":"YulExpressionStatement","src":"6439:71:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6531:9:6","nodeType":"YulIdentifier","src":"6531:9:6"},{"kind":"number","nativeSrc":"6542:2:6","nodeType":"YulLiteral","src":"6542:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6527:3:6","nodeType":"YulIdentifier","src":"6527:3:6"},"nativeSrc":"6527:18:6","nodeType":"YulFunctionCall","src":"6527:18:6"},{"arguments":[{"name":"tail","nativeSrc":"6551:4:6","nodeType":"YulIdentifier","src":"6551:4:6"},{"name":"headStart","nativeSrc":"6557:9:6","nodeType":"YulIdentifier","src":"6557:9:6"}],"functionName":{"name":"sub","nativeSrc":"6547:3:6","nodeType":"YulIdentifier","src":"6547:3:6"},"nativeSrc":"6547:20:6","nodeType":"YulFunctionCall","src":"6547:20:6"}],"functionName":{"name":"mstore","nativeSrc":"6520:6:6","nodeType":"YulIdentifier","src":"6520:6:6"},"nativeSrc":"6520:48:6","nodeType":"YulFunctionCall","src":"6520:48:6"},"nativeSrc":"6520:48:6","nodeType":"YulExpressionStatement","src":"6520:48:6"},{"nativeSrc":"6577:86:6","nodeType":"YulAssignment","src":"6577:86:6","value":{"arguments":[{"name":"value1","nativeSrc":"6649:6:6","nodeType":"YulIdentifier","src":"6649:6:6"},{"name":"tail","nativeSrc":"6658:4:6","nodeType":"YulIdentifier","src":"6658:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"6585:63:6","nodeType":"YulIdentifier","src":"6585:63:6"},"nativeSrc":"6585:78:6","nodeType":"YulFunctionCall","src":"6585:78:6"},"variableNames":[{"name":"tail","nativeSrc":"6577:4:6","nodeType":"YulIdentifier","src":"6577:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6684:9:6","nodeType":"YulIdentifier","src":"6684:9:6"},{"kind":"number","nativeSrc":"6695:2:6","nodeType":"YulLiteral","src":"6695:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6680:3:6","nodeType":"YulIdentifier","src":"6680:3:6"},"nativeSrc":"6680:18:6","nodeType":"YulFunctionCall","src":"6680:18:6"},{"arguments":[{"name":"tail","nativeSrc":"6704:4:6","nodeType":"YulIdentifier","src":"6704:4:6"},{"name":"headStart","nativeSrc":"6710:9:6","nodeType":"YulIdentifier","src":"6710:9:6"}],"functionName":{"name":"sub","nativeSrc":"6700:3:6","nodeType":"YulIdentifier","src":"6700:3:6"},"nativeSrc":"6700:20:6","nodeType":"YulFunctionCall","src":"6700:20:6"}],"functionName":{"name":"mstore","nativeSrc":"6673:6:6","nodeType":"YulIdentifier","src":"6673:6:6"},"nativeSrc":"6673:48:6","nodeType":"YulFunctionCall","src":"6673:48:6"},"nativeSrc":"6673:48:6","nodeType":"YulExpressionStatement","src":"6673:48:6"},{"nativeSrc":"6730:86:6","nodeType":"YulAssignment","src":"6730:86:6","value":{"arguments":[{"name":"value2","nativeSrc":"6802:6:6","nodeType":"YulIdentifier","src":"6802:6:6"},{"name":"tail","nativeSrc":"6811:4:6","nodeType":"YulIdentifier","src":"6811:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"6738:63:6","nodeType":"YulIdentifier","src":"6738:63:6"},"nativeSrc":"6738:78:6","nodeType":"YulFunctionCall","src":"6738:78:6"},"variableNames":[{"name":"tail","nativeSrc":"6730:4:6","nodeType":"YulIdentifier","src":"6730:4:6"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"6870:6:6","nodeType":"YulIdentifier","src":"6870:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"6883:9:6","nodeType":"YulIdentifier","src":"6883:9:6"},{"kind":"number","nativeSrc":"6894:2:6","nodeType":"YulLiteral","src":"6894:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6879:3:6","nodeType":"YulIdentifier","src":"6879:3:6"},"nativeSrc":"6879:18:6","nodeType":"YulFunctionCall","src":"6879:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6826:43:6","nodeType":"YulIdentifier","src":"6826:43:6"},"nativeSrc":"6826:72:6","nodeType":"YulFunctionCall","src":"6826:72:6"},"nativeSrc":"6826:72:6","nodeType":"YulExpressionStatement","src":"6826:72:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6919:9:6","nodeType":"YulIdentifier","src":"6919:9:6"},{"kind":"number","nativeSrc":"6930:3:6","nodeType":"YulLiteral","src":"6930:3:6","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6915:3:6","nodeType":"YulIdentifier","src":"6915:3:6"},"nativeSrc":"6915:19:6","nodeType":"YulFunctionCall","src":"6915:19:6"},{"arguments":[{"name":"tail","nativeSrc":"6940:4:6","nodeType":"YulIdentifier","src":"6940:4:6"},{"name":"headStart","nativeSrc":"6946:9:6","nodeType":"YulIdentifier","src":"6946:9:6"}],"functionName":{"name":"sub","nativeSrc":"6936:3:6","nodeType":"YulIdentifier","src":"6936:3:6"},"nativeSrc":"6936:20:6","nodeType":"YulFunctionCall","src":"6936:20:6"}],"functionName":{"name":"mstore","nativeSrc":"6908:6:6","nodeType":"YulIdentifier","src":"6908:6:6"},"nativeSrc":"6908:49:6","nodeType":"YulFunctionCall","src":"6908:49:6"},"nativeSrc":"6908:49:6","nodeType":"YulExpressionStatement","src":"6908:49:6"},{"nativeSrc":"6966:136:6","nodeType":"YulAssignment","src":"6966:136:6","value":{"arguments":[{"name":"value4","nativeSrc":"7088:6:6","nodeType":"YulIdentifier","src":"7088:6:6"},{"name":"tail","nativeSrc":"7097:4:6","nodeType":"YulIdentifier","src":"7097:4:6"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"6974:113:6","nodeType":"YulIdentifier","src":"6974:113:6"},"nativeSrc":"6974:128:6","nodeType":"YulFunctionCall","src":"6974:128:6"},"variableNames":[{"name":"tail","nativeSrc":"6966:4:6","nodeType":"YulIdentifier","src":"6966:4:6"}]}]},"name":"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"6072:1037:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6332:9:6","nodeType":"YulTypedName","src":"6332:9:6","type":""},{"name":"value4","nativeSrc":"6344:6:6","nodeType":"YulTypedName","src":"6344:6:6","type":""},{"name":"value3","nativeSrc":"6352:6:6","nodeType":"YulTypedName","src":"6352:6:6","type":""},{"name":"value2","nativeSrc":"6360:6:6","nodeType":"YulTypedName","src":"6360:6:6","type":""},{"name":"value1","nativeSrc":"6368:6:6","nodeType":"YulTypedName","src":"6368:6:6","type":""},{"name":"value0","nativeSrc":"6376:6:6","nodeType":"YulTypedName","src":"6376:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6387:4:6","nodeType":"YulTypedName","src":"6387:4:6","type":""}],"src":"6072:1037:6"},{"body":{"nativeSrc":"7387:673:6","nodeType":"YulBlock","src":"7387:673:6","statements":[{"nativeSrc":"7397:27:6","nodeType":"YulAssignment","src":"7397:27:6","value":{"arguments":[{"name":"headStart","nativeSrc":"7409:9:6","nodeType":"YulIdentifier","src":"7409:9:6"},{"kind":"number","nativeSrc":"7420:3:6","nodeType":"YulLiteral","src":"7420:3:6","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"7405:3:6","nodeType":"YulIdentifier","src":"7405:3:6"},"nativeSrc":"7405:19:6","nodeType":"YulFunctionCall","src":"7405:19:6"},"variableNames":[{"name":"tail","nativeSrc":"7397:4:6","nodeType":"YulIdentifier","src":"7397:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7478:6:6","nodeType":"YulIdentifier","src":"7478:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"7491:9:6","nodeType":"YulIdentifier","src":"7491:9:6"},{"kind":"number","nativeSrc":"7502:1:6","nodeType":"YulLiteral","src":"7502:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7487:3:6","nodeType":"YulIdentifier","src":"7487:3:6"},"nativeSrc":"7487:17:6","nodeType":"YulFunctionCall","src":"7487:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7434:43:6","nodeType":"YulIdentifier","src":"7434:43:6"},"nativeSrc":"7434:71:6","nodeType":"YulFunctionCall","src":"7434:71:6"},"nativeSrc":"7434:71:6","nodeType":"YulExpressionStatement","src":"7434:71:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7526:9:6","nodeType":"YulIdentifier","src":"7526:9:6"},{"kind":"number","nativeSrc":"7537:2:6","nodeType":"YulLiteral","src":"7537:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7522:3:6","nodeType":"YulIdentifier","src":"7522:3:6"},"nativeSrc":"7522:18:6","nodeType":"YulFunctionCall","src":"7522:18:6"},{"arguments":[{"name":"tail","nativeSrc":"7546:4:6","nodeType":"YulIdentifier","src":"7546:4:6"},{"name":"headStart","nativeSrc":"7552:9:6","nodeType":"YulIdentifier","src":"7552:9:6"}],"functionName":{"name":"sub","nativeSrc":"7542:3:6","nodeType":"YulIdentifier","src":"7542:3:6"},"nativeSrc":"7542:20:6","nodeType":"YulFunctionCall","src":"7542:20:6"}],"functionName":{"name":"mstore","nativeSrc":"7515:6:6","nodeType":"YulIdentifier","src":"7515:6:6"},"nativeSrc":"7515:48:6","nodeType":"YulFunctionCall","src":"7515:48:6"},"nativeSrc":"7515:48:6","nodeType":"YulExpressionStatement","src":"7515:48:6"},{"nativeSrc":"7572:86:6","nodeType":"YulAssignment","src":"7572:86:6","value":{"arguments":[{"name":"value1","nativeSrc":"7644:6:6","nodeType":"YulIdentifier","src":"7644:6:6"},{"name":"tail","nativeSrc":"7653:4:6","nodeType":"YulIdentifier","src":"7653:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"7580:63:6","nodeType":"YulIdentifier","src":"7580:63:6"},"nativeSrc":"7580:78:6","nodeType":"YulFunctionCall","src":"7580:78:6"},"variableNames":[{"name":"tail","nativeSrc":"7572:4:6","nodeType":"YulIdentifier","src":"7572:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7679:9:6","nodeType":"YulIdentifier","src":"7679:9:6"},{"kind":"number","nativeSrc":"7690:2:6","nodeType":"YulLiteral","src":"7690:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7675:3:6","nodeType":"YulIdentifier","src":"7675:3:6"},"nativeSrc":"7675:18:6","nodeType":"YulFunctionCall","src":"7675:18:6"},{"arguments":[{"name":"tail","nativeSrc":"7699:4:6","nodeType":"YulIdentifier","src":"7699:4:6"},{"name":"headStart","nativeSrc":"7705:9:6","nodeType":"YulIdentifier","src":"7705:9:6"}],"functionName":{"name":"sub","nativeSrc":"7695:3:6","nodeType":"YulIdentifier","src":"7695:3:6"},"nativeSrc":"7695:20:6","nodeType":"YulFunctionCall","src":"7695:20:6"}],"functionName":{"name":"mstore","nativeSrc":"7668:6:6","nodeType":"YulIdentifier","src":"7668:6:6"},"nativeSrc":"7668:48:6","nodeType":"YulFunctionCall","src":"7668:48:6"},"nativeSrc":"7668:48:6","nodeType":"YulExpressionStatement","src":"7668:48:6"},{"nativeSrc":"7725:86:6","nodeType":"YulAssignment","src":"7725:86:6","value":{"arguments":[{"name":"value2","nativeSrc":"7797:6:6","nodeType":"YulIdentifier","src":"7797:6:6"},{"name":"tail","nativeSrc":"7806:4:6","nodeType":"YulIdentifier","src":"7806:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"7733:63:6","nodeType":"YulIdentifier","src":"7733:63:6"},"nativeSrc":"7733:78:6","nodeType":"YulFunctionCall","src":"7733:78:6"},"variableNames":[{"name":"tail","nativeSrc":"7725:4:6","nodeType":"YulIdentifier","src":"7725:4:6"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"7865:6:6","nodeType":"YulIdentifier","src":"7865:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"7878:9:6","nodeType":"YulIdentifier","src":"7878:9:6"},{"kind":"number","nativeSrc":"7889:2:6","nodeType":"YulLiteral","src":"7889:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7874:3:6","nodeType":"YulIdentifier","src":"7874:3:6"},"nativeSrc":"7874:18:6","nodeType":"YulFunctionCall","src":"7874:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7821:43:6","nodeType":"YulIdentifier","src":"7821:43:6"},"nativeSrc":"7821:72:6","nodeType":"YulFunctionCall","src":"7821:72:6"},"nativeSrc":"7821:72:6","nodeType":"YulExpressionStatement","src":"7821:72:6"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"7941:6:6","nodeType":"YulIdentifier","src":"7941:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"7954:9:6","nodeType":"YulIdentifier","src":"7954:9:6"},{"kind":"number","nativeSrc":"7965:3:6","nodeType":"YulLiteral","src":"7965:3:6","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7950:3:6","nodeType":"YulIdentifier","src":"7950:3:6"},"nativeSrc":"7950:19:6","nodeType":"YulFunctionCall","src":"7950:19:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"7903:37:6","nodeType":"YulIdentifier","src":"7903:37:6"},"nativeSrc":"7903:67:6","nodeType":"YulFunctionCall","src":"7903:67:6"},"nativeSrc":"7903:67:6","nodeType":"YulExpressionStatement","src":"7903:67:6"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"8024:6:6","nodeType":"YulIdentifier","src":"8024:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"8037:9:6","nodeType":"YulIdentifier","src":"8037:9:6"},{"kind":"number","nativeSrc":"8048:3:6","nodeType":"YulLiteral","src":"8048:3:6","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8033:3:6","nodeType":"YulIdentifier","src":"8033:3:6"},"nativeSrc":"8033:19:6","nodeType":"YulFunctionCall","src":"8033:19:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7980:43:6","nodeType":"YulIdentifier","src":"7980:43:6"},"nativeSrc":"7980:73:6","nodeType":"YulFunctionCall","src":"7980:73:6"},"nativeSrc":"7980:73:6","nodeType":"YulExpressionStatement","src":"7980:73:6"}]},"name":"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_uint256__fromStack_reversed","nativeSrc":"7115:945:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7319:9:6","nodeType":"YulTypedName","src":"7319:9:6","type":""},{"name":"value5","nativeSrc":"7331:6:6","nodeType":"YulTypedName","src":"7331:6:6","type":""},{"name":"value4","nativeSrc":"7339:6:6","nodeType":"YulTypedName","src":"7339:6:6","type":""},{"name":"value3","nativeSrc":"7347:6:6","nodeType":"YulTypedName","src":"7347:6:6","type":""},{"name":"value2","nativeSrc":"7355:6:6","nodeType":"YulTypedName","src":"7355:6:6","type":""},{"name":"value1","nativeSrc":"7363:6:6","nodeType":"YulTypedName","src":"7363:6:6","type":""},{"name":"value0","nativeSrc":"7371:6:6","nodeType":"YulTypedName","src":"7371:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7382:4:6","nodeType":"YulTypedName","src":"7382:4:6","type":""}],"src":"7115:945:6"},{"body":{"nativeSrc":"8149:391:6","nodeType":"YulBlock","src":"8149:391:6","statements":[{"body":{"nativeSrc":"8195:83:6","nodeType":"YulBlock","src":"8195:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8197:77:6","nodeType":"YulIdentifier","src":"8197:77:6"},"nativeSrc":"8197:79:6","nodeType":"YulFunctionCall","src":"8197:79:6"},"nativeSrc":"8197:79:6","nodeType":"YulExpressionStatement","src":"8197:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8170:7:6","nodeType":"YulIdentifier","src":"8170:7:6"},{"name":"headStart","nativeSrc":"8179:9:6","nodeType":"YulIdentifier","src":"8179:9:6"}],"functionName":{"name":"sub","nativeSrc":"8166:3:6","nodeType":"YulIdentifier","src":"8166:3:6"},"nativeSrc":"8166:23:6","nodeType":"YulFunctionCall","src":"8166:23:6"},{"kind":"number","nativeSrc":"8191:2:6","nodeType":"YulLiteral","src":"8191:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"8162:3:6","nodeType":"YulIdentifier","src":"8162:3:6"},"nativeSrc":"8162:32:6","nodeType":"YulFunctionCall","src":"8162:32:6"},"nativeSrc":"8159:119:6","nodeType":"YulIf","src":"8159:119:6"},{"nativeSrc":"8288:117:6","nodeType":"YulBlock","src":"8288:117:6","statements":[{"nativeSrc":"8303:15:6","nodeType":"YulVariableDeclaration","src":"8303:15:6","value":{"kind":"number","nativeSrc":"8317:1:6","nodeType":"YulLiteral","src":"8317:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8307:6:6","nodeType":"YulTypedName","src":"8307:6:6","type":""}]},{"nativeSrc":"8332:63:6","nodeType":"YulAssignment","src":"8332:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8367:9:6","nodeType":"YulIdentifier","src":"8367:9:6"},{"name":"offset","nativeSrc":"8378:6:6","nodeType":"YulIdentifier","src":"8378:6:6"}],"functionName":{"name":"add","nativeSrc":"8363:3:6","nodeType":"YulIdentifier","src":"8363:3:6"},"nativeSrc":"8363:22:6","nodeType":"YulFunctionCall","src":"8363:22:6"},{"name":"dataEnd","nativeSrc":"8387:7:6","nodeType":"YulIdentifier","src":"8387:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8342:20:6","nodeType":"YulIdentifier","src":"8342:20:6"},"nativeSrc":"8342:53:6","nodeType":"YulFunctionCall","src":"8342:53:6"},"variableNames":[{"name":"value0","nativeSrc":"8332:6:6","nodeType":"YulIdentifier","src":"8332:6:6"}]}]},{"nativeSrc":"8415:118:6","nodeType":"YulBlock","src":"8415:118:6","statements":[{"nativeSrc":"8430:16:6","nodeType":"YulVariableDeclaration","src":"8430:16:6","value":{"kind":"number","nativeSrc":"8444:2:6","nodeType":"YulLiteral","src":"8444:2:6","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8434:6:6","nodeType":"YulTypedName","src":"8434:6:6","type":""}]},{"nativeSrc":"8460:63:6","nodeType":"YulAssignment","src":"8460:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8495:9:6","nodeType":"YulIdentifier","src":"8495:9:6"},{"name":"offset","nativeSrc":"8506:6:6","nodeType":"YulIdentifier","src":"8506:6:6"}],"functionName":{"name":"add","nativeSrc":"8491:3:6","nodeType":"YulIdentifier","src":"8491:3:6"},"nativeSrc":"8491:22:6","nodeType":"YulFunctionCall","src":"8491:22:6"},{"name":"dataEnd","nativeSrc":"8515:7:6","nodeType":"YulIdentifier","src":"8515:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8470:20:6","nodeType":"YulIdentifier","src":"8470:20:6"},"nativeSrc":"8470:53:6","nodeType":"YulFunctionCall","src":"8470:53:6"},"variableNames":[{"name":"value1","nativeSrc":"8460:6:6","nodeType":"YulIdentifier","src":"8460:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nativeSrc":"8066:474:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8111:9:6","nodeType":"YulTypedName","src":"8111:9:6","type":""},{"name":"dataEnd","nativeSrc":"8122:7:6","nodeType":"YulTypedName","src":"8122:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8134:6:6","nodeType":"YulTypedName","src":"8134:6:6","type":""},{"name":"value1","nativeSrc":"8142:6:6","nodeType":"YulTypedName","src":"8142:6:6","type":""}],"src":"8066:474:6"},{"body":{"nativeSrc":"8612:263:6","nodeType":"YulBlock","src":"8612:263:6","statements":[{"body":{"nativeSrc":"8658:83:6","nodeType":"YulBlock","src":"8658:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8660:77:6","nodeType":"YulIdentifier","src":"8660:77:6"},"nativeSrc":"8660:79:6","nodeType":"YulFunctionCall","src":"8660:79:6"},"nativeSrc":"8660:79:6","nodeType":"YulExpressionStatement","src":"8660:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8633:7:6","nodeType":"YulIdentifier","src":"8633:7:6"},{"name":"headStart","nativeSrc":"8642:9:6","nodeType":"YulIdentifier","src":"8642:9:6"}],"functionName":{"name":"sub","nativeSrc":"8629:3:6","nodeType":"YulIdentifier","src":"8629:3:6"},"nativeSrc":"8629:23:6","nodeType":"YulFunctionCall","src":"8629:23:6"},{"kind":"number","nativeSrc":"8654:2:6","nodeType":"YulLiteral","src":"8654:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8625:3:6","nodeType":"YulIdentifier","src":"8625:3:6"},"nativeSrc":"8625:32:6","nodeType":"YulFunctionCall","src":"8625:32:6"},"nativeSrc":"8622:119:6","nodeType":"YulIf","src":"8622:119:6"},{"nativeSrc":"8751:117:6","nodeType":"YulBlock","src":"8751:117:6","statements":[{"nativeSrc":"8766:15:6","nodeType":"YulVariableDeclaration","src":"8766:15:6","value":{"kind":"number","nativeSrc":"8780:1:6","nodeType":"YulLiteral","src":"8780:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8770:6:6","nodeType":"YulTypedName","src":"8770:6:6","type":""}]},{"nativeSrc":"8795:63:6","nodeType":"YulAssignment","src":"8795:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8830:9:6","nodeType":"YulIdentifier","src":"8830:9:6"},{"name":"offset","nativeSrc":"8841:6:6","nodeType":"YulIdentifier","src":"8841:6:6"}],"functionName":{"name":"add","nativeSrc":"8826:3:6","nodeType":"YulIdentifier","src":"8826:3:6"},"nativeSrc":"8826:22:6","nodeType":"YulFunctionCall","src":"8826:22:6"},{"name":"dataEnd","nativeSrc":"8850:7:6","nodeType":"YulIdentifier","src":"8850:7:6"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8805:20:6","nodeType":"YulIdentifier","src":"8805:20:6"},"nativeSrc":"8805:53:6","nodeType":"YulFunctionCall","src":"8805:53:6"},"variableNames":[{"name":"value0","nativeSrc":"8795:6:6","nodeType":"YulIdentifier","src":"8795:6:6"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"8546:329:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8582:9:6","nodeType":"YulTypedName","src":"8582:9:6","type":""},{"name":"dataEnd","nativeSrc":"8593:7:6","nodeType":"YulTypedName","src":"8593:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8605:6:6","nodeType":"YulTypedName","src":"8605:6:6","type":""}],"src":"8546:329:6"},{"body":{"nativeSrc":"8979:124:6","nodeType":"YulBlock","src":"8979:124:6","statements":[{"nativeSrc":"8989:26:6","nodeType":"YulAssignment","src":"8989:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"9001:9:6","nodeType":"YulIdentifier","src":"9001:9:6"},{"kind":"number","nativeSrc":"9012:2:6","nodeType":"YulLiteral","src":"9012:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8997:3:6","nodeType":"YulIdentifier","src":"8997:3:6"},"nativeSrc":"8997:18:6","nodeType":"YulFunctionCall","src":"8997:18:6"},"variableNames":[{"name":"tail","nativeSrc":"8989:4:6","nodeType":"YulIdentifier","src":"8989:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9069:6:6","nodeType":"YulIdentifier","src":"9069:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"9082:9:6","nodeType":"YulIdentifier","src":"9082:9:6"},{"kind":"number","nativeSrc":"9093:1:6","nodeType":"YulLiteral","src":"9093:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9078:3:6","nodeType":"YulIdentifier","src":"9078:3:6"},"nativeSrc":"9078:17:6","nodeType":"YulFunctionCall","src":"9078:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9025:43:6","nodeType":"YulIdentifier","src":"9025:43:6"},"nativeSrc":"9025:71:6","nodeType":"YulFunctionCall","src":"9025:71:6"},"nativeSrc":"9025:71:6","nodeType":"YulExpressionStatement","src":"9025:71:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"8881:222:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8951:9:6","nodeType":"YulTypedName","src":"8951:9:6","type":""},{"name":"value0","nativeSrc":"8963:6:6","nodeType":"YulTypedName","src":"8963:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8974:4:6","nodeType":"YulTypedName","src":"8974:4:6","type":""}],"src":"8881:222:6"},{"body":{"nativeSrc":"9205:40:6","nodeType":"YulBlock","src":"9205:40:6","statements":[{"nativeSrc":"9216:22:6","nodeType":"YulAssignment","src":"9216:22:6","value":{"arguments":[{"name":"value","nativeSrc":"9232:5:6","nodeType":"YulIdentifier","src":"9232:5:6"}],"functionName":{"name":"mload","nativeSrc":"9226:5:6","nodeType":"YulIdentifier","src":"9226:5:6"},"nativeSrc":"9226:12:6","nodeType":"YulFunctionCall","src":"9226:12:6"},"variableNames":[{"name":"length","nativeSrc":"9216:6:6","nodeType":"YulIdentifier","src":"9216:6:6"}]}]},"name":"array_length_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","nativeSrc":"9109:136:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9188:5:6","nodeType":"YulTypedName","src":"9188:5:6","type":""}],"returnVariables":[{"name":"length","nativeSrc":"9198:6:6","nodeType":"YulTypedName","src":"9198:6:6","type":""}],"src":"9109:136:6"},{"body":{"nativeSrc":"9384:73:6","nodeType":"YulBlock","src":"9384:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9401:3:6","nodeType":"YulIdentifier","src":"9401:3:6"},{"name":"length","nativeSrc":"9406:6:6","nodeType":"YulIdentifier","src":"9406:6:6"}],"functionName":{"name":"mstore","nativeSrc":"9394:6:6","nodeType":"YulIdentifier","src":"9394:6:6"},"nativeSrc":"9394:19:6","nodeType":"YulFunctionCall","src":"9394:19:6"},"nativeSrc":"9394:19:6","nodeType":"YulExpressionStatement","src":"9394:19:6"},{"nativeSrc":"9422:29:6","nodeType":"YulAssignment","src":"9422:29:6","value":{"arguments":[{"name":"pos","nativeSrc":"9441:3:6","nodeType":"YulIdentifier","src":"9441:3:6"},{"kind":"number","nativeSrc":"9446:4:6","nodeType":"YulLiteral","src":"9446:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9437:3:6","nodeType":"YulIdentifier","src":"9437:3:6"},"nativeSrc":"9437:14:6","nodeType":"YulFunctionCall","src":"9437:14:6"},"variableNames":[{"name":"updated_pos","nativeSrc":"9422:11:6","nodeType":"YulIdentifier","src":"9422:11:6"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"9251:206:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9356:3:6","nodeType":"YulTypedName","src":"9356:3:6","type":""},{"name":"length","nativeSrc":"9361:6:6","nodeType":"YulTypedName","src":"9361:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9372:11:6","nodeType":"YulTypedName","src":"9372:11:6","type":""}],"src":"9251:206:6"},{"body":{"nativeSrc":"9557:60:6","nodeType":"YulBlock","src":"9557:60:6","statements":[{"nativeSrc":"9567:11:6","nodeType":"YulAssignment","src":"9567:11:6","value":{"name":"ptr","nativeSrc":"9575:3:6","nodeType":"YulIdentifier","src":"9575:3:6"},"variableNames":[{"name":"data","nativeSrc":"9567:4:6","nodeType":"YulIdentifier","src":"9567:4:6"}]},{"nativeSrc":"9588:22:6","nodeType":"YulAssignment","src":"9588:22:6","value":{"arguments":[{"name":"ptr","nativeSrc":"9600:3:6","nodeType":"YulIdentifier","src":"9600:3:6"},{"kind":"number","nativeSrc":"9605:4:6","nodeType":"YulLiteral","src":"9605:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9596:3:6","nodeType":"YulIdentifier","src":"9596:3:6"},"nativeSrc":"9596:14:6","nodeType":"YulFunctionCall","src":"9596:14:6"},"variableNames":[{"name":"data","nativeSrc":"9588:4:6","nodeType":"YulIdentifier","src":"9588:4:6"}]}]},"name":"array_dataslot_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","nativeSrc":"9463:154:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"9544:3:6","nodeType":"YulTypedName","src":"9544:3:6","type":""}],"returnVariables":[{"name":"data","nativeSrc":"9552:4:6","nodeType":"YulTypedName","src":"9552:4:6","type":""}],"src":"9463:154:6"},{"body":{"nativeSrc":"9678:53:6","nodeType":"YulBlock","src":"9678:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9695:3:6","nodeType":"YulIdentifier","src":"9695:3:6"},{"arguments":[{"name":"value","nativeSrc":"9718:5:6","nodeType":"YulIdentifier","src":"9718:5:6"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"9700:17:6","nodeType":"YulIdentifier","src":"9700:17:6"},"nativeSrc":"9700:24:6","nodeType":"YulFunctionCall","src":"9700:24:6"}],"functionName":{"name":"mstore","nativeSrc":"9688:6:6","nodeType":"YulIdentifier","src":"9688:6:6"},"nativeSrc":"9688:37:6","nodeType":"YulFunctionCall","src":"9688:37:6"},"nativeSrc":"9688:37:6","nodeType":"YulExpressionStatement","src":"9688:37:6"}]},"name":"abi_encode_t_address_to_t_address","nativeSrc":"9623:108:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9666:5:6","nodeType":"YulTypedName","src":"9666:5:6","type":""},{"name":"pos","nativeSrc":"9673:3:6","nodeType":"YulTypedName","src":"9673:3:6","type":""}],"src":"9623:108:6"},{"body":{"nativeSrc":"9792:53:6","nodeType":"YulBlock","src":"9792:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9809:3:6","nodeType":"YulIdentifier","src":"9809:3:6"},{"arguments":[{"name":"value","nativeSrc":"9832:5:6","nodeType":"YulIdentifier","src":"9832:5:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9814:17:6","nodeType":"YulIdentifier","src":"9814:17:6"},"nativeSrc":"9814:24:6","nodeType":"YulFunctionCall","src":"9814:24:6"}],"functionName":{"name":"mstore","nativeSrc":"9802:6:6","nodeType":"YulIdentifier","src":"9802:6:6"},"nativeSrc":"9802:37:6","nodeType":"YulFunctionCall","src":"9802:37:6"},"nativeSrc":"9802:37:6","nodeType":"YulExpressionStatement","src":"9802:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"9737:108:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9780:5:6","nodeType":"YulTypedName","src":"9780:5:6","type":""},{"name":"pos","nativeSrc":"9787:3:6","nodeType":"YulTypedName","src":"9787:3:6","type":""}],"src":"9737:108:6"},{"body":{"nativeSrc":"9962:73:6","nodeType":"YulBlock","src":"9962:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9979:3:6","nodeType":"YulIdentifier","src":"9979:3:6"},{"name":"length","nativeSrc":"9984:6:6","nodeType":"YulIdentifier","src":"9984:6:6"}],"functionName":{"name":"mstore","nativeSrc":"9972:6:6","nodeType":"YulIdentifier","src":"9972:6:6"},"nativeSrc":"9972:19:6","nodeType":"YulFunctionCall","src":"9972:19:6"},"nativeSrc":"9972:19:6","nodeType":"YulExpressionStatement","src":"9972:19:6"},{"nativeSrc":"10000:29:6","nodeType":"YulAssignment","src":"10000:29:6","value":{"arguments":[{"name":"pos","nativeSrc":"10019:3:6","nodeType":"YulIdentifier","src":"10019:3:6"},{"kind":"number","nativeSrc":"10024:4:6","nodeType":"YulLiteral","src":"10024:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10015:3:6","nodeType":"YulIdentifier","src":"10015:3:6"},"nativeSrc":"10015:14:6","nodeType":"YulFunctionCall","src":"10015:14:6"},"variableNames":[{"name":"updated_pos","nativeSrc":"10000:11:6","nodeType":"YulIdentifier","src":"10000:11:6"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"9851:184:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9934:3:6","nodeType":"YulTypedName","src":"9934:3:6","type":""},{"name":"length","nativeSrc":"9939:6:6","nodeType":"YulTypedName","src":"9939:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9950:11:6","nodeType":"YulTypedName","src":"9950:11:6","type":""}],"src":"9851:184:6"},{"body":{"nativeSrc":"10203:837:6","nodeType":"YulBlock","src":"10203:837:6","statements":[{"nativeSrc":"10213:78:6","nodeType":"YulVariableDeclaration","src":"10213:78:6","value":{"arguments":[{"name":"value","nativeSrc":"10285:5:6","nodeType":"YulIdentifier","src":"10285:5:6"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"10227:57:6","nodeType":"YulIdentifier","src":"10227:57:6"},"nativeSrc":"10227:64:6","nodeType":"YulFunctionCall","src":"10227:64:6"},"variables":[{"name":"length","nativeSrc":"10217:6:6","nodeType":"YulTypedName","src":"10217:6:6","type":""}]},{"nativeSrc":"10300:93:6","nodeType":"YulAssignment","src":"10300:93:6","value":{"arguments":[{"name":"pos","nativeSrc":"10381:3:6","nodeType":"YulIdentifier","src":"10381:3:6"},{"name":"length","nativeSrc":"10386:6:6","nodeType":"YulIdentifier","src":"10386:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"10307:73:6","nodeType":"YulIdentifier","src":"10307:73:6"},"nativeSrc":"10307:86:6","nodeType":"YulFunctionCall","src":"10307:86:6"},"variableNames":[{"name":"pos","nativeSrc":"10300:3:6","nodeType":"YulIdentifier","src":"10300:3:6"}]},{"nativeSrc":"10402:20:6","nodeType":"YulVariableDeclaration","src":"10402:20:6","value":{"name":"pos","nativeSrc":"10419:3:6","nodeType":"YulIdentifier","src":"10419:3:6"},"variables":[{"name":"headStart","nativeSrc":"10406:9:6","nodeType":"YulTypedName","src":"10406:9:6","type":""}]},{"nativeSrc":"10431:39:6","nodeType":"YulVariableDeclaration","src":"10431:39:6","value":{"arguments":[{"name":"pos","nativeSrc":"10447:3:6","nodeType":"YulIdentifier","src":"10447:3:6"},{"arguments":[{"name":"length","nativeSrc":"10456:6:6","nodeType":"YulIdentifier","src":"10456:6:6"},{"kind":"number","nativeSrc":"10464:4:6","nodeType":"YulLiteral","src":"10464:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"10452:3:6","nodeType":"YulIdentifier","src":"10452:3:6"},"nativeSrc":"10452:17:6","nodeType":"YulFunctionCall","src":"10452:17:6"}],"functionName":{"name":"add","nativeSrc":"10443:3:6","nodeType":"YulIdentifier","src":"10443:3:6"},"nativeSrc":"10443:27:6","nodeType":"YulFunctionCall","src":"10443:27:6"},"variables":[{"name":"tail","nativeSrc":"10435:4:6","nodeType":"YulTypedName","src":"10435:4:6","type":""}]},{"nativeSrc":"10479:81:6","nodeType":"YulVariableDeclaration","src":"10479:81:6","value":{"arguments":[{"name":"value","nativeSrc":"10554:5:6","nodeType":"YulIdentifier","src":"10554:5:6"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"10494:59:6","nodeType":"YulIdentifier","src":"10494:59:6"},"nativeSrc":"10494:66:6","nodeType":"YulFunctionCall","src":"10494:66:6"},"variables":[{"name":"baseRef","nativeSrc":"10483:7:6","nodeType":"YulTypedName","src":"10483:7:6","type":""}]},{"nativeSrc":"10569:21:6","nodeType":"YulVariableDeclaration","src":"10569:21:6","value":{"name":"baseRef","nativeSrc":"10583:7:6","nodeType":"YulIdentifier","src":"10583:7:6"},"variables":[{"name":"srcPtr","nativeSrc":"10573:6:6","nodeType":"YulTypedName","src":"10573:6:6","type":""}]},{"body":{"nativeSrc":"10659:336:6","nodeType":"YulBlock","src":"10659:336:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10680:3:6","nodeType":"YulIdentifier","src":"10680:3:6"},{"arguments":[{"name":"tail","nativeSrc":"10689:4:6","nodeType":"YulIdentifier","src":"10689:4:6"},{"name":"headStart","nativeSrc":"10695:9:6","nodeType":"YulIdentifier","src":"10695:9:6"}],"functionName":{"name":"sub","nativeSrc":"10685:3:6","nodeType":"YulIdentifier","src":"10685:3:6"},"nativeSrc":"10685:20:6","nodeType":"YulFunctionCall","src":"10685:20:6"}],"functionName":{"name":"mstore","nativeSrc":"10673:6:6","nodeType":"YulIdentifier","src":"10673:6:6"},"nativeSrc":"10673:33:6","nodeType":"YulFunctionCall","src":"10673:33:6"},"nativeSrc":"10673:33:6","nodeType":"YulExpressionStatement","src":"10673:33:6"},{"nativeSrc":"10719:34:6","nodeType":"YulVariableDeclaration","src":"10719:34:6","value":{"arguments":[{"name":"srcPtr","nativeSrc":"10746:6:6","nodeType":"YulIdentifier","src":"10746:6:6"}],"functionName":{"name":"mload","nativeSrc":"10740:5:6","nodeType":"YulIdentifier","src":"10740:5:6"},"nativeSrc":"10740:13:6","nodeType":"YulFunctionCall","src":"10740:13:6"},"variables":[{"name":"elementValue0","nativeSrc":"10723:13:6","nodeType":"YulTypedName","src":"10723:13:6","type":""}]},{"nativeSrc":"10766:92:6","nodeType":"YulAssignment","src":"10766:92:6","value":{"arguments":[{"name":"elementValue0","nativeSrc":"10838:13:6","nodeType":"YulIdentifier","src":"10838:13:6"},{"name":"tail","nativeSrc":"10853:4:6","nodeType":"YulIdentifier","src":"10853:4:6"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"10774:63:6","nodeType":"YulIdentifier","src":"10774:63:6"},"nativeSrc":"10774:84:6","nodeType":"YulFunctionCall","src":"10774:84:6"},"variableNames":[{"name":"tail","nativeSrc":"10766:4:6","nodeType":"YulIdentifier","src":"10766:4:6"}]},{"nativeSrc":"10871:80:6","nodeType":"YulAssignment","src":"10871:80:6","value":{"arguments":[{"name":"srcPtr","nativeSrc":"10944:6:6","nodeType":"YulIdentifier","src":"10944:6:6"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"10881:62:6","nodeType":"YulIdentifier","src":"10881:62:6"},"nativeSrc":"10881:70:6","nodeType":"YulFunctionCall","src":"10881:70:6"},"variableNames":[{"name":"srcPtr","nativeSrc":"10871:6:6","nodeType":"YulIdentifier","src":"10871:6:6"}]},{"nativeSrc":"10964:21:6","nodeType":"YulAssignment","src":"10964:21:6","value":{"arguments":[{"name":"pos","nativeSrc":"10975:3:6","nodeType":"YulIdentifier","src":"10975:3:6"},{"kind":"number","nativeSrc":"10980:4:6","nodeType":"YulLiteral","src":"10980:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10971:3:6","nodeType":"YulIdentifier","src":"10971:3:6"},"nativeSrc":"10971:14:6","nodeType":"YulFunctionCall","src":"10971:14:6"},"variableNames":[{"name":"pos","nativeSrc":"10964:3:6","nodeType":"YulIdentifier","src":"10964:3:6"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"10621:1:6","nodeType":"YulIdentifier","src":"10621:1:6"},{"name":"length","nativeSrc":"10624:6:6","nodeType":"YulIdentifier","src":"10624:6:6"}],"functionName":{"name":"lt","nativeSrc":"10618:2:6","nodeType":"YulIdentifier","src":"10618:2:6"},"nativeSrc":"10618:13:6","nodeType":"YulFunctionCall","src":"10618:13:6"},"nativeSrc":"10599:396:6","nodeType":"YulForLoop","post":{"nativeSrc":"10632:18:6","nodeType":"YulBlock","src":"10632:18:6","statements":[{"nativeSrc":"10634:14:6","nodeType":"YulAssignment","src":"10634:14:6","value":{"arguments":[{"name":"i","nativeSrc":"10643:1:6","nodeType":"YulIdentifier","src":"10643:1:6"},{"kind":"number","nativeSrc":"10646:1:6","nodeType":"YulLiteral","src":"10646:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"10639:3:6","nodeType":"YulIdentifier","src":"10639:3:6"},"nativeSrc":"10639:9:6","nodeType":"YulFunctionCall","src":"10639:9:6"},"variableNames":[{"name":"i","nativeSrc":"10634:1:6","nodeType":"YulIdentifier","src":"10634:1:6"}]}]},"pre":{"nativeSrc":"10603:14:6","nodeType":"YulBlock","src":"10603:14:6","statements":[{"nativeSrc":"10605:10:6","nodeType":"YulVariableDeclaration","src":"10605:10:6","value":{"kind":"number","nativeSrc":"10614:1:6","nodeType":"YulLiteral","src":"10614:1:6","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"10609:1:6","nodeType":"YulTypedName","src":"10609:1:6","type":""}]}]},"src":"10599:396:6"},{"nativeSrc":"11004:11:6","nodeType":"YulAssignment","src":"11004:11:6","value":{"name":"tail","nativeSrc":"11011:4:6","nodeType":"YulIdentifier","src":"11011:4:6"},"variableNames":[{"name":"pos","nativeSrc":"11004:3:6","nodeType":"YulIdentifier","src":"11004:3:6"}]},{"nativeSrc":"11024:10:6","nodeType":"YulAssignment","src":"11024:10:6","value":{"name":"pos","nativeSrc":"11031:3:6","nodeType":"YulIdentifier","src":"11031:3:6"},"variableNames":[{"name":"end","nativeSrc":"11024:3:6","nodeType":"YulIdentifier","src":"11024:3:6"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"10069:971:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10182:5:6","nodeType":"YulTypedName","src":"10182:5:6","type":""},{"name":"pos","nativeSrc":"10189:3:6","nodeType":"YulTypedName","src":"10189:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10198:3:6","nodeType":"YulTypedName","src":"10198:3:6","type":""}],"src":"10069:971:6"},{"body":{"nativeSrc":"11095:50:6","nodeType":"YulBlock","src":"11095:50:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11112:3:6","nodeType":"YulIdentifier","src":"11112:3:6"},{"arguments":[{"name":"value","nativeSrc":"11132:5:6","nodeType":"YulIdentifier","src":"11132:5:6"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"11117:14:6","nodeType":"YulIdentifier","src":"11117:14:6"},"nativeSrc":"11117:21:6","nodeType":"YulFunctionCall","src":"11117:21:6"}],"functionName":{"name":"mstore","nativeSrc":"11105:6:6","nodeType":"YulIdentifier","src":"11105:6:6"},"nativeSrc":"11105:34:6","nodeType":"YulFunctionCall","src":"11105:34:6"},"nativeSrc":"11105:34:6","nodeType":"YulExpressionStatement","src":"11105:34:6"}]},"name":"abi_encode_t_bool_to_t_bool","nativeSrc":"11046:99:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11083:5:6","nodeType":"YulTypedName","src":"11083:5:6","type":""},{"name":"pos","nativeSrc":"11090:3:6","nodeType":"YulTypedName","src":"11090:3:6","type":""}],"src":"11046:99:6"},{"body":{"nativeSrc":"11327:1568:6","nodeType":"YulBlock","src":"11327:1568:6","statements":[{"nativeSrc":"11337:26:6","nodeType":"YulVariableDeclaration","src":"11337:26:6","value":{"arguments":[{"name":"pos","nativeSrc":"11353:3:6","nodeType":"YulIdentifier","src":"11353:3:6"},{"kind":"number","nativeSrc":"11358:4:6","nodeType":"YulLiteral","src":"11358:4:6","type":"","value":"0xe0"}],"functionName":{"name":"add","nativeSrc":"11349:3:6","nodeType":"YulIdentifier","src":"11349:3:6"},"nativeSrc":"11349:14:6","nodeType":"YulFunctionCall","src":"11349:14:6"},"variables":[{"name":"tail","nativeSrc":"11341:4:6","nodeType":"YulTypedName","src":"11341:4:6","type":""}]},{"nativeSrc":"11373:166:6","nodeType":"YulBlock","src":"11373:166:6","statements":[{"nativeSrc":"11410:43:6","nodeType":"YulVariableDeclaration","src":"11410:43:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11440:5:6","nodeType":"YulIdentifier","src":"11440:5:6"},{"kind":"number","nativeSrc":"11447:4:6","nodeType":"YulLiteral","src":"11447:4:6","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"11436:3:6","nodeType":"YulIdentifier","src":"11436:3:6"},"nativeSrc":"11436:16:6","nodeType":"YulFunctionCall","src":"11436:16:6"}],"functionName":{"name":"mload","nativeSrc":"11430:5:6","nodeType":"YulIdentifier","src":"11430:5:6"},"nativeSrc":"11430:23:6","nodeType":"YulFunctionCall","src":"11430:23:6"},"variables":[{"name":"memberValue0","nativeSrc":"11414:12:6","nodeType":"YulTypedName","src":"11414:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"11500:12:6","nodeType":"YulIdentifier","src":"11500:12:6"},{"arguments":[{"name":"pos","nativeSrc":"11518:3:6","nodeType":"YulIdentifier","src":"11518:3:6"},{"kind":"number","nativeSrc":"11523:4:6","nodeType":"YulLiteral","src":"11523:4:6","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"11514:3:6","nodeType":"YulIdentifier","src":"11514:3:6"},"nativeSrc":"11514:14:6","nodeType":"YulFunctionCall","src":"11514:14:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nativeSrc":"11466:33:6","nodeType":"YulIdentifier","src":"11466:33:6"},"nativeSrc":"11466:63:6","nodeType":"YulFunctionCall","src":"11466:63:6"},"nativeSrc":"11466:63:6","nodeType":"YulExpressionStatement","src":"11466:63:6"}]},{"nativeSrc":"11549:236:6","nodeType":"YulBlock","src":"11549:236:6","statements":[{"nativeSrc":"11585:43:6","nodeType":"YulVariableDeclaration","src":"11585:43:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11615:5:6","nodeType":"YulIdentifier","src":"11615:5:6"},{"kind":"number","nativeSrc":"11622:4:6","nodeType":"YulLiteral","src":"11622:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11611:3:6","nodeType":"YulIdentifier","src":"11611:3:6"},"nativeSrc":"11611:16:6","nodeType":"YulFunctionCall","src":"11611:16:6"}],"functionName":{"name":"mload","nativeSrc":"11605:5:6","nodeType":"YulIdentifier","src":"11605:5:6"},"nativeSrc":"11605:23:6","nodeType":"YulFunctionCall","src":"11605:23:6"},"variables":[{"name":"memberValue0","nativeSrc":"11589:12:6","nodeType":"YulTypedName","src":"11589:12:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"11653:3:6","nodeType":"YulIdentifier","src":"11653:3:6"},{"kind":"number","nativeSrc":"11658:4:6","nodeType":"YulLiteral","src":"11658:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11649:3:6","nodeType":"YulIdentifier","src":"11649:3:6"},"nativeSrc":"11649:14:6","nodeType":"YulFunctionCall","src":"11649:14:6"},{"arguments":[{"name":"tail","nativeSrc":"11669:4:6","nodeType":"YulIdentifier","src":"11669:4:6"},{"name":"pos","nativeSrc":"11675:3:6","nodeType":"YulIdentifier","src":"11675:3:6"}],"functionName":{"name":"sub","nativeSrc":"11665:3:6","nodeType":"YulIdentifier","src":"11665:3:6"},"nativeSrc":"11665:14:6","nodeType":"YulFunctionCall","src":"11665:14:6"}],"functionName":{"name":"mstore","nativeSrc":"11642:6:6","nodeType":"YulIdentifier","src":"11642:6:6"},"nativeSrc":"11642:38:6","nodeType":"YulFunctionCall","src":"11642:38:6"},"nativeSrc":"11642:38:6","nodeType":"YulExpressionStatement","src":"11642:38:6"},{"nativeSrc":"11693:81:6","nodeType":"YulAssignment","src":"11693:81:6","value":{"arguments":[{"name":"memberValue0","nativeSrc":"11755:12:6","nodeType":"YulIdentifier","src":"11755:12:6"},{"name":"tail","nativeSrc":"11769:4:6","nodeType":"YulIdentifier","src":"11769:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"11701:53:6","nodeType":"YulIdentifier","src":"11701:53:6"},"nativeSrc":"11701:73:6","nodeType":"YulFunctionCall","src":"11701:73:6"},"variableNames":[{"name":"tail","nativeSrc":"11693:4:6","nodeType":"YulIdentifier","src":"11693:4:6"}]}]},{"nativeSrc":"11795:242:6","nodeType":"YulBlock","src":"11795:242:6","statements":[{"nativeSrc":"11837:43:6","nodeType":"YulVariableDeclaration","src":"11837:43:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11867:5:6","nodeType":"YulIdentifier","src":"11867:5:6"},{"kind":"number","nativeSrc":"11874:4:6","nodeType":"YulLiteral","src":"11874:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"11863:3:6","nodeType":"YulIdentifier","src":"11863:3:6"},"nativeSrc":"11863:16:6","nodeType":"YulFunctionCall","src":"11863:16:6"}],"functionName":{"name":"mload","nativeSrc":"11857:5:6","nodeType":"YulIdentifier","src":"11857:5:6"},"nativeSrc":"11857:23:6","nodeType":"YulFunctionCall","src":"11857:23:6"},"variables":[{"name":"memberValue0","nativeSrc":"11841:12:6","nodeType":"YulTypedName","src":"11841:12:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"11905:3:6","nodeType":"YulIdentifier","src":"11905:3:6"},{"kind":"number","nativeSrc":"11910:4:6","nodeType":"YulLiteral","src":"11910:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"11901:3:6","nodeType":"YulIdentifier","src":"11901:3:6"},"nativeSrc":"11901:14:6","nodeType":"YulFunctionCall","src":"11901:14:6"},{"arguments":[{"name":"tail","nativeSrc":"11921:4:6","nodeType":"YulIdentifier","src":"11921:4:6"},{"name":"pos","nativeSrc":"11927:3:6","nodeType":"YulIdentifier","src":"11927:3:6"}],"functionName":{"name":"sub","nativeSrc":"11917:3:6","nodeType":"YulIdentifier","src":"11917:3:6"},"nativeSrc":"11917:14:6","nodeType":"YulFunctionCall","src":"11917:14:6"}],"functionName":{"name":"mstore","nativeSrc":"11894:6:6","nodeType":"YulIdentifier","src":"11894:6:6"},"nativeSrc":"11894:38:6","nodeType":"YulFunctionCall","src":"11894:38:6"},"nativeSrc":"11894:38:6","nodeType":"YulExpressionStatement","src":"11894:38:6"},{"nativeSrc":"11945:81:6","nodeType":"YulAssignment","src":"11945:81:6","value":{"arguments":[{"name":"memberValue0","nativeSrc":"12007:12:6","nodeType":"YulIdentifier","src":"12007:12:6"},{"name":"tail","nativeSrc":"12021:4:6","nodeType":"YulIdentifier","src":"12021:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"11953:53:6","nodeType":"YulIdentifier","src":"11953:53:6"},"nativeSrc":"11953:73:6","nodeType":"YulFunctionCall","src":"11953:73:6"},"variableNames":[{"name":"tail","nativeSrc":"11945:4:6","nodeType":"YulIdentifier","src":"11945:4:6"}]}]},{"nativeSrc":"12047:169:6","nodeType":"YulBlock","src":"12047:169:6","statements":[{"nativeSrc":"12087:43:6","nodeType":"YulVariableDeclaration","src":"12087:43:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12117:5:6","nodeType":"YulIdentifier","src":"12117:5:6"},{"kind":"number","nativeSrc":"12124:4:6","nodeType":"YulLiteral","src":"12124:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"12113:3:6","nodeType":"YulIdentifier","src":"12113:3:6"},"nativeSrc":"12113:16:6","nodeType":"YulFunctionCall","src":"12113:16:6"}],"functionName":{"name":"mload","nativeSrc":"12107:5:6","nodeType":"YulIdentifier","src":"12107:5:6"},"nativeSrc":"12107:23:6","nodeType":"YulFunctionCall","src":"12107:23:6"},"variables":[{"name":"memberValue0","nativeSrc":"12091:12:6","nodeType":"YulTypedName","src":"12091:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"12177:12:6","nodeType":"YulIdentifier","src":"12177:12:6"},{"arguments":[{"name":"pos","nativeSrc":"12195:3:6","nodeType":"YulIdentifier","src":"12195:3:6"},{"kind":"number","nativeSrc":"12200:4:6","nodeType":"YulLiteral","src":"12200:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"12191:3:6","nodeType":"YulIdentifier","src":"12191:3:6"},"nativeSrc":"12191:14:6","nodeType":"YulFunctionCall","src":"12191:14:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"12143:33:6","nodeType":"YulIdentifier","src":"12143:33:6"},"nativeSrc":"12143:63:6","nodeType":"YulFunctionCall","src":"12143:63:6"},"nativeSrc":"12143:63:6","nodeType":"YulExpressionStatement","src":"12143:63:6"}]},{"nativeSrc":"12226:289:6","nodeType":"YulBlock","src":"12226:289:6","statements":[{"nativeSrc":"12265:43:6","nodeType":"YulVariableDeclaration","src":"12265:43:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12295:5:6","nodeType":"YulIdentifier","src":"12295:5:6"},{"kind":"number","nativeSrc":"12302:4:6","nodeType":"YulLiteral","src":"12302:4:6","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"12291:3:6","nodeType":"YulIdentifier","src":"12291:3:6"},"nativeSrc":"12291:16:6","nodeType":"YulFunctionCall","src":"12291:16:6"}],"functionName":{"name":"mload","nativeSrc":"12285:5:6","nodeType":"YulIdentifier","src":"12285:5:6"},"nativeSrc":"12285:23:6","nodeType":"YulFunctionCall","src":"12285:23:6"},"variables":[{"name":"memberValue0","nativeSrc":"12269:12:6","nodeType":"YulTypedName","src":"12269:12:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"12333:3:6","nodeType":"YulIdentifier","src":"12333:3:6"},{"kind":"number","nativeSrc":"12338:4:6","nodeType":"YulLiteral","src":"12338:4:6","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"12329:3:6","nodeType":"YulIdentifier","src":"12329:3:6"},"nativeSrc":"12329:14:6","nodeType":"YulFunctionCall","src":"12329:14:6"},{"arguments":[{"name":"tail","nativeSrc":"12349:4:6","nodeType":"YulIdentifier","src":"12349:4:6"},{"name":"pos","nativeSrc":"12355:3:6","nodeType":"YulIdentifier","src":"12355:3:6"}],"functionName":{"name":"sub","nativeSrc":"12345:3:6","nodeType":"YulIdentifier","src":"12345:3:6"},"nativeSrc":"12345:14:6","nodeType":"YulFunctionCall","src":"12345:14:6"}],"functionName":{"name":"mstore","nativeSrc":"12322:6:6","nodeType":"YulIdentifier","src":"12322:6:6"},"nativeSrc":"12322:38:6","nodeType":"YulFunctionCall","src":"12322:38:6"},"nativeSrc":"12322:38:6","nodeType":"YulExpressionStatement","src":"12322:38:6"},{"nativeSrc":"12373:131:6","nodeType":"YulAssignment","src":"12373:131:6","value":{"arguments":[{"name":"memberValue0","nativeSrc":"12485:12:6","nodeType":"YulIdentifier","src":"12485:12:6"},{"name":"tail","nativeSrc":"12499:4:6","nodeType":"YulIdentifier","src":"12499:4:6"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"12381:103:6","nodeType":"YulIdentifier","src":"12381:103:6"},"nativeSrc":"12381:123:6","nodeType":"YulFunctionCall","src":"12381:123:6"},"variableNames":[{"name":"tail","nativeSrc":"12373:4:6","nodeType":"YulIdentifier","src":"12373:4:6"}]}]},{"nativeSrc":"12525:160:6","nodeType":"YulBlock","src":"12525:160:6","statements":[{"nativeSrc":"12562:43:6","nodeType":"YulVariableDeclaration","src":"12562:43:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12592:5:6","nodeType":"YulIdentifier","src":"12592:5:6"},{"kind":"number","nativeSrc":"12599:4:6","nodeType":"YulLiteral","src":"12599:4:6","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"12588:3:6","nodeType":"YulIdentifier","src":"12588:3:6"},"nativeSrc":"12588:16:6","nodeType":"YulFunctionCall","src":"12588:16:6"}],"functionName":{"name":"mload","nativeSrc":"12582:5:6","nodeType":"YulIdentifier","src":"12582:5:6"},"nativeSrc":"12582:23:6","nodeType":"YulFunctionCall","src":"12582:23:6"},"variables":[{"name":"memberValue0","nativeSrc":"12566:12:6","nodeType":"YulTypedName","src":"12566:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"12646:12:6","nodeType":"YulIdentifier","src":"12646:12:6"},{"arguments":[{"name":"pos","nativeSrc":"12664:3:6","nodeType":"YulIdentifier","src":"12664:3:6"},{"kind":"number","nativeSrc":"12669:4:6","nodeType":"YulLiteral","src":"12669:4:6","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"12660:3:6","nodeType":"YulIdentifier","src":"12660:3:6"},"nativeSrc":"12660:14:6","nodeType":"YulFunctionCall","src":"12660:14:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nativeSrc":"12618:27:6","nodeType":"YulIdentifier","src":"12618:27:6"},"nativeSrc":"12618:57:6","nodeType":"YulFunctionCall","src":"12618:57:6"},"nativeSrc":"12618:57:6","nodeType":"YulExpressionStatement","src":"12618:57:6"}]},{"nativeSrc":"12695:173:6","nodeType":"YulBlock","src":"12695:173:6","statements":[{"nativeSrc":"12739:43:6","nodeType":"YulVariableDeclaration","src":"12739:43:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12769:5:6","nodeType":"YulIdentifier","src":"12769:5:6"},{"kind":"number","nativeSrc":"12776:4:6","nodeType":"YulLiteral","src":"12776:4:6","type":"","value":"0xc0"}],"functionName":{"name":"add","nativeSrc":"12765:3:6","nodeType":"YulIdentifier","src":"12765:3:6"},"nativeSrc":"12765:16:6","nodeType":"YulFunctionCall","src":"12765:16:6"}],"functionName":{"name":"mload","nativeSrc":"12759:5:6","nodeType":"YulIdentifier","src":"12759:5:6"},"nativeSrc":"12759:23:6","nodeType":"YulFunctionCall","src":"12759:23:6"},"variables":[{"name":"memberValue0","nativeSrc":"12743:12:6","nodeType":"YulTypedName","src":"12743:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"12829:12:6","nodeType":"YulIdentifier","src":"12829:12:6"},{"arguments":[{"name":"pos","nativeSrc":"12847:3:6","nodeType":"YulIdentifier","src":"12847:3:6"},{"kind":"number","nativeSrc":"12852:4:6","nodeType":"YulLiteral","src":"12852:4:6","type":"","value":"0xc0"}],"functionName":{"name":"add","nativeSrc":"12843:3:6","nodeType":"YulIdentifier","src":"12843:3:6"},"nativeSrc":"12843:14:6","nodeType":"YulFunctionCall","src":"12843:14:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"12795:33:6","nodeType":"YulIdentifier","src":"12795:33:6"},"nativeSrc":"12795:63:6","nodeType":"YulFunctionCall","src":"12795:63:6"},"nativeSrc":"12795:63:6","nodeType":"YulExpressionStatement","src":"12795:63:6"}]},{"nativeSrc":"12878:11:6","nodeType":"YulAssignment","src":"12878:11:6","value":{"name":"tail","nativeSrc":"12885:4:6","nodeType":"YulIdentifier","src":"12885:4:6"},"variableNames":[{"name":"end","nativeSrc":"12878:3:6","nodeType":"YulIdentifier","src":"12878:3:6"}]}]},"name":"abi_encode_t_struct$_Paper_$807_memory_ptr_to_t_struct$_Paper_$807_memory_ptr","nativeSrc":"11219:1676:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11306:5:6","nodeType":"YulTypedName","src":"11306:5:6","type":""},{"name":"pos","nativeSrc":"11313:3:6","nodeType":"YulTypedName","src":"11313:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11322:3:6","nodeType":"YulTypedName","src":"11322:3:6","type":""}],"src":"11219:1676:6"},{"body":{"nativeSrc":"13025:120:6","nodeType":"YulBlock","src":"13025:120:6","statements":[{"nativeSrc":"13035:104:6","nodeType":"YulAssignment","src":"13035:104:6","value":{"arguments":[{"name":"value0","nativeSrc":"13127:6:6","nodeType":"YulIdentifier","src":"13127:6:6"},{"name":"pos","nativeSrc":"13135:3:6","nodeType":"YulIdentifier","src":"13135:3:6"}],"functionName":{"name":"abi_encode_t_struct$_Paper_$807_memory_ptr_to_t_struct$_Paper_$807_memory_ptr","nativeSrc":"13049:77:6","nodeType":"YulIdentifier","src":"13049:77:6"},"nativeSrc":"13049:90:6","nodeType":"YulFunctionCall","src":"13049:90:6"},"variableNames":[{"name":"updatedPos","nativeSrc":"13035:10:6","nodeType":"YulIdentifier","src":"13035:10:6"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_Paper_$807_memory_ptr_to_t_struct$_Paper_$807_memory_ptr","nativeSrc":"12901:244:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"12998:6:6","nodeType":"YulTypedName","src":"12998:6:6","type":""},{"name":"pos","nativeSrc":"13006:3:6","nodeType":"YulTypedName","src":"13006:3:6","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"13014:10:6","nodeType":"YulTypedName","src":"13014:10:6","type":""}],"src":"12901:244:6"},{"body":{"nativeSrc":"13248:38:6","nodeType":"YulBlock","src":"13248:38:6","statements":[{"nativeSrc":"13258:22:6","nodeType":"YulAssignment","src":"13258:22:6","value":{"arguments":[{"name":"ptr","nativeSrc":"13270:3:6","nodeType":"YulIdentifier","src":"13270:3:6"},{"kind":"number","nativeSrc":"13275:4:6","nodeType":"YulLiteral","src":"13275:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13266:3:6","nodeType":"YulIdentifier","src":"13266:3:6"},"nativeSrc":"13266:14:6","nodeType":"YulFunctionCall","src":"13266:14:6"},"variableNames":[{"name":"next","nativeSrc":"13258:4:6","nodeType":"YulIdentifier","src":"13258:4:6"}]}]},"name":"array_nextElement_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","nativeSrc":"13151:135:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"13235:3:6","nodeType":"YulTypedName","src":"13235:3:6","type":""}],"returnVariables":[{"name":"next","nativeSrc":"13243:4:6","nodeType":"YulTypedName","src":"13243:4:6","type":""}],"src":"13151:135:6"},{"body":{"nativeSrc":"13532:919:6","nodeType":"YulBlock","src":"13532:919:6","statements":[{"nativeSrc":"13542:90:6","nodeType":"YulVariableDeclaration","src":"13542:90:6","value":{"arguments":[{"name":"value","nativeSrc":"13626:5:6","nodeType":"YulIdentifier","src":"13626:5:6"}],"functionName":{"name":"array_length_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","nativeSrc":"13556:69:6","nodeType":"YulIdentifier","src":"13556:69:6"},"nativeSrc":"13556:76:6","nodeType":"YulFunctionCall","src":"13556:76:6"},"variables":[{"name":"length","nativeSrc":"13546:6:6","nodeType":"YulTypedName","src":"13546:6:6","type":""}]},{"nativeSrc":"13641:115:6","nodeType":"YulAssignment","src":"13641:115:6","value":{"arguments":[{"name":"pos","nativeSrc":"13744:3:6","nodeType":"YulIdentifier","src":"13744:3:6"},{"name":"length","nativeSrc":"13749:6:6","nodeType":"YulIdentifier","src":"13749:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"13648:95:6","nodeType":"YulIdentifier","src":"13648:95:6"},"nativeSrc":"13648:108:6","nodeType":"YulFunctionCall","src":"13648:108:6"},"variableNames":[{"name":"pos","nativeSrc":"13641:3:6","nodeType":"YulIdentifier","src":"13641:3:6"}]},{"nativeSrc":"13765:20:6","nodeType":"YulVariableDeclaration","src":"13765:20:6","value":{"name":"pos","nativeSrc":"13782:3:6","nodeType":"YulIdentifier","src":"13782:3:6"},"variables":[{"name":"headStart","nativeSrc":"13769:9:6","nodeType":"YulTypedName","src":"13769:9:6","type":""}]},{"nativeSrc":"13794:39:6","nodeType":"YulVariableDeclaration","src":"13794:39:6","value":{"arguments":[{"name":"pos","nativeSrc":"13810:3:6","nodeType":"YulIdentifier","src":"13810:3:6"},{"arguments":[{"name":"length","nativeSrc":"13819:6:6","nodeType":"YulIdentifier","src":"13819:6:6"},{"kind":"number","nativeSrc":"13827:4:6","nodeType":"YulLiteral","src":"13827:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"13815:3:6","nodeType":"YulIdentifier","src":"13815:3:6"},"nativeSrc":"13815:17:6","nodeType":"YulFunctionCall","src":"13815:17:6"}],"functionName":{"name":"add","nativeSrc":"13806:3:6","nodeType":"YulIdentifier","src":"13806:3:6"},"nativeSrc":"13806:27:6","nodeType":"YulFunctionCall","src":"13806:27:6"},"variables":[{"name":"tail","nativeSrc":"13798:4:6","nodeType":"YulTypedName","src":"13798:4:6","type":""}]},{"nativeSrc":"13842:93:6","nodeType":"YulVariableDeclaration","src":"13842:93:6","value":{"arguments":[{"name":"value","nativeSrc":"13929:5:6","nodeType":"YulIdentifier","src":"13929:5:6"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","nativeSrc":"13857:71:6","nodeType":"YulIdentifier","src":"13857:71:6"},"nativeSrc":"13857:78:6","nodeType":"YulFunctionCall","src":"13857:78:6"},"variables":[{"name":"baseRef","nativeSrc":"13846:7:6","nodeType":"YulTypedName","src":"13846:7:6","type":""}]},{"nativeSrc":"13944:21:6","nodeType":"YulVariableDeclaration","src":"13944:21:6","value":{"name":"baseRef","nativeSrc":"13958:7:6","nodeType":"YulIdentifier","src":"13958:7:6"},"variables":[{"name":"srcPtr","nativeSrc":"13948:6:6","nodeType":"YulTypedName","src":"13948:6:6","type":""}]},{"body":{"nativeSrc":"14034:372:6","nodeType":"YulBlock","src":"14034:372:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14055:3:6","nodeType":"YulIdentifier","src":"14055:3:6"},{"arguments":[{"name":"tail","nativeSrc":"14064:4:6","nodeType":"YulIdentifier","src":"14064:4:6"},{"name":"headStart","nativeSrc":"14070:9:6","nodeType":"YulIdentifier","src":"14070:9:6"}],"functionName":{"name":"sub","nativeSrc":"14060:3:6","nodeType":"YulIdentifier","src":"14060:3:6"},"nativeSrc":"14060:20:6","nodeType":"YulFunctionCall","src":"14060:20:6"}],"functionName":{"name":"mstore","nativeSrc":"14048:6:6","nodeType":"YulIdentifier","src":"14048:6:6"},"nativeSrc":"14048:33:6","nodeType":"YulFunctionCall","src":"14048:33:6"},"nativeSrc":"14048:33:6","nodeType":"YulExpressionStatement","src":"14048:33:6"},{"nativeSrc":"14094:34:6","nodeType":"YulVariableDeclaration","src":"14094:34:6","value":{"arguments":[{"name":"srcPtr","nativeSrc":"14121:6:6","nodeType":"YulIdentifier","src":"14121:6:6"}],"functionName":{"name":"mload","nativeSrc":"14115:5:6","nodeType":"YulIdentifier","src":"14115:5:6"},"nativeSrc":"14115:13:6","nodeType":"YulFunctionCall","src":"14115:13:6"},"variables":[{"name":"elementValue0","nativeSrc":"14098:13:6","nodeType":"YulTypedName","src":"14098:13:6","type":""}]},{"nativeSrc":"14141:116:6","nodeType":"YulAssignment","src":"14141:116:6","value":{"arguments":[{"name":"elementValue0","nativeSrc":"14237:13:6","nodeType":"YulIdentifier","src":"14237:13:6"},{"name":"tail","nativeSrc":"14252:4:6","nodeType":"YulIdentifier","src":"14252:4:6"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_Paper_$807_memory_ptr_to_t_struct$_Paper_$807_memory_ptr","nativeSrc":"14149:87:6","nodeType":"YulIdentifier","src":"14149:87:6"},"nativeSrc":"14149:108:6","nodeType":"YulFunctionCall","src":"14149:108:6"},"variableNames":[{"name":"tail","nativeSrc":"14141:4:6","nodeType":"YulIdentifier","src":"14141:4:6"}]},{"nativeSrc":"14270:92:6","nodeType":"YulAssignment","src":"14270:92:6","value":{"arguments":[{"name":"srcPtr","nativeSrc":"14355:6:6","nodeType":"YulIdentifier","src":"14355:6:6"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr","nativeSrc":"14280:74:6","nodeType":"YulIdentifier","src":"14280:74:6"},"nativeSrc":"14280:82:6","nodeType":"YulFunctionCall","src":"14280:82:6"},"variableNames":[{"name":"srcPtr","nativeSrc":"14270:6:6","nodeType":"YulIdentifier","src":"14270:6:6"}]},{"nativeSrc":"14375:21:6","nodeType":"YulAssignment","src":"14375:21:6","value":{"arguments":[{"name":"pos","nativeSrc":"14386:3:6","nodeType":"YulIdentifier","src":"14386:3:6"},{"kind":"number","nativeSrc":"14391:4:6","nodeType":"YulLiteral","src":"14391:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14382:3:6","nodeType":"YulIdentifier","src":"14382:3:6"},"nativeSrc":"14382:14:6","nodeType":"YulFunctionCall","src":"14382:14:6"},"variableNames":[{"name":"pos","nativeSrc":"14375:3:6","nodeType":"YulIdentifier","src":"14375:3:6"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"13996:1:6","nodeType":"YulIdentifier","src":"13996:1:6"},{"name":"length","nativeSrc":"13999:6:6","nodeType":"YulIdentifier","src":"13999:6:6"}],"functionName":{"name":"lt","nativeSrc":"13993:2:6","nodeType":"YulIdentifier","src":"13993:2:6"},"nativeSrc":"13993:13:6","nodeType":"YulFunctionCall","src":"13993:13:6"},"nativeSrc":"13974:432:6","nodeType":"YulForLoop","post":{"nativeSrc":"14007:18:6","nodeType":"YulBlock","src":"14007:18:6","statements":[{"nativeSrc":"14009:14:6","nodeType":"YulAssignment","src":"14009:14:6","value":{"arguments":[{"name":"i","nativeSrc":"14018:1:6","nodeType":"YulIdentifier","src":"14018:1:6"},{"kind":"number","nativeSrc":"14021:1:6","nodeType":"YulLiteral","src":"14021:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"14014:3:6","nodeType":"YulIdentifier","src":"14014:3:6"},"nativeSrc":"14014:9:6","nodeType":"YulFunctionCall","src":"14014:9:6"},"variableNames":[{"name":"i","nativeSrc":"14009:1:6","nodeType":"YulIdentifier","src":"14009:1:6"}]}]},"pre":{"nativeSrc":"13978:14:6","nodeType":"YulBlock","src":"13978:14:6","statements":[{"nativeSrc":"13980:10:6","nodeType":"YulVariableDeclaration","src":"13980:10:6","value":{"kind":"number","nativeSrc":"13989:1:6","nodeType":"YulLiteral","src":"13989:1:6","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"13984:1:6","nodeType":"YulTypedName","src":"13984:1:6","type":""}]}]},"src":"13974:432:6"},{"nativeSrc":"14415:11:6","nodeType":"YulAssignment","src":"14415:11:6","value":{"name":"tail","nativeSrc":"14422:4:6","nodeType":"YulIdentifier","src":"14422:4:6"},"variableNames":[{"name":"pos","nativeSrc":"14415:3:6","nodeType":"YulIdentifier","src":"14415:3:6"}]},{"nativeSrc":"14435:10:6","nodeType":"YulAssignment","src":"14435:10:6","value":{"name":"pos","nativeSrc":"14442:3:6","nodeType":"YulIdentifier","src":"14442:3:6"},"variableNames":[{"name":"end","nativeSrc":"14435:3:6","nodeType":"YulIdentifier","src":"14435:3:6"}]}]},"name":"abi_encode_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"13364:1087:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13511:5:6","nodeType":"YulTypedName","src":"13511:5:6","type":""},{"name":"pos","nativeSrc":"13518:3:6","nodeType":"YulTypedName","src":"13518:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13527:3:6","nodeType":"YulTypedName","src":"13527:3:6","type":""}],"src":"13364:1087:6"},{"body":{"nativeSrc":"14649:269:6","nodeType":"YulBlock","src":"14649:269:6","statements":[{"nativeSrc":"14659:26:6","nodeType":"YulAssignment","src":"14659:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"14671:9:6","nodeType":"YulIdentifier","src":"14671:9:6"},{"kind":"number","nativeSrc":"14682:2:6","nodeType":"YulLiteral","src":"14682:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14667:3:6","nodeType":"YulIdentifier","src":"14667:3:6"},"nativeSrc":"14667:18:6","nodeType":"YulFunctionCall","src":"14667:18:6"},"variableNames":[{"name":"tail","nativeSrc":"14659:4:6","nodeType":"YulIdentifier","src":"14659:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14706:9:6","nodeType":"YulIdentifier","src":"14706:9:6"},{"kind":"number","nativeSrc":"14717:1:6","nodeType":"YulLiteral","src":"14717:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14702:3:6","nodeType":"YulIdentifier","src":"14702:3:6"},"nativeSrc":"14702:17:6","nodeType":"YulFunctionCall","src":"14702:17:6"},{"arguments":[{"name":"tail","nativeSrc":"14725:4:6","nodeType":"YulIdentifier","src":"14725:4:6"},{"name":"headStart","nativeSrc":"14731:9:6","nodeType":"YulIdentifier","src":"14731:9:6"}],"functionName":{"name":"sub","nativeSrc":"14721:3:6","nodeType":"YulIdentifier","src":"14721:3:6"},"nativeSrc":"14721:20:6","nodeType":"YulFunctionCall","src":"14721:20:6"}],"functionName":{"name":"mstore","nativeSrc":"14695:6:6","nodeType":"YulIdentifier","src":"14695:6:6"},"nativeSrc":"14695:47:6","nodeType":"YulFunctionCall","src":"14695:47:6"},"nativeSrc":"14695:47:6","nodeType":"YulExpressionStatement","src":"14695:47:6"},{"nativeSrc":"14751:160:6","nodeType":"YulAssignment","src":"14751:160:6","value":{"arguments":[{"name":"value0","nativeSrc":"14897:6:6","nodeType":"YulIdentifier","src":"14897:6:6"},{"name":"tail","nativeSrc":"14906:4:6","nodeType":"YulIdentifier","src":"14906:4:6"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"14759:137:6","nodeType":"YulIdentifier","src":"14759:137:6"},"nativeSrc":"14759:152:6","nodeType":"YulFunctionCall","src":"14759:152:6"},"variableNames":[{"name":"tail","nativeSrc":"14751:4:6","nodeType":"YulIdentifier","src":"14751:4:6"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"14457:461:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14621:9:6","nodeType":"YulTypedName","src":"14621:9:6","type":""},{"name":"value0","nativeSrc":"14633:6:6","nodeType":"YulTypedName","src":"14633:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14644:4:6","nodeType":"YulTypedName","src":"14644:4:6","type":""}],"src":"14457:461:6"},{"body":{"nativeSrc":"15120:436:6","nodeType":"YulBlock","src":"15120:436:6","statements":[{"nativeSrc":"15130:27:6","nodeType":"YulAssignment","src":"15130:27:6","value":{"arguments":[{"name":"headStart","nativeSrc":"15142:9:6","nodeType":"YulIdentifier","src":"15142:9:6"},{"kind":"number","nativeSrc":"15153:3:6","nodeType":"YulLiteral","src":"15153:3:6","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"15138:3:6","nodeType":"YulIdentifier","src":"15138:3:6"},"nativeSrc":"15138:19:6","nodeType":"YulFunctionCall","src":"15138:19:6"},"variableNames":[{"name":"tail","nativeSrc":"15130:4:6","nodeType":"YulIdentifier","src":"15130:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15211:6:6","nodeType":"YulIdentifier","src":"15211:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"15224:9:6","nodeType":"YulIdentifier","src":"15224:9:6"},{"kind":"number","nativeSrc":"15235:1:6","nodeType":"YulLiteral","src":"15235:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15220:3:6","nodeType":"YulIdentifier","src":"15220:3:6"},"nativeSrc":"15220:17:6","nodeType":"YulFunctionCall","src":"15220:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15167:43:6","nodeType":"YulIdentifier","src":"15167:43:6"},"nativeSrc":"15167:71:6","nodeType":"YulFunctionCall","src":"15167:71:6"},"nativeSrc":"15167:71:6","nodeType":"YulExpressionStatement","src":"15167:71:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15259:9:6","nodeType":"YulIdentifier","src":"15259:9:6"},{"kind":"number","nativeSrc":"15270:2:6","nodeType":"YulLiteral","src":"15270:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15255:3:6","nodeType":"YulIdentifier","src":"15255:3:6"},"nativeSrc":"15255:18:6","nodeType":"YulFunctionCall","src":"15255:18:6"},{"arguments":[{"name":"tail","nativeSrc":"15279:4:6","nodeType":"YulIdentifier","src":"15279:4:6"},{"name":"headStart","nativeSrc":"15285:9:6","nodeType":"YulIdentifier","src":"15285:9:6"}],"functionName":{"name":"sub","nativeSrc":"15275:3:6","nodeType":"YulIdentifier","src":"15275:3:6"},"nativeSrc":"15275:20:6","nodeType":"YulFunctionCall","src":"15275:20:6"}],"functionName":{"name":"mstore","nativeSrc":"15248:6:6","nodeType":"YulIdentifier","src":"15248:6:6"},"nativeSrc":"15248:48:6","nodeType":"YulFunctionCall","src":"15248:48:6"},"nativeSrc":"15248:48:6","nodeType":"YulExpressionStatement","src":"15248:48:6"},{"nativeSrc":"15305:86:6","nodeType":"YulAssignment","src":"15305:86:6","value":{"arguments":[{"name":"value1","nativeSrc":"15377:6:6","nodeType":"YulIdentifier","src":"15377:6:6"},{"name":"tail","nativeSrc":"15386:4:6","nodeType":"YulIdentifier","src":"15386:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"15313:63:6","nodeType":"YulIdentifier","src":"15313:63:6"},"nativeSrc":"15313:78:6","nodeType":"YulFunctionCall","src":"15313:78:6"},"variableNames":[{"name":"tail","nativeSrc":"15305:4:6","nodeType":"YulIdentifier","src":"15305:4:6"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15439:6:6","nodeType":"YulIdentifier","src":"15439:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"15452:9:6","nodeType":"YulIdentifier","src":"15452:9:6"},{"kind":"number","nativeSrc":"15463:2:6","nodeType":"YulLiteral","src":"15463:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15448:3:6","nodeType":"YulIdentifier","src":"15448:3:6"},"nativeSrc":"15448:18:6","nodeType":"YulFunctionCall","src":"15448:18:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"15401:37:6","nodeType":"YulIdentifier","src":"15401:37:6"},"nativeSrc":"15401:66:6","nodeType":"YulFunctionCall","src":"15401:66:6"},"nativeSrc":"15401:66:6","nodeType":"YulExpressionStatement","src":"15401:66:6"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"15521:6:6","nodeType":"YulIdentifier","src":"15521:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"15534:9:6","nodeType":"YulIdentifier","src":"15534:9:6"},{"kind":"number","nativeSrc":"15545:2:6","nodeType":"YulLiteral","src":"15545:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15530:3:6","nodeType":"YulIdentifier","src":"15530:3:6"},"nativeSrc":"15530:18:6","nodeType":"YulFunctionCall","src":"15530:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15477:43:6","nodeType":"YulIdentifier","src":"15477:43:6"},"nativeSrc":"15477:72:6","nodeType":"YulFunctionCall","src":"15477:72:6"},"nativeSrc":"15477:72:6","nodeType":"YulExpressionStatement","src":"15477:72:6"}]},"name":"abi_encode_tuple_t_address_t_string_memory_ptr_t_bool_t_uint256__to_t_address_t_string_memory_ptr_t_bool_t_uint256__fromStack_reversed","nativeSrc":"14924:632:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15068:9:6","nodeType":"YulTypedName","src":"15068:9:6","type":""},{"name":"value3","nativeSrc":"15080:6:6","nodeType":"YulTypedName","src":"15080:6:6","type":""},{"name":"value2","nativeSrc":"15088:6:6","nodeType":"YulTypedName","src":"15088:6:6","type":""},{"name":"value1","nativeSrc":"15096:6:6","nodeType":"YulTypedName","src":"15096:6:6","type":""},{"name":"value0","nativeSrc":"15104:6:6","nodeType":"YulTypedName","src":"15104:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15115:4:6","nodeType":"YulTypedName","src":"15115:4:6","type":""}],"src":"14924:632:6"},{"body":{"nativeSrc":"15651:28:6","nodeType":"YulBlock","src":"15651:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15668:1:6","nodeType":"YulLiteral","src":"15668:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"15671:1:6","nodeType":"YulLiteral","src":"15671:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15661:6:6","nodeType":"YulIdentifier","src":"15661:6:6"},"nativeSrc":"15661:12:6","nodeType":"YulFunctionCall","src":"15661:12:6"},"nativeSrc":"15661:12:6","nodeType":"YulExpressionStatement","src":"15661:12:6"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"15562:117:6","nodeType":"YulFunctionDefinition","src":"15562:117:6"},{"body":{"nativeSrc":"15774:28:6","nodeType":"YulBlock","src":"15774:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15791:1:6","nodeType":"YulLiteral","src":"15791:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"15794:1:6","nodeType":"YulLiteral","src":"15794:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15784:6:6","nodeType":"YulIdentifier","src":"15784:6:6"},"nativeSrc":"15784:12:6","nodeType":"YulFunctionCall","src":"15784:12:6"},"nativeSrc":"15784:12:6","nodeType":"YulExpressionStatement","src":"15784:12:6"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"15685:117:6","nodeType":"YulFunctionDefinition","src":"15685:117:6"},{"body":{"nativeSrc":"15836:152:6","nodeType":"YulBlock","src":"15836:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15853:1:6","nodeType":"YulLiteral","src":"15853:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"15856:77:6","nodeType":"YulLiteral","src":"15856:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15846:6:6","nodeType":"YulIdentifier","src":"15846:6:6"},"nativeSrc":"15846:88:6","nodeType":"YulFunctionCall","src":"15846:88:6"},"nativeSrc":"15846:88:6","nodeType":"YulExpressionStatement","src":"15846:88:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15950:1:6","nodeType":"YulLiteral","src":"15950:1:6","type":"","value":"4"},{"kind":"number","nativeSrc":"15953:4:6","nodeType":"YulLiteral","src":"15953:4:6","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"15943:6:6","nodeType":"YulIdentifier","src":"15943:6:6"},"nativeSrc":"15943:15:6","nodeType":"YulFunctionCall","src":"15943:15:6"},"nativeSrc":"15943:15:6","nodeType":"YulExpressionStatement","src":"15943:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15974:1:6","nodeType":"YulLiteral","src":"15974:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"15977:4:6","nodeType":"YulLiteral","src":"15977:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15967:6:6","nodeType":"YulIdentifier","src":"15967:6:6"},"nativeSrc":"15967:15:6","nodeType":"YulFunctionCall","src":"15967:15:6"},"nativeSrc":"15967:15:6","nodeType":"YulExpressionStatement","src":"15967:15:6"}]},"name":"panic_error_0x41","nativeSrc":"15808:180:6","nodeType":"YulFunctionDefinition","src":"15808:180:6"},{"body":{"nativeSrc":"16037:238:6","nodeType":"YulBlock","src":"16037:238:6","statements":[{"nativeSrc":"16047:58:6","nodeType":"YulVariableDeclaration","src":"16047:58:6","value":{"arguments":[{"name":"memPtr","nativeSrc":"16069:6:6","nodeType":"YulIdentifier","src":"16069:6:6"},{"arguments":[{"name":"size","nativeSrc":"16099:4:6","nodeType":"YulIdentifier","src":"16099:4:6"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"16077:21:6","nodeType":"YulIdentifier","src":"16077:21:6"},"nativeSrc":"16077:27:6","nodeType":"YulFunctionCall","src":"16077:27:6"}],"functionName":{"name":"add","nativeSrc":"16065:3:6","nodeType":"YulIdentifier","src":"16065:3:6"},"nativeSrc":"16065:40:6","nodeType":"YulFunctionCall","src":"16065:40:6"},"variables":[{"name":"newFreePtr","nativeSrc":"16051:10:6","nodeType":"YulTypedName","src":"16051:10:6","type":""}]},{"body":{"nativeSrc":"16216:22:6","nodeType":"YulBlock","src":"16216:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"16218:16:6","nodeType":"YulIdentifier","src":"16218:16:6"},"nativeSrc":"16218:18:6","nodeType":"YulFunctionCall","src":"16218:18:6"},"nativeSrc":"16218:18:6","nodeType":"YulExpressionStatement","src":"16218:18:6"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"16159:10:6","nodeType":"YulIdentifier","src":"16159:10:6"},{"kind":"number","nativeSrc":"16171:18:6","nodeType":"YulLiteral","src":"16171:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"16156:2:6","nodeType":"YulIdentifier","src":"16156:2:6"},"nativeSrc":"16156:34:6","nodeType":"YulFunctionCall","src":"16156:34:6"},{"arguments":[{"name":"newFreePtr","nativeSrc":"16195:10:6","nodeType":"YulIdentifier","src":"16195:10:6"},{"name":"memPtr","nativeSrc":"16207:6:6","nodeType":"YulIdentifier","src":"16207:6:6"}],"functionName":{"name":"lt","nativeSrc":"16192:2:6","nodeType":"YulIdentifier","src":"16192:2:6"},"nativeSrc":"16192:22:6","nodeType":"YulFunctionCall","src":"16192:22:6"}],"functionName":{"name":"or","nativeSrc":"16153:2:6","nodeType":"YulIdentifier","src":"16153:2:6"},"nativeSrc":"16153:62:6","nodeType":"YulFunctionCall","src":"16153:62:6"},"nativeSrc":"16150:88:6","nodeType":"YulIf","src":"16150:88:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16254:2:6","nodeType":"YulLiteral","src":"16254:2:6","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"16258:10:6","nodeType":"YulIdentifier","src":"16258:10:6"}],"functionName":{"name":"mstore","nativeSrc":"16247:6:6","nodeType":"YulIdentifier","src":"16247:6:6"},"nativeSrc":"16247:22:6","nodeType":"YulFunctionCall","src":"16247:22:6"},"nativeSrc":"16247:22:6","nodeType":"YulExpressionStatement","src":"16247:22:6"}]},"name":"finalize_allocation","nativeSrc":"15994:281:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"16023:6:6","nodeType":"YulTypedName","src":"16023:6:6","type":""},{"name":"size","nativeSrc":"16031:4:6","nodeType":"YulTypedName","src":"16031:4:6","type":""}],"src":"15994:281:6"},{"body":{"nativeSrc":"16322:88:6","nodeType":"YulBlock","src":"16322:88:6","statements":[{"nativeSrc":"16332:30:6","nodeType":"YulAssignment","src":"16332:30:6","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"16342:18:6","nodeType":"YulIdentifier","src":"16342:18:6"},"nativeSrc":"16342:20:6","nodeType":"YulFunctionCall","src":"16342:20:6"},"variableNames":[{"name":"memPtr","nativeSrc":"16332:6:6","nodeType":"YulIdentifier","src":"16332:6:6"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"16391:6:6","nodeType":"YulIdentifier","src":"16391:6:6"},{"name":"size","nativeSrc":"16399:4:6","nodeType":"YulIdentifier","src":"16399:4:6"}],"functionName":{"name":"finalize_allocation","nativeSrc":"16371:19:6","nodeType":"YulIdentifier","src":"16371:19:6"},"nativeSrc":"16371:33:6","nodeType":"YulFunctionCall","src":"16371:33:6"},"nativeSrc":"16371:33:6","nodeType":"YulExpressionStatement","src":"16371:33:6"}]},"name":"allocate_memory","nativeSrc":"16281:129:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"16306:4:6","nodeType":"YulTypedName","src":"16306:4:6","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"16315:6:6","nodeType":"YulTypedName","src":"16315:6:6","type":""}],"src":"16281:129:6"},{"body":{"nativeSrc":"16483:241:6","nodeType":"YulBlock","src":"16483:241:6","statements":[{"body":{"nativeSrc":"16588:22:6","nodeType":"YulBlock","src":"16588:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"16590:16:6","nodeType":"YulIdentifier","src":"16590:16:6"},"nativeSrc":"16590:18:6","nodeType":"YulFunctionCall","src":"16590:18:6"},"nativeSrc":"16590:18:6","nodeType":"YulExpressionStatement","src":"16590:18:6"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"16560:6:6","nodeType":"YulIdentifier","src":"16560:6:6"},{"kind":"number","nativeSrc":"16568:18:6","nodeType":"YulLiteral","src":"16568:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"16557:2:6","nodeType":"YulIdentifier","src":"16557:2:6"},"nativeSrc":"16557:30:6","nodeType":"YulFunctionCall","src":"16557:30:6"},"nativeSrc":"16554:56:6","nodeType":"YulIf","src":"16554:56:6"},{"nativeSrc":"16620:37:6","nodeType":"YulAssignment","src":"16620:37:6","value":{"arguments":[{"name":"length","nativeSrc":"16650:6:6","nodeType":"YulIdentifier","src":"16650:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"16628:21:6","nodeType":"YulIdentifier","src":"16628:21:6"},"nativeSrc":"16628:29:6","nodeType":"YulFunctionCall","src":"16628:29:6"},"variableNames":[{"name":"size","nativeSrc":"16620:4:6","nodeType":"YulIdentifier","src":"16620:4:6"}]},{"nativeSrc":"16694:23:6","nodeType":"YulAssignment","src":"16694:23:6","value":{"arguments":[{"name":"size","nativeSrc":"16706:4:6","nodeType":"YulIdentifier","src":"16706:4:6"},{"kind":"number","nativeSrc":"16712:4:6","nodeType":"YulLiteral","src":"16712:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16702:3:6","nodeType":"YulIdentifier","src":"16702:3:6"},"nativeSrc":"16702:15:6","nodeType":"YulFunctionCall","src":"16702:15:6"},"variableNames":[{"name":"size","nativeSrc":"16694:4:6","nodeType":"YulIdentifier","src":"16694:4:6"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"16416:308:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"16467:6:6","nodeType":"YulTypedName","src":"16467:6:6","type":""}],"returnVariables":[{"name":"size","nativeSrc":"16478:4:6","nodeType":"YulTypedName","src":"16478:4:6","type":""}],"src":"16416:308:6"},{"body":{"nativeSrc":"16794:82:6","nodeType":"YulBlock","src":"16794:82:6","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"16817:3:6","nodeType":"YulIdentifier","src":"16817:3:6"},{"name":"src","nativeSrc":"16822:3:6","nodeType":"YulIdentifier","src":"16822:3:6"},{"name":"length","nativeSrc":"16827:6:6","nodeType":"YulIdentifier","src":"16827:6:6"}],"functionName":{"name":"calldatacopy","nativeSrc":"16804:12:6","nodeType":"YulIdentifier","src":"16804:12:6"},"nativeSrc":"16804:30:6","nodeType":"YulFunctionCall","src":"16804:30:6"},"nativeSrc":"16804:30:6","nodeType":"YulExpressionStatement","src":"16804:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"16854:3:6","nodeType":"YulIdentifier","src":"16854:3:6"},{"name":"length","nativeSrc":"16859:6:6","nodeType":"YulIdentifier","src":"16859:6:6"}],"functionName":{"name":"add","nativeSrc":"16850:3:6","nodeType":"YulIdentifier","src":"16850:3:6"},"nativeSrc":"16850:16:6","nodeType":"YulFunctionCall","src":"16850:16:6"},{"kind":"number","nativeSrc":"16868:1:6","nodeType":"YulLiteral","src":"16868:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"16843:6:6","nodeType":"YulIdentifier","src":"16843:6:6"},"nativeSrc":"16843:27:6","nodeType":"YulFunctionCall","src":"16843:27:6"},"nativeSrc":"16843:27:6","nodeType":"YulExpressionStatement","src":"16843:27:6"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"16730:146:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"16776:3:6","nodeType":"YulTypedName","src":"16776:3:6","type":""},{"name":"dst","nativeSrc":"16781:3:6","nodeType":"YulTypedName","src":"16781:3:6","type":""},{"name":"length","nativeSrc":"16786:6:6","nodeType":"YulTypedName","src":"16786:6:6","type":""}],"src":"16730:146:6"},{"body":{"nativeSrc":"16966:341:6","nodeType":"YulBlock","src":"16966:341:6","statements":[{"nativeSrc":"16976:75:6","nodeType":"YulAssignment","src":"16976:75:6","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"17043:6:6","nodeType":"YulIdentifier","src":"17043:6:6"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"17001:41:6","nodeType":"YulIdentifier","src":"17001:41:6"},"nativeSrc":"17001:49:6","nodeType":"YulFunctionCall","src":"17001:49:6"}],"functionName":{"name":"allocate_memory","nativeSrc":"16985:15:6","nodeType":"YulIdentifier","src":"16985:15:6"},"nativeSrc":"16985:66:6","nodeType":"YulFunctionCall","src":"16985:66:6"},"variableNames":[{"name":"array","nativeSrc":"16976:5:6","nodeType":"YulIdentifier","src":"16976:5:6"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"17067:5:6","nodeType":"YulIdentifier","src":"17067:5:6"},{"name":"length","nativeSrc":"17074:6:6","nodeType":"YulIdentifier","src":"17074:6:6"}],"functionName":{"name":"mstore","nativeSrc":"17060:6:6","nodeType":"YulIdentifier","src":"17060:6:6"},"nativeSrc":"17060:21:6","nodeType":"YulFunctionCall","src":"17060:21:6"},"nativeSrc":"17060:21:6","nodeType":"YulExpressionStatement","src":"17060:21:6"},{"nativeSrc":"17090:27:6","nodeType":"YulVariableDeclaration","src":"17090:27:6","value":{"arguments":[{"name":"array","nativeSrc":"17105:5:6","nodeType":"YulIdentifier","src":"17105:5:6"},{"kind":"number","nativeSrc":"17112:4:6","nodeType":"YulLiteral","src":"17112:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17101:3:6","nodeType":"YulIdentifier","src":"17101:3:6"},"nativeSrc":"17101:16:6","nodeType":"YulFunctionCall","src":"17101:16:6"},"variables":[{"name":"dst","nativeSrc":"17094:3:6","nodeType":"YulTypedName","src":"17094:3:6","type":""}]},{"body":{"nativeSrc":"17155:83:6","nodeType":"YulBlock","src":"17155:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"17157:77:6","nodeType":"YulIdentifier","src":"17157:77:6"},"nativeSrc":"17157:79:6","nodeType":"YulFunctionCall","src":"17157:79:6"},"nativeSrc":"17157:79:6","nodeType":"YulExpressionStatement","src":"17157:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"17136:3:6","nodeType":"YulIdentifier","src":"17136:3:6"},{"name":"length","nativeSrc":"17141:6:6","nodeType":"YulIdentifier","src":"17141:6:6"}],"functionName":{"name":"add","nativeSrc":"17132:3:6","nodeType":"YulIdentifier","src":"17132:3:6"},"nativeSrc":"17132:16:6","nodeType":"YulFunctionCall","src":"17132:16:6"},{"name":"end","nativeSrc":"17150:3:6","nodeType":"YulIdentifier","src":"17150:3:6"}],"functionName":{"name":"gt","nativeSrc":"17129:2:6","nodeType":"YulIdentifier","src":"17129:2:6"},"nativeSrc":"17129:25:6","nodeType":"YulFunctionCall","src":"17129:25:6"},"nativeSrc":"17126:112:6","nodeType":"YulIf","src":"17126:112:6"},{"expression":{"arguments":[{"name":"src","nativeSrc":"17284:3:6","nodeType":"YulIdentifier","src":"17284:3:6"},{"name":"dst","nativeSrc":"17289:3:6","nodeType":"YulIdentifier","src":"17289:3:6"},{"name":"length","nativeSrc":"17294:6:6","nodeType":"YulIdentifier","src":"17294:6:6"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"17247:36:6","nodeType":"YulIdentifier","src":"17247:36:6"},"nativeSrc":"17247:54:6","nodeType":"YulFunctionCall","src":"17247:54:6"},"nativeSrc":"17247:54:6","nodeType":"YulExpressionStatement","src":"17247:54:6"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"16882:425:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"16939:3:6","nodeType":"YulTypedName","src":"16939:3:6","type":""},{"name":"length","nativeSrc":"16944:6:6","nodeType":"YulTypedName","src":"16944:6:6","type":""},{"name":"end","nativeSrc":"16952:3:6","nodeType":"YulTypedName","src":"16952:3:6","type":""}],"returnVariables":[{"name":"array","nativeSrc":"16960:5:6","nodeType":"YulTypedName","src":"16960:5:6","type":""}],"src":"16882:425:6"},{"body":{"nativeSrc":"17389:278:6","nodeType":"YulBlock","src":"17389:278:6","statements":[{"body":{"nativeSrc":"17438:83:6","nodeType":"YulBlock","src":"17438:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"17440:77:6","nodeType":"YulIdentifier","src":"17440:77:6"},"nativeSrc":"17440:79:6","nodeType":"YulFunctionCall","src":"17440:79:6"},"nativeSrc":"17440:79:6","nodeType":"YulExpressionStatement","src":"17440:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"17417:6:6","nodeType":"YulIdentifier","src":"17417:6:6"},{"kind":"number","nativeSrc":"17425:4:6","nodeType":"YulLiteral","src":"17425:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"17413:3:6","nodeType":"YulIdentifier","src":"17413:3:6"},"nativeSrc":"17413:17:6","nodeType":"YulFunctionCall","src":"17413:17:6"},{"name":"end","nativeSrc":"17432:3:6","nodeType":"YulIdentifier","src":"17432:3:6"}],"functionName":{"name":"slt","nativeSrc":"17409:3:6","nodeType":"YulIdentifier","src":"17409:3:6"},"nativeSrc":"17409:27:6","nodeType":"YulFunctionCall","src":"17409:27:6"}],"functionName":{"name":"iszero","nativeSrc":"17402:6:6","nodeType":"YulIdentifier","src":"17402:6:6"},"nativeSrc":"17402:35:6","nodeType":"YulFunctionCall","src":"17402:35:6"},"nativeSrc":"17399:122:6","nodeType":"YulIf","src":"17399:122:6"},{"nativeSrc":"17530:34:6","nodeType":"YulVariableDeclaration","src":"17530:34:6","value":{"arguments":[{"name":"offset","nativeSrc":"17557:6:6","nodeType":"YulIdentifier","src":"17557:6:6"}],"functionName":{"name":"calldataload","nativeSrc":"17544:12:6","nodeType":"YulIdentifier","src":"17544:12:6"},"nativeSrc":"17544:20:6","nodeType":"YulFunctionCall","src":"17544:20:6"},"variables":[{"name":"length","nativeSrc":"17534:6:6","nodeType":"YulTypedName","src":"17534:6:6","type":""}]},{"nativeSrc":"17573:88:6","nodeType":"YulAssignment","src":"17573:88:6","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"17634:6:6","nodeType":"YulIdentifier","src":"17634:6:6"},{"kind":"number","nativeSrc":"17642:4:6","nodeType":"YulLiteral","src":"17642:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17630:3:6","nodeType":"YulIdentifier","src":"17630:3:6"},"nativeSrc":"17630:17:6","nodeType":"YulFunctionCall","src":"17630:17:6"},{"name":"length","nativeSrc":"17649:6:6","nodeType":"YulIdentifier","src":"17649:6:6"},{"name":"end","nativeSrc":"17657:3:6","nodeType":"YulIdentifier","src":"17657:3:6"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"17582:47:6","nodeType":"YulIdentifier","src":"17582:47:6"},"nativeSrc":"17582:79:6","nodeType":"YulFunctionCall","src":"17582:79:6"},"variableNames":[{"name":"array","nativeSrc":"17573:5:6","nodeType":"YulIdentifier","src":"17573:5:6"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"17327:340:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"17367:6:6","nodeType":"YulTypedName","src":"17367:6:6","type":""},{"name":"end","nativeSrc":"17375:3:6","nodeType":"YulTypedName","src":"17375:3:6","type":""}],"returnVariables":[{"name":"array","nativeSrc":"17383:5:6","nodeType":"YulTypedName","src":"17383:5:6","type":""}],"src":"17327:340:6"},{"body":{"nativeSrc":"17765:229:6","nodeType":"YulBlock","src":"17765:229:6","statements":[{"body":{"nativeSrc":"17870:22:6","nodeType":"YulBlock","src":"17870:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"17872:16:6","nodeType":"YulIdentifier","src":"17872:16:6"},"nativeSrc":"17872:18:6","nodeType":"YulFunctionCall","src":"17872:18:6"},"nativeSrc":"17872:18:6","nodeType":"YulExpressionStatement","src":"17872:18:6"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"17842:6:6","nodeType":"YulIdentifier","src":"17842:6:6"},{"kind":"number","nativeSrc":"17850:18:6","nodeType":"YulLiteral","src":"17850:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"17839:2:6","nodeType":"YulIdentifier","src":"17839:2:6"},"nativeSrc":"17839:30:6","nodeType":"YulFunctionCall","src":"17839:30:6"},"nativeSrc":"17836:56:6","nodeType":"YulIf","src":"17836:56:6"},{"nativeSrc":"17902:25:6","nodeType":"YulAssignment","src":"17902:25:6","value":{"arguments":[{"name":"length","nativeSrc":"17914:6:6","nodeType":"YulIdentifier","src":"17914:6:6"},{"kind":"number","nativeSrc":"17922:4:6","nodeType":"YulLiteral","src":"17922:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17910:3:6","nodeType":"YulIdentifier","src":"17910:3:6"},"nativeSrc":"17910:17:6","nodeType":"YulFunctionCall","src":"17910:17:6"},"variableNames":[{"name":"size","nativeSrc":"17902:4:6","nodeType":"YulIdentifier","src":"17902:4:6"}]},{"nativeSrc":"17964:23:6","nodeType":"YulAssignment","src":"17964:23:6","value":{"arguments":[{"name":"size","nativeSrc":"17976:4:6","nodeType":"YulIdentifier","src":"17976:4:6"},{"kind":"number","nativeSrc":"17982:4:6","nodeType":"YulLiteral","src":"17982:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17972:3:6","nodeType":"YulIdentifier","src":"17972:3:6"},"nativeSrc":"17972:15:6","nodeType":"YulFunctionCall","src":"17972:15:6"},"variableNames":[{"name":"size","nativeSrc":"17964:4:6","nodeType":"YulIdentifier","src":"17964:4:6"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"17673:321:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"17749:6:6","nodeType":"YulTypedName","src":"17749:6:6","type":""}],"returnVariables":[{"name":"size","nativeSrc":"17760:4:6","nodeType":"YulTypedName","src":"17760:4:6","type":""}],"src":"17673:321:6"},{"body":{"nativeSrc":"18089:28:6","nodeType":"YulBlock","src":"18089:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18106:1:6","nodeType":"YulLiteral","src":"18106:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"18109:1:6","nodeType":"YulLiteral","src":"18109:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"18099:6:6","nodeType":"YulIdentifier","src":"18099:6:6"},"nativeSrc":"18099:12:6","nodeType":"YulFunctionCall","src":"18099:12:6"},"nativeSrc":"18099:12:6","nodeType":"YulExpressionStatement","src":"18099:12:6"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"18000:117:6","nodeType":"YulFunctionDefinition","src":"18000:117:6"},{"body":{"nativeSrc":"18251:833:6","nodeType":"YulBlock","src":"18251:833:6","statements":[{"nativeSrc":"18261:100:6","nodeType":"YulAssignment","src":"18261:100:6","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"18353:6:6","nodeType":"YulIdentifier","src":"18353:6:6"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"18286:66:6","nodeType":"YulIdentifier","src":"18286:66:6"},"nativeSrc":"18286:74:6","nodeType":"YulFunctionCall","src":"18286:74:6"}],"functionName":{"name":"allocate_memory","nativeSrc":"18270:15:6","nodeType":"YulIdentifier","src":"18270:15:6"},"nativeSrc":"18270:91:6","nodeType":"YulFunctionCall","src":"18270:91:6"},"variableNames":[{"name":"array","nativeSrc":"18261:5:6","nodeType":"YulIdentifier","src":"18261:5:6"}]},{"nativeSrc":"18370:16:6","nodeType":"YulVariableDeclaration","src":"18370:16:6","value":{"name":"array","nativeSrc":"18381:5:6","nodeType":"YulIdentifier","src":"18381:5:6"},"variables":[{"name":"dst","nativeSrc":"18374:3:6","nodeType":"YulTypedName","src":"18374:3:6","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"18403:5:6","nodeType":"YulIdentifier","src":"18403:5:6"},{"name":"length","nativeSrc":"18410:6:6","nodeType":"YulIdentifier","src":"18410:6:6"}],"functionName":{"name":"mstore","nativeSrc":"18396:6:6","nodeType":"YulIdentifier","src":"18396:6:6"},"nativeSrc":"18396:21:6","nodeType":"YulFunctionCall","src":"18396:21:6"},"nativeSrc":"18396:21:6","nodeType":"YulExpressionStatement","src":"18396:21:6"},{"nativeSrc":"18426:23:6","nodeType":"YulAssignment","src":"18426:23:6","value":{"arguments":[{"name":"array","nativeSrc":"18437:5:6","nodeType":"YulIdentifier","src":"18437:5:6"},{"kind":"number","nativeSrc":"18444:4:6","nodeType":"YulLiteral","src":"18444:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18433:3:6","nodeType":"YulIdentifier","src":"18433:3:6"},"nativeSrc":"18433:16:6","nodeType":"YulFunctionCall","src":"18433:16:6"},"variableNames":[{"name":"dst","nativeSrc":"18426:3:6","nodeType":"YulIdentifier","src":"18426:3:6"}]},{"nativeSrc":"18459:44:6","nodeType":"YulVariableDeclaration","src":"18459:44:6","value":{"arguments":[{"name":"offset","nativeSrc":"18477:6:6","nodeType":"YulIdentifier","src":"18477:6:6"},{"arguments":[{"name":"length","nativeSrc":"18489:6:6","nodeType":"YulIdentifier","src":"18489:6:6"},{"kind":"number","nativeSrc":"18497:4:6","nodeType":"YulLiteral","src":"18497:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18485:3:6","nodeType":"YulIdentifier","src":"18485:3:6"},"nativeSrc":"18485:17:6","nodeType":"YulFunctionCall","src":"18485:17:6"}],"functionName":{"name":"add","nativeSrc":"18473:3:6","nodeType":"YulIdentifier","src":"18473:3:6"},"nativeSrc":"18473:30:6","nodeType":"YulFunctionCall","src":"18473:30:6"},"variables":[{"name":"srcEnd","nativeSrc":"18463:6:6","nodeType":"YulTypedName","src":"18463:6:6","type":""}]},{"body":{"nativeSrc":"18531:103:6","nodeType":"YulBlock","src":"18531:103:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"18545:77:6","nodeType":"YulIdentifier","src":"18545:77:6"},"nativeSrc":"18545:79:6","nodeType":"YulFunctionCall","src":"18545:79:6"},"nativeSrc":"18545:79:6","nodeType":"YulExpressionStatement","src":"18545:79:6"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"18518:6:6","nodeType":"YulIdentifier","src":"18518:6:6"},{"name":"end","nativeSrc":"18526:3:6","nodeType":"YulIdentifier","src":"18526:3:6"}],"functionName":{"name":"gt","nativeSrc":"18515:2:6","nodeType":"YulIdentifier","src":"18515:2:6"},"nativeSrc":"18515:15:6","nodeType":"YulFunctionCall","src":"18515:15:6"},"nativeSrc":"18512:122:6","nodeType":"YulIf","src":"18512:122:6"},{"body":{"nativeSrc":"18719:359:6","nodeType":"YulBlock","src":"18719:359:6","statements":[{"nativeSrc":"18734:36:6","nodeType":"YulVariableDeclaration","src":"18734:36:6","value":{"arguments":[{"name":"src","nativeSrc":"18766:3:6","nodeType":"YulIdentifier","src":"18766:3:6"}],"functionName":{"name":"calldataload","nativeSrc":"18753:12:6","nodeType":"YulIdentifier","src":"18753:12:6"},"nativeSrc":"18753:17:6","nodeType":"YulFunctionCall","src":"18753:17:6"},"variables":[{"name":"innerOffset","nativeSrc":"18738:11:6","nodeType":"YulTypedName","src":"18738:11:6","type":""}]},{"body":{"nativeSrc":"18822:83:6","nodeType":"YulBlock","src":"18822:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"18824:77:6","nodeType":"YulIdentifier","src":"18824:77:6"},"nativeSrc":"18824:79:6","nodeType":"YulFunctionCall","src":"18824:79:6"},"nativeSrc":"18824:79:6","nodeType":"YulExpressionStatement","src":"18824:79:6"}]},"condition":{"arguments":[{"name":"innerOffset","nativeSrc":"18789:11:6","nodeType":"YulIdentifier","src":"18789:11:6"},{"kind":"number","nativeSrc":"18802:18:6","nodeType":"YulLiteral","src":"18802:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"18786:2:6","nodeType":"YulIdentifier","src":"18786:2:6"},"nativeSrc":"18786:35:6","nodeType":"YulFunctionCall","src":"18786:35:6"},"nativeSrc":"18783:122:6","nodeType":"YulIf","src":"18783:122:6"},{"nativeSrc":"18918:42:6","nodeType":"YulVariableDeclaration","src":"18918:42:6","value":{"arguments":[{"name":"offset","nativeSrc":"18940:6:6","nodeType":"YulIdentifier","src":"18940:6:6"},{"name":"innerOffset","nativeSrc":"18948:11:6","nodeType":"YulIdentifier","src":"18948:11:6"}],"functionName":{"name":"add","nativeSrc":"18936:3:6","nodeType":"YulIdentifier","src":"18936:3:6"},"nativeSrc":"18936:24:6","nodeType":"YulFunctionCall","src":"18936:24:6"},"variables":[{"name":"elementPos","nativeSrc":"18922:10:6","nodeType":"YulTypedName","src":"18922:10:6","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"18981:3:6","nodeType":"YulIdentifier","src":"18981:3:6"},{"arguments":[{"name":"elementPos","nativeSrc":"19017:10:6","nodeType":"YulIdentifier","src":"19017:10:6"},{"name":"end","nativeSrc":"19029:3:6","nodeType":"YulIdentifier","src":"19029:3:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"18986:30:6","nodeType":"YulIdentifier","src":"18986:30:6"},"nativeSrc":"18986:47:6","nodeType":"YulFunctionCall","src":"18986:47:6"}],"functionName":{"name":"mstore","nativeSrc":"18974:6:6","nodeType":"YulIdentifier","src":"18974:6:6"},"nativeSrc":"18974:60:6","nodeType":"YulFunctionCall","src":"18974:60:6"},"nativeSrc":"18974:60:6","nodeType":"YulExpressionStatement","src":"18974:60:6"},{"nativeSrc":"19047:21:6","nodeType":"YulAssignment","src":"19047:21:6","value":{"arguments":[{"name":"dst","nativeSrc":"19058:3:6","nodeType":"YulIdentifier","src":"19058:3:6"},{"kind":"number","nativeSrc":"19063:4:6","nodeType":"YulLiteral","src":"19063:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19054:3:6","nodeType":"YulIdentifier","src":"19054:3:6"},"nativeSrc":"19054:14:6","nodeType":"YulFunctionCall","src":"19054:14:6"},"variableNames":[{"name":"dst","nativeSrc":"19047:3:6","nodeType":"YulIdentifier","src":"19047:3:6"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"18672:3:6","nodeType":"YulIdentifier","src":"18672:3:6"},{"name":"srcEnd","nativeSrc":"18677:6:6","nodeType":"YulIdentifier","src":"18677:6:6"}],"functionName":{"name":"lt","nativeSrc":"18669:2:6","nodeType":"YulIdentifier","src":"18669:2:6"},"nativeSrc":"18669:15:6","nodeType":"YulFunctionCall","src":"18669:15:6"},"nativeSrc":"18643:435:6","nodeType":"YulForLoop","post":{"nativeSrc":"18685:25:6","nodeType":"YulBlock","src":"18685:25:6","statements":[{"nativeSrc":"18687:21:6","nodeType":"YulAssignment","src":"18687:21:6","value":{"arguments":[{"name":"src","nativeSrc":"18698:3:6","nodeType":"YulIdentifier","src":"18698:3:6"},{"kind":"number","nativeSrc":"18703:4:6","nodeType":"YulLiteral","src":"18703:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18694:3:6","nodeType":"YulIdentifier","src":"18694:3:6"},"nativeSrc":"18694:14:6","nodeType":"YulFunctionCall","src":"18694:14:6"},"variableNames":[{"name":"src","nativeSrc":"18687:3:6","nodeType":"YulIdentifier","src":"18687:3:6"}]}]},"pre":{"nativeSrc":"18647:21:6","nodeType":"YulBlock","src":"18647:21:6","statements":[{"nativeSrc":"18649:17:6","nodeType":"YulVariableDeclaration","src":"18649:17:6","value":{"name":"offset","nativeSrc":"18660:6:6","nodeType":"YulIdentifier","src":"18660:6:6"},"variables":[{"name":"src","nativeSrc":"18653:3:6","nodeType":"YulTypedName","src":"18653:3:6","type":""}]}]},"src":"18643:435:6"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"18139:945:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"18221:6:6","nodeType":"YulTypedName","src":"18221:6:6","type":""},{"name":"length","nativeSrc":"18229:6:6","nodeType":"YulTypedName","src":"18229:6:6","type":""},{"name":"end","nativeSrc":"18237:3:6","nodeType":"YulTypedName","src":"18237:3:6","type":""}],"returnVariables":[{"name":"array","nativeSrc":"18245:5:6","nodeType":"YulTypedName","src":"18245:5:6","type":""}],"src":"18139:945:6"},{"body":{"nativeSrc":"19193:303:6","nodeType":"YulBlock","src":"19193:303:6","statements":[{"body":{"nativeSrc":"19242:83:6","nodeType":"YulBlock","src":"19242:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"19244:77:6","nodeType":"YulIdentifier","src":"19244:77:6"},"nativeSrc":"19244:79:6","nodeType":"YulFunctionCall","src":"19244:79:6"},"nativeSrc":"19244:79:6","nodeType":"YulExpressionStatement","src":"19244:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"19221:6:6","nodeType":"YulIdentifier","src":"19221:6:6"},{"kind":"number","nativeSrc":"19229:4:6","nodeType":"YulLiteral","src":"19229:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"19217:3:6","nodeType":"YulIdentifier","src":"19217:3:6"},"nativeSrc":"19217:17:6","nodeType":"YulFunctionCall","src":"19217:17:6"},{"name":"end","nativeSrc":"19236:3:6","nodeType":"YulIdentifier","src":"19236:3:6"}],"functionName":{"name":"slt","nativeSrc":"19213:3:6","nodeType":"YulIdentifier","src":"19213:3:6"},"nativeSrc":"19213:27:6","nodeType":"YulFunctionCall","src":"19213:27:6"}],"functionName":{"name":"iszero","nativeSrc":"19206:6:6","nodeType":"YulIdentifier","src":"19206:6:6"},"nativeSrc":"19206:35:6","nodeType":"YulFunctionCall","src":"19206:35:6"},"nativeSrc":"19203:122:6","nodeType":"YulIf","src":"19203:122:6"},{"nativeSrc":"19334:34:6","nodeType":"YulVariableDeclaration","src":"19334:34:6","value":{"arguments":[{"name":"offset","nativeSrc":"19361:6:6","nodeType":"YulIdentifier","src":"19361:6:6"}],"functionName":{"name":"calldataload","nativeSrc":"19348:12:6","nodeType":"YulIdentifier","src":"19348:12:6"},"nativeSrc":"19348:20:6","nodeType":"YulFunctionCall","src":"19348:20:6"},"variables":[{"name":"length","nativeSrc":"19338:6:6","nodeType":"YulTypedName","src":"19338:6:6","type":""}]},{"nativeSrc":"19377:113:6","nodeType":"YulAssignment","src":"19377:113:6","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"19463:6:6","nodeType":"YulIdentifier","src":"19463:6:6"},{"kind":"number","nativeSrc":"19471:4:6","nodeType":"YulLiteral","src":"19471:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19459:3:6","nodeType":"YulIdentifier","src":"19459:3:6"},"nativeSrc":"19459:17:6","nodeType":"YulFunctionCall","src":"19459:17:6"},{"name":"length","nativeSrc":"19478:6:6","nodeType":"YulIdentifier","src":"19478:6:6"},{"name":"end","nativeSrc":"19486:3:6","nodeType":"YulIdentifier","src":"19486:3:6"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"19386:72:6","nodeType":"YulIdentifier","src":"19386:72:6"},"nativeSrc":"19386:104:6","nodeType":"YulFunctionCall","src":"19386:104:6"},"variableNames":[{"name":"array","nativeSrc":"19377:5:6","nodeType":"YulIdentifier","src":"19377:5:6"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"19106:390:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"19171:6:6","nodeType":"YulTypedName","src":"19171:6:6","type":""},{"name":"end","nativeSrc":"19179:3:6","nodeType":"YulTypedName","src":"19179:3:6","type":""}],"returnVariables":[{"name":"array","nativeSrc":"19187:5:6","nodeType":"YulTypedName","src":"19187:5:6","type":""}],"src":"19106:390:6"},{"body":{"nativeSrc":"19674:1183:6","nodeType":"YulBlock","src":"19674:1183:6","statements":[{"body":{"nativeSrc":"19721:83:6","nodeType":"YulBlock","src":"19721:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19723:77:6","nodeType":"YulIdentifier","src":"19723:77:6"},"nativeSrc":"19723:79:6","nodeType":"YulFunctionCall","src":"19723:79:6"},"nativeSrc":"19723:79:6","nodeType":"YulExpressionStatement","src":"19723:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19695:7:6","nodeType":"YulIdentifier","src":"19695:7:6"},{"name":"headStart","nativeSrc":"19704:9:6","nodeType":"YulIdentifier","src":"19704:9:6"}],"functionName":{"name":"sub","nativeSrc":"19691:3:6","nodeType":"YulIdentifier","src":"19691:3:6"},"nativeSrc":"19691:23:6","nodeType":"YulFunctionCall","src":"19691:23:6"},{"kind":"number","nativeSrc":"19716:3:6","nodeType":"YulLiteral","src":"19716:3:6","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"19687:3:6","nodeType":"YulIdentifier","src":"19687:3:6"},"nativeSrc":"19687:33:6","nodeType":"YulFunctionCall","src":"19687:33:6"},"nativeSrc":"19684:120:6","nodeType":"YulIf","src":"19684:120:6"},{"nativeSrc":"19814:287:6","nodeType":"YulBlock","src":"19814:287:6","statements":[{"nativeSrc":"19829:45:6","nodeType":"YulVariableDeclaration","src":"19829:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19860:9:6","nodeType":"YulIdentifier","src":"19860:9:6"},{"kind":"number","nativeSrc":"19871:1:6","nodeType":"YulLiteral","src":"19871:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19856:3:6","nodeType":"YulIdentifier","src":"19856:3:6"},"nativeSrc":"19856:17:6","nodeType":"YulFunctionCall","src":"19856:17:6"}],"functionName":{"name":"calldataload","nativeSrc":"19843:12:6","nodeType":"YulIdentifier","src":"19843:12:6"},"nativeSrc":"19843:31:6","nodeType":"YulFunctionCall","src":"19843:31:6"},"variables":[{"name":"offset","nativeSrc":"19833:6:6","nodeType":"YulTypedName","src":"19833:6:6","type":""}]},{"body":{"nativeSrc":"19921:83:6","nodeType":"YulBlock","src":"19921:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"19923:77:6","nodeType":"YulIdentifier","src":"19923:77:6"},"nativeSrc":"19923:79:6","nodeType":"YulFunctionCall","src":"19923:79:6"},"nativeSrc":"19923:79:6","nodeType":"YulExpressionStatement","src":"19923:79:6"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"19893:6:6","nodeType":"YulIdentifier","src":"19893:6:6"},{"kind":"number","nativeSrc":"19901:18:6","nodeType":"YulLiteral","src":"19901:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"19890:2:6","nodeType":"YulIdentifier","src":"19890:2:6"},"nativeSrc":"19890:30:6","nodeType":"YulFunctionCall","src":"19890:30:6"},"nativeSrc":"19887:117:6","nodeType":"YulIf","src":"19887:117:6"},{"nativeSrc":"20018:73:6","nodeType":"YulAssignment","src":"20018:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20063:9:6","nodeType":"YulIdentifier","src":"20063:9:6"},{"name":"offset","nativeSrc":"20074:6:6","nodeType":"YulIdentifier","src":"20074:6:6"}],"functionName":{"name":"add","nativeSrc":"20059:3:6","nodeType":"YulIdentifier","src":"20059:3:6"},"nativeSrc":"20059:22:6","nodeType":"YulFunctionCall","src":"20059:22:6"},{"name":"dataEnd","nativeSrc":"20083:7:6","nodeType":"YulIdentifier","src":"20083:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"20028:30:6","nodeType":"YulIdentifier","src":"20028:30:6"},"nativeSrc":"20028:63:6","nodeType":"YulFunctionCall","src":"20028:63:6"},"variableNames":[{"name":"value0","nativeSrc":"20018:6:6","nodeType":"YulIdentifier","src":"20018:6:6"}]}]},{"nativeSrc":"20111:288:6","nodeType":"YulBlock","src":"20111:288:6","statements":[{"nativeSrc":"20126:46:6","nodeType":"YulVariableDeclaration","src":"20126:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20157:9:6","nodeType":"YulIdentifier","src":"20157:9:6"},{"kind":"number","nativeSrc":"20168:2:6","nodeType":"YulLiteral","src":"20168:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20153:3:6","nodeType":"YulIdentifier","src":"20153:3:6"},"nativeSrc":"20153:18:6","nodeType":"YulFunctionCall","src":"20153:18:6"}],"functionName":{"name":"calldataload","nativeSrc":"20140:12:6","nodeType":"YulIdentifier","src":"20140:12:6"},"nativeSrc":"20140:32:6","nodeType":"YulFunctionCall","src":"20140:32:6"},"variables":[{"name":"offset","nativeSrc":"20130:6:6","nodeType":"YulTypedName","src":"20130:6:6","type":""}]},{"body":{"nativeSrc":"20219:83:6","nodeType":"YulBlock","src":"20219:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"20221:77:6","nodeType":"YulIdentifier","src":"20221:77:6"},"nativeSrc":"20221:79:6","nodeType":"YulFunctionCall","src":"20221:79:6"},"nativeSrc":"20221:79:6","nodeType":"YulExpressionStatement","src":"20221:79:6"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"20191:6:6","nodeType":"YulIdentifier","src":"20191:6:6"},{"kind":"number","nativeSrc":"20199:18:6","nodeType":"YulLiteral","src":"20199:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"20188:2:6","nodeType":"YulIdentifier","src":"20188:2:6"},"nativeSrc":"20188:30:6","nodeType":"YulFunctionCall","src":"20188:30:6"},"nativeSrc":"20185:117:6","nodeType":"YulIf","src":"20185:117:6"},{"nativeSrc":"20316:73:6","nodeType":"YulAssignment","src":"20316:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20361:9:6","nodeType":"YulIdentifier","src":"20361:9:6"},{"name":"offset","nativeSrc":"20372:6:6","nodeType":"YulIdentifier","src":"20372:6:6"}],"functionName":{"name":"add","nativeSrc":"20357:3:6","nodeType":"YulIdentifier","src":"20357:3:6"},"nativeSrc":"20357:22:6","nodeType":"YulFunctionCall","src":"20357:22:6"},{"name":"dataEnd","nativeSrc":"20381:7:6","nodeType":"YulIdentifier","src":"20381:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"20326:30:6","nodeType":"YulIdentifier","src":"20326:30:6"},"nativeSrc":"20326:63:6","nodeType":"YulFunctionCall","src":"20326:63:6"},"variableNames":[{"name":"value1","nativeSrc":"20316:6:6","nodeType":"YulIdentifier","src":"20316:6:6"}]}]},{"nativeSrc":"20409:118:6","nodeType":"YulBlock","src":"20409:118:6","statements":[{"nativeSrc":"20424:16:6","nodeType":"YulVariableDeclaration","src":"20424:16:6","value":{"kind":"number","nativeSrc":"20438:2:6","nodeType":"YulLiteral","src":"20438:2:6","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"20428:6:6","nodeType":"YulTypedName","src":"20428:6:6","type":""}]},{"nativeSrc":"20454:63:6","nodeType":"YulAssignment","src":"20454:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20489:9:6","nodeType":"YulIdentifier","src":"20489:9:6"},{"name":"offset","nativeSrc":"20500:6:6","nodeType":"YulIdentifier","src":"20500:6:6"}],"functionName":{"name":"add","nativeSrc":"20485:3:6","nodeType":"YulIdentifier","src":"20485:3:6"},"nativeSrc":"20485:22:6","nodeType":"YulFunctionCall","src":"20485:22:6"},{"name":"dataEnd","nativeSrc":"20509:7:6","nodeType":"YulIdentifier","src":"20509:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"20464:20:6","nodeType":"YulIdentifier","src":"20464:20:6"},"nativeSrc":"20464:53:6","nodeType":"YulFunctionCall","src":"20464:53:6"},"variableNames":[{"name":"value2","nativeSrc":"20454:6:6","nodeType":"YulIdentifier","src":"20454:6:6"}]}]},{"nativeSrc":"20537:313:6","nodeType":"YulBlock","src":"20537:313:6","statements":[{"nativeSrc":"20552:46:6","nodeType":"YulVariableDeclaration","src":"20552:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20583:9:6","nodeType":"YulIdentifier","src":"20583:9:6"},{"kind":"number","nativeSrc":"20594:2:6","nodeType":"YulLiteral","src":"20594:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20579:3:6","nodeType":"YulIdentifier","src":"20579:3:6"},"nativeSrc":"20579:18:6","nodeType":"YulFunctionCall","src":"20579:18:6"}],"functionName":{"name":"calldataload","nativeSrc":"20566:12:6","nodeType":"YulIdentifier","src":"20566:12:6"},"nativeSrc":"20566:32:6","nodeType":"YulFunctionCall","src":"20566:32:6"},"variables":[{"name":"offset","nativeSrc":"20556:6:6","nodeType":"YulTypedName","src":"20556:6:6","type":""}]},{"body":{"nativeSrc":"20645:83:6","nodeType":"YulBlock","src":"20645:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"20647:77:6","nodeType":"YulIdentifier","src":"20647:77:6"},"nativeSrc":"20647:79:6","nodeType":"YulFunctionCall","src":"20647:79:6"},"nativeSrc":"20647:79:6","nodeType":"YulExpressionStatement","src":"20647:79:6"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"20617:6:6","nodeType":"YulIdentifier","src":"20617:6:6"},{"kind":"number","nativeSrc":"20625:18:6","nodeType":"YulLiteral","src":"20625:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"20614:2:6","nodeType":"YulIdentifier","src":"20614:2:6"},"nativeSrc":"20614:30:6","nodeType":"YulFunctionCall","src":"20614:30:6"},"nativeSrc":"20611:117:6","nodeType":"YulIf","src":"20611:117:6"},{"nativeSrc":"20742:98:6","nodeType":"YulAssignment","src":"20742:98:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20812:9:6","nodeType":"YulIdentifier","src":"20812:9:6"},{"name":"offset","nativeSrc":"20823:6:6","nodeType":"YulIdentifier","src":"20823:6:6"}],"functionName":{"name":"add","nativeSrc":"20808:3:6","nodeType":"YulIdentifier","src":"20808:3:6"},"nativeSrc":"20808:22:6","nodeType":"YulFunctionCall","src":"20808:22:6"},{"name":"dataEnd","nativeSrc":"20832:7:6","nodeType":"YulIdentifier","src":"20832:7:6"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"20752:55:6","nodeType":"YulIdentifier","src":"20752:55:6"},"nativeSrc":"20752:88:6","nodeType":"YulFunctionCall","src":"20752:88:6"},"variableNames":[{"name":"value3","nativeSrc":"20742:6:6","nodeType":"YulIdentifier","src":"20742:6:6"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"19502:1355:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19620:9:6","nodeType":"YulTypedName","src":"19620:9:6","type":""},{"name":"dataEnd","nativeSrc":"19631:7:6","nodeType":"YulTypedName","src":"19631:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19643:6:6","nodeType":"YulTypedName","src":"19643:6:6","type":""},{"name":"value1","nativeSrc":"19651:6:6","nodeType":"YulTypedName","src":"19651:6:6","type":""},{"name":"value2","nativeSrc":"19659:6:6","nodeType":"YulTypedName","src":"19659:6:6","type":""},{"name":"value3","nativeSrc":"19667:6:6","nodeType":"YulTypedName","src":"19667:6:6","type":""}],"src":"19502:1355:6"},{"body":{"nativeSrc":"20973:689:6","nodeType":"YulBlock","src":"20973:689:6","statements":[{"body":{"nativeSrc":"21019:83:6","nodeType":"YulBlock","src":"21019:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"21021:77:6","nodeType":"YulIdentifier","src":"21021:77:6"},"nativeSrc":"21021:79:6","nodeType":"YulFunctionCall","src":"21021:79:6"},"nativeSrc":"21021:79:6","nodeType":"YulExpressionStatement","src":"21021:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"20994:7:6","nodeType":"YulIdentifier","src":"20994:7:6"},{"name":"headStart","nativeSrc":"21003:9:6","nodeType":"YulIdentifier","src":"21003:9:6"}],"functionName":{"name":"sub","nativeSrc":"20990:3:6","nodeType":"YulIdentifier","src":"20990:3:6"},"nativeSrc":"20990:23:6","nodeType":"YulFunctionCall","src":"20990:23:6"},{"kind":"number","nativeSrc":"21015:2:6","nodeType":"YulLiteral","src":"21015:2:6","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"20986:3:6","nodeType":"YulIdentifier","src":"20986:3:6"},"nativeSrc":"20986:32:6","nodeType":"YulFunctionCall","src":"20986:32:6"},"nativeSrc":"20983:119:6","nodeType":"YulIf","src":"20983:119:6"},{"nativeSrc":"21112:117:6","nodeType":"YulBlock","src":"21112:117:6","statements":[{"nativeSrc":"21127:15:6","nodeType":"YulVariableDeclaration","src":"21127:15:6","value":{"kind":"number","nativeSrc":"21141:1:6","nodeType":"YulLiteral","src":"21141:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"21131:6:6","nodeType":"YulTypedName","src":"21131:6:6","type":""}]},{"nativeSrc":"21156:63:6","nodeType":"YulAssignment","src":"21156:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21191:9:6","nodeType":"YulIdentifier","src":"21191:9:6"},{"name":"offset","nativeSrc":"21202:6:6","nodeType":"YulIdentifier","src":"21202:6:6"}],"functionName":{"name":"add","nativeSrc":"21187:3:6","nodeType":"YulIdentifier","src":"21187:3:6"},"nativeSrc":"21187:22:6","nodeType":"YulFunctionCall","src":"21187:22:6"},{"name":"dataEnd","nativeSrc":"21211:7:6","nodeType":"YulIdentifier","src":"21211:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"21166:20:6","nodeType":"YulIdentifier","src":"21166:20:6"},"nativeSrc":"21166:53:6","nodeType":"YulFunctionCall","src":"21166:53:6"},"variableNames":[{"name":"value0","nativeSrc":"21156:6:6","nodeType":"YulIdentifier","src":"21156:6:6"}]}]},{"nativeSrc":"21239:288:6","nodeType":"YulBlock","src":"21239:288:6","statements":[{"nativeSrc":"21254:46:6","nodeType":"YulVariableDeclaration","src":"21254:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21285:9:6","nodeType":"YulIdentifier","src":"21285:9:6"},{"kind":"number","nativeSrc":"21296:2:6","nodeType":"YulLiteral","src":"21296:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21281:3:6","nodeType":"YulIdentifier","src":"21281:3:6"},"nativeSrc":"21281:18:6","nodeType":"YulFunctionCall","src":"21281:18:6"}],"functionName":{"name":"calldataload","nativeSrc":"21268:12:6","nodeType":"YulIdentifier","src":"21268:12:6"},"nativeSrc":"21268:32:6","nodeType":"YulFunctionCall","src":"21268:32:6"},"variables":[{"name":"offset","nativeSrc":"21258:6:6","nodeType":"YulTypedName","src":"21258:6:6","type":""}]},{"body":{"nativeSrc":"21347:83:6","nodeType":"YulBlock","src":"21347:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"21349:77:6","nodeType":"YulIdentifier","src":"21349:77:6"},"nativeSrc":"21349:79:6","nodeType":"YulFunctionCall","src":"21349:79:6"},"nativeSrc":"21349:79:6","nodeType":"YulExpressionStatement","src":"21349:79:6"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"21319:6:6","nodeType":"YulIdentifier","src":"21319:6:6"},{"kind":"number","nativeSrc":"21327:18:6","nodeType":"YulLiteral","src":"21327:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"21316:2:6","nodeType":"YulIdentifier","src":"21316:2:6"},"nativeSrc":"21316:30:6","nodeType":"YulFunctionCall","src":"21316:30:6"},"nativeSrc":"21313:117:6","nodeType":"YulIf","src":"21313:117:6"},{"nativeSrc":"21444:73:6","nodeType":"YulAssignment","src":"21444:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21489:9:6","nodeType":"YulIdentifier","src":"21489:9:6"},{"name":"offset","nativeSrc":"21500:6:6","nodeType":"YulIdentifier","src":"21500:6:6"}],"functionName":{"name":"add","nativeSrc":"21485:3:6","nodeType":"YulIdentifier","src":"21485:3:6"},"nativeSrc":"21485:22:6","nodeType":"YulFunctionCall","src":"21485:22:6"},{"name":"dataEnd","nativeSrc":"21509:7:6","nodeType":"YulIdentifier","src":"21509:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"21454:30:6","nodeType":"YulIdentifier","src":"21454:30:6"},"nativeSrc":"21454:63:6","nodeType":"YulFunctionCall","src":"21454:63:6"},"variableNames":[{"name":"value1","nativeSrc":"21444:6:6","nodeType":"YulIdentifier","src":"21444:6:6"}]}]},{"nativeSrc":"21537:118:6","nodeType":"YulBlock","src":"21537:118:6","statements":[{"nativeSrc":"21552:16:6","nodeType":"YulVariableDeclaration","src":"21552:16:6","value":{"kind":"number","nativeSrc":"21566:2:6","nodeType":"YulLiteral","src":"21566:2:6","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"21556:6:6","nodeType":"YulTypedName","src":"21556:6:6","type":""}]},{"nativeSrc":"21582:63:6","nodeType":"YulAssignment","src":"21582:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21617:9:6","nodeType":"YulIdentifier","src":"21617:9:6"},{"name":"offset","nativeSrc":"21628:6:6","nodeType":"YulIdentifier","src":"21628:6:6"}],"functionName":{"name":"add","nativeSrc":"21613:3:6","nodeType":"YulIdentifier","src":"21613:3:6"},"nativeSrc":"21613:22:6","nodeType":"YulFunctionCall","src":"21613:22:6"},{"name":"dataEnd","nativeSrc":"21637:7:6","nodeType":"YulIdentifier","src":"21637:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"21592:20:6","nodeType":"YulIdentifier","src":"21592:20:6"},"nativeSrc":"21592:53:6","nodeType":"YulFunctionCall","src":"21592:53:6"},"variableNames":[{"name":"value2","nativeSrc":"21582:6:6","nodeType":"YulIdentifier","src":"21582:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256","nativeSrc":"20863:799:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20927:9:6","nodeType":"YulTypedName","src":"20927:9:6","type":""},{"name":"dataEnd","nativeSrc":"20938:7:6","nodeType":"YulTypedName","src":"20938:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"20950:6:6","nodeType":"YulTypedName","src":"20950:6:6","type":""},{"name":"value1","nativeSrc":"20958:6:6","nodeType":"YulTypedName","src":"20958:6:6","type":""},{"name":"value2","nativeSrc":"20966:6:6","nodeType":"YulTypedName","src":"20966:6:6","type":""}],"src":"20863:799:6"},{"body":{"nativeSrc":"21771:40:6","nodeType":"YulBlock","src":"21771:40:6","statements":[{"nativeSrc":"21782:22:6","nodeType":"YulAssignment","src":"21782:22:6","value":{"arguments":[{"name":"value","nativeSrc":"21798:5:6","nodeType":"YulIdentifier","src":"21798:5:6"}],"functionName":{"name":"mload","nativeSrc":"21792:5:6","nodeType":"YulIdentifier","src":"21792:5:6"},"nativeSrc":"21792:12:6","nodeType":"YulFunctionCall","src":"21792:12:6"},"variableNames":[{"name":"length","nativeSrc":"21782:6:6","nodeType":"YulIdentifier","src":"21782:6:6"}]}]},"name":"array_length_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr","nativeSrc":"21668:143:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21754:5:6","nodeType":"YulTypedName","src":"21754:5:6","type":""}],"returnVariables":[{"name":"length","nativeSrc":"21764:6:6","nodeType":"YulTypedName","src":"21764:6:6","type":""}],"src":"21668:143:6"},{"body":{"nativeSrc":"21957:73:6","nodeType":"YulBlock","src":"21957:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"21974:3:6","nodeType":"YulIdentifier","src":"21974:3:6"},{"name":"length","nativeSrc":"21979:6:6","nodeType":"YulIdentifier","src":"21979:6:6"}],"functionName":{"name":"mstore","nativeSrc":"21967:6:6","nodeType":"YulIdentifier","src":"21967:6:6"},"nativeSrc":"21967:19:6","nodeType":"YulFunctionCall","src":"21967:19:6"},"nativeSrc":"21967:19:6","nodeType":"YulExpressionStatement","src":"21967:19:6"},{"nativeSrc":"21995:29:6","nodeType":"YulAssignment","src":"21995:29:6","value":{"arguments":[{"name":"pos","nativeSrc":"22014:3:6","nodeType":"YulIdentifier","src":"22014:3:6"},{"kind":"number","nativeSrc":"22019:4:6","nodeType":"YulLiteral","src":"22019:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"22010:3:6","nodeType":"YulIdentifier","src":"22010:3:6"},"nativeSrc":"22010:14:6","nodeType":"YulFunctionCall","src":"22010:14:6"},"variableNames":[{"name":"updated_pos","nativeSrc":"21995:11:6","nodeType":"YulIdentifier","src":"21995:11:6"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"21817:213:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21929:3:6","nodeType":"YulTypedName","src":"21929:3:6","type":""},{"name":"length","nativeSrc":"21934:6:6","nodeType":"YulTypedName","src":"21934:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"21945:11:6","nodeType":"YulTypedName","src":"21945:11:6","type":""}],"src":"21817:213:6"},{"body":{"nativeSrc":"22137:60:6","nodeType":"YulBlock","src":"22137:60:6","statements":[{"nativeSrc":"22147:11:6","nodeType":"YulAssignment","src":"22147:11:6","value":{"name":"ptr","nativeSrc":"22155:3:6","nodeType":"YulIdentifier","src":"22155:3:6"},"variableNames":[{"name":"data","nativeSrc":"22147:4:6","nodeType":"YulIdentifier","src":"22147:4:6"}]},{"nativeSrc":"22168:22:6","nodeType":"YulAssignment","src":"22168:22:6","value":{"arguments":[{"name":"ptr","nativeSrc":"22180:3:6","nodeType":"YulIdentifier","src":"22180:3:6"},{"kind":"number","nativeSrc":"22185:4:6","nodeType":"YulLiteral","src":"22185:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"22176:3:6","nodeType":"YulIdentifier","src":"22176:3:6"},"nativeSrc":"22176:14:6","nodeType":"YulFunctionCall","src":"22176:14:6"},"variableNames":[{"name":"data","nativeSrc":"22168:4:6","nodeType":"YulIdentifier","src":"22168:4:6"}]}]},"name":"array_dataslot_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr","nativeSrc":"22036:161:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"22124:3:6","nodeType":"YulTypedName","src":"22124:3:6","type":""}],"returnVariables":[{"name":"data","nativeSrc":"22132:4:6","nodeType":"YulTypedName","src":"22132:4:6","type":""}],"src":"22036:161:6"},{"body":{"nativeSrc":"22407:849:6","nodeType":"YulBlock","src":"22407:849:6","statements":[{"nativeSrc":"22417:26:6","nodeType":"YulVariableDeclaration","src":"22417:26:6","value":{"arguments":[{"name":"pos","nativeSrc":"22433:3:6","nodeType":"YulIdentifier","src":"22433:3:6"},{"kind":"number","nativeSrc":"22438:4:6","nodeType":"YulLiteral","src":"22438:4:6","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"22429:3:6","nodeType":"YulIdentifier","src":"22429:3:6"},"nativeSrc":"22429:14:6","nodeType":"YulFunctionCall","src":"22429:14:6"},"variables":[{"name":"tail","nativeSrc":"22421:4:6","nodeType":"YulTypedName","src":"22421:4:6","type":""}]},{"nativeSrc":"22453:171:6","nodeType":"YulBlock","src":"22453:171:6","statements":[{"nativeSrc":"22495:43:6","nodeType":"YulVariableDeclaration","src":"22495:43:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"22525:5:6","nodeType":"YulIdentifier","src":"22525:5:6"},{"kind":"number","nativeSrc":"22532:4:6","nodeType":"YulLiteral","src":"22532:4:6","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"22521:3:6","nodeType":"YulIdentifier","src":"22521:3:6"},"nativeSrc":"22521:16:6","nodeType":"YulFunctionCall","src":"22521:16:6"}],"functionName":{"name":"mload","nativeSrc":"22515:5:6","nodeType":"YulIdentifier","src":"22515:5:6"},"nativeSrc":"22515:23:6","nodeType":"YulFunctionCall","src":"22515:23:6"},"variables":[{"name":"memberValue0","nativeSrc":"22499:12:6","nodeType":"YulTypedName","src":"22499:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"22585:12:6","nodeType":"YulIdentifier","src":"22585:12:6"},{"arguments":[{"name":"pos","nativeSrc":"22603:3:6","nodeType":"YulIdentifier","src":"22603:3:6"},{"kind":"number","nativeSrc":"22608:4:6","nodeType":"YulLiteral","src":"22608:4:6","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"22599:3:6","nodeType":"YulIdentifier","src":"22599:3:6"},"nativeSrc":"22599:14:6","nodeType":"YulFunctionCall","src":"22599:14:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nativeSrc":"22551:33:6","nodeType":"YulIdentifier","src":"22551:33:6"},"nativeSrc":"22551:63:6","nodeType":"YulFunctionCall","src":"22551:63:6"},"nativeSrc":"22551:63:6","nodeType":"YulExpressionStatement","src":"22551:63:6"}]},{"nativeSrc":"22634:242:6","nodeType":"YulBlock","src":"22634:242:6","statements":[{"nativeSrc":"22676:43:6","nodeType":"YulVariableDeclaration","src":"22676:43:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"22706:5:6","nodeType":"YulIdentifier","src":"22706:5:6"},{"kind":"number","nativeSrc":"22713:4:6","nodeType":"YulLiteral","src":"22713:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"22702:3:6","nodeType":"YulIdentifier","src":"22702:3:6"},"nativeSrc":"22702:16:6","nodeType":"YulFunctionCall","src":"22702:16:6"}],"functionName":{"name":"mload","nativeSrc":"22696:5:6","nodeType":"YulIdentifier","src":"22696:5:6"},"nativeSrc":"22696:23:6","nodeType":"YulFunctionCall","src":"22696:23:6"},"variables":[{"name":"memberValue0","nativeSrc":"22680:12:6","nodeType":"YulTypedName","src":"22680:12:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"22744:3:6","nodeType":"YulIdentifier","src":"22744:3:6"},{"kind":"number","nativeSrc":"22749:4:6","nodeType":"YulLiteral","src":"22749:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"22740:3:6","nodeType":"YulIdentifier","src":"22740:3:6"},"nativeSrc":"22740:14:6","nodeType":"YulFunctionCall","src":"22740:14:6"},{"arguments":[{"name":"tail","nativeSrc":"22760:4:6","nodeType":"YulIdentifier","src":"22760:4:6"},{"name":"pos","nativeSrc":"22766:3:6","nodeType":"YulIdentifier","src":"22766:3:6"}],"functionName":{"name":"sub","nativeSrc":"22756:3:6","nodeType":"YulIdentifier","src":"22756:3:6"},"nativeSrc":"22756:14:6","nodeType":"YulFunctionCall","src":"22756:14:6"}],"functionName":{"name":"mstore","nativeSrc":"22733:6:6","nodeType":"YulIdentifier","src":"22733:6:6"},"nativeSrc":"22733:38:6","nodeType":"YulFunctionCall","src":"22733:38:6"},"nativeSrc":"22733:38:6","nodeType":"YulExpressionStatement","src":"22733:38:6"},{"nativeSrc":"22784:81:6","nodeType":"YulAssignment","src":"22784:81:6","value":{"arguments":[{"name":"memberValue0","nativeSrc":"22846:12:6","nodeType":"YulIdentifier","src":"22846:12:6"},{"name":"tail","nativeSrc":"22860:4:6","nodeType":"YulIdentifier","src":"22860:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"22792:53:6","nodeType":"YulIdentifier","src":"22792:53:6"},"nativeSrc":"22792:73:6","nodeType":"YulFunctionCall","src":"22792:73:6"},"variableNames":[{"name":"tail","nativeSrc":"22784:4:6","nodeType":"YulIdentifier","src":"22784:4:6"}]}]},{"nativeSrc":"22886:162:6","nodeType":"YulBlock","src":"22886:162:6","statements":[{"nativeSrc":"22925:43:6","nodeType":"YulVariableDeclaration","src":"22925:43:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"22955:5:6","nodeType":"YulIdentifier","src":"22955:5:6"},{"kind":"number","nativeSrc":"22962:4:6","nodeType":"YulLiteral","src":"22962:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"22951:3:6","nodeType":"YulIdentifier","src":"22951:3:6"},"nativeSrc":"22951:16:6","nodeType":"YulFunctionCall","src":"22951:16:6"}],"functionName":{"name":"mload","nativeSrc":"22945:5:6","nodeType":"YulIdentifier","src":"22945:5:6"},"nativeSrc":"22945:23:6","nodeType":"YulFunctionCall","src":"22945:23:6"},"variables":[{"name":"memberValue0","nativeSrc":"22929:12:6","nodeType":"YulTypedName","src":"22929:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"23009:12:6","nodeType":"YulIdentifier","src":"23009:12:6"},{"arguments":[{"name":"pos","nativeSrc":"23027:3:6","nodeType":"YulIdentifier","src":"23027:3:6"},{"kind":"number","nativeSrc":"23032:4:6","nodeType":"YulLiteral","src":"23032:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"23023:3:6","nodeType":"YulIdentifier","src":"23023:3:6"},"nativeSrc":"23023:14:6","nodeType":"YulFunctionCall","src":"23023:14:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nativeSrc":"22981:27:6","nodeType":"YulIdentifier","src":"22981:27:6"},"nativeSrc":"22981:57:6","nodeType":"YulFunctionCall","src":"22981:57:6"},"nativeSrc":"22981:57:6","nodeType":"YulExpressionStatement","src":"22981:57:6"}]},{"nativeSrc":"23058:171:6","nodeType":"YulBlock","src":"23058:171:6","statements":[{"nativeSrc":"23100:43:6","nodeType":"YulVariableDeclaration","src":"23100:43:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23130:5:6","nodeType":"YulIdentifier","src":"23130:5:6"},{"kind":"number","nativeSrc":"23137:4:6","nodeType":"YulLiteral","src":"23137:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"23126:3:6","nodeType":"YulIdentifier","src":"23126:3:6"},"nativeSrc":"23126:16:6","nodeType":"YulFunctionCall","src":"23126:16:6"}],"functionName":{"name":"mload","nativeSrc":"23120:5:6","nodeType":"YulIdentifier","src":"23120:5:6"},"nativeSrc":"23120:23:6","nodeType":"YulFunctionCall","src":"23120:23:6"},"variables":[{"name":"memberValue0","nativeSrc":"23104:12:6","nodeType":"YulTypedName","src":"23104:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"23190:12:6","nodeType":"YulIdentifier","src":"23190:12:6"},{"arguments":[{"name":"pos","nativeSrc":"23208:3:6","nodeType":"YulIdentifier","src":"23208:3:6"},{"kind":"number","nativeSrc":"23213:4:6","nodeType":"YulLiteral","src":"23213:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"23204:3:6","nodeType":"YulIdentifier","src":"23204:3:6"},"nativeSrc":"23204:14:6","nodeType":"YulFunctionCall","src":"23204:14:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"23156:33:6","nodeType":"YulIdentifier","src":"23156:33:6"},"nativeSrc":"23156:63:6","nodeType":"YulFunctionCall","src":"23156:63:6"},"nativeSrc":"23156:63:6","nodeType":"YulExpressionStatement","src":"23156:63:6"}]},{"nativeSrc":"23239:11:6","nodeType":"YulAssignment","src":"23239:11:6","value":{"name":"tail","nativeSrc":"23246:4:6","nodeType":"YulIdentifier","src":"23246:4:6"},"variableNames":[{"name":"end","nativeSrc":"23239:3:6","nodeType":"YulIdentifier","src":"23239:3:6"}]}]},"name":"abi_encode_t_struct$_Contribution_$816_memory_ptr_to_t_struct$_Contribution_$816_memory_ptr","nativeSrc":"22285:971:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22386:5:6","nodeType":"YulTypedName","src":"22386:5:6","type":""},{"name":"pos","nativeSrc":"22393:3:6","nodeType":"YulTypedName","src":"22393:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22402:3:6","nodeType":"YulTypedName","src":"22402:3:6","type":""}],"src":"22285:971:6"},{"body":{"nativeSrc":"23400:134:6","nodeType":"YulBlock","src":"23400:134:6","statements":[{"nativeSrc":"23410:118:6","nodeType":"YulAssignment","src":"23410:118:6","value":{"arguments":[{"name":"value0","nativeSrc":"23516:6:6","nodeType":"YulIdentifier","src":"23516:6:6"},{"name":"pos","nativeSrc":"23524:3:6","nodeType":"YulIdentifier","src":"23524:3:6"}],"functionName":{"name":"abi_encode_t_struct$_Contribution_$816_memory_ptr_to_t_struct$_Contribution_$816_memory_ptr","nativeSrc":"23424:91:6","nodeType":"YulIdentifier","src":"23424:91:6"},"nativeSrc":"23424:104:6","nodeType":"YulFunctionCall","src":"23424:104:6"},"variableNames":[{"name":"updatedPos","nativeSrc":"23410:10:6","nodeType":"YulIdentifier","src":"23410:10:6"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_Contribution_$816_memory_ptr_to_t_struct$_Contribution_$816_memory_ptr","nativeSrc":"23262:272:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"23373:6:6","nodeType":"YulTypedName","src":"23373:6:6","type":""},{"name":"pos","nativeSrc":"23381:3:6","nodeType":"YulTypedName","src":"23381:3:6","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"23389:10:6","nodeType":"YulTypedName","src":"23389:10:6","type":""}],"src":"23262:272:6"},{"body":{"nativeSrc":"23644:38:6","nodeType":"YulBlock","src":"23644:38:6","statements":[{"nativeSrc":"23654:22:6","nodeType":"YulAssignment","src":"23654:22:6","value":{"arguments":[{"name":"ptr","nativeSrc":"23666:3:6","nodeType":"YulIdentifier","src":"23666:3:6"},{"kind":"number","nativeSrc":"23671:4:6","nodeType":"YulLiteral","src":"23671:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"23662:3:6","nodeType":"YulIdentifier","src":"23662:3:6"},"nativeSrc":"23662:14:6","nodeType":"YulFunctionCall","src":"23662:14:6"},"variableNames":[{"name":"next","nativeSrc":"23654:4:6","nodeType":"YulIdentifier","src":"23654:4:6"}]}]},"name":"array_nextElement_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr","nativeSrc":"23540:142:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"23631:3:6","nodeType":"YulTypedName","src":"23631:3:6","type":""}],"returnVariables":[{"name":"next","nativeSrc":"23639:4:6","nodeType":"YulTypedName","src":"23639:4:6","type":""}],"src":"23540:142:6"},{"body":{"nativeSrc":"23956:961:6","nodeType":"YulBlock","src":"23956:961:6","statements":[{"nativeSrc":"23966:97:6","nodeType":"YulVariableDeclaration","src":"23966:97:6","value":{"arguments":[{"name":"value","nativeSrc":"24057:5:6","nodeType":"YulIdentifier","src":"24057:5:6"}],"functionName":{"name":"array_length_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr","nativeSrc":"23980:76:6","nodeType":"YulIdentifier","src":"23980:76:6"},"nativeSrc":"23980:83:6","nodeType":"YulFunctionCall","src":"23980:83:6"},"variables":[{"name":"length","nativeSrc":"23970:6:6","nodeType":"YulTypedName","src":"23970:6:6","type":""}]},{"nativeSrc":"24072:122:6","nodeType":"YulAssignment","src":"24072:122:6","value":{"arguments":[{"name":"pos","nativeSrc":"24182:3:6","nodeType":"YulIdentifier","src":"24182:3:6"},{"name":"length","nativeSrc":"24187:6:6","nodeType":"YulIdentifier","src":"24187:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"24079:102:6","nodeType":"YulIdentifier","src":"24079:102:6"},"nativeSrc":"24079:115:6","nodeType":"YulFunctionCall","src":"24079:115:6"},"variableNames":[{"name":"pos","nativeSrc":"24072:3:6","nodeType":"YulIdentifier","src":"24072:3:6"}]},{"nativeSrc":"24203:20:6","nodeType":"YulVariableDeclaration","src":"24203:20:6","value":{"name":"pos","nativeSrc":"24220:3:6","nodeType":"YulIdentifier","src":"24220:3:6"},"variables":[{"name":"headStart","nativeSrc":"24207:9:6","nodeType":"YulTypedName","src":"24207:9:6","type":""}]},{"nativeSrc":"24232:39:6","nodeType":"YulVariableDeclaration","src":"24232:39:6","value":{"arguments":[{"name":"pos","nativeSrc":"24248:3:6","nodeType":"YulIdentifier","src":"24248:3:6"},{"arguments":[{"name":"length","nativeSrc":"24257:6:6","nodeType":"YulIdentifier","src":"24257:6:6"},{"kind":"number","nativeSrc":"24265:4:6","nodeType":"YulLiteral","src":"24265:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"24253:3:6","nodeType":"YulIdentifier","src":"24253:3:6"},"nativeSrc":"24253:17:6","nodeType":"YulFunctionCall","src":"24253:17:6"}],"functionName":{"name":"add","nativeSrc":"24244:3:6","nodeType":"YulIdentifier","src":"24244:3:6"},"nativeSrc":"24244:27:6","nodeType":"YulFunctionCall","src":"24244:27:6"},"variables":[{"name":"tail","nativeSrc":"24236:4:6","nodeType":"YulTypedName","src":"24236:4:6","type":""}]},{"nativeSrc":"24280:100:6","nodeType":"YulVariableDeclaration","src":"24280:100:6","value":{"arguments":[{"name":"value","nativeSrc":"24374:5:6","nodeType":"YulIdentifier","src":"24374:5:6"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr","nativeSrc":"24295:78:6","nodeType":"YulIdentifier","src":"24295:78:6"},"nativeSrc":"24295:85:6","nodeType":"YulFunctionCall","src":"24295:85:6"},"variables":[{"name":"baseRef","nativeSrc":"24284:7:6","nodeType":"YulTypedName","src":"24284:7:6","type":""}]},{"nativeSrc":"24389:21:6","nodeType":"YulVariableDeclaration","src":"24389:21:6","value":{"name":"baseRef","nativeSrc":"24403:7:6","nodeType":"YulIdentifier","src":"24403:7:6"},"variables":[{"name":"srcPtr","nativeSrc":"24393:6:6","nodeType":"YulTypedName","src":"24393:6:6","type":""}]},{"body":{"nativeSrc":"24479:393:6","nodeType":"YulBlock","src":"24479:393:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"24500:3:6","nodeType":"YulIdentifier","src":"24500:3:6"},{"arguments":[{"name":"tail","nativeSrc":"24509:4:6","nodeType":"YulIdentifier","src":"24509:4:6"},{"name":"headStart","nativeSrc":"24515:9:6","nodeType":"YulIdentifier","src":"24515:9:6"}],"functionName":{"name":"sub","nativeSrc":"24505:3:6","nodeType":"YulIdentifier","src":"24505:3:6"},"nativeSrc":"24505:20:6","nodeType":"YulFunctionCall","src":"24505:20:6"}],"functionName":{"name":"mstore","nativeSrc":"24493:6:6","nodeType":"YulIdentifier","src":"24493:6:6"},"nativeSrc":"24493:33:6","nodeType":"YulFunctionCall","src":"24493:33:6"},"nativeSrc":"24493:33:6","nodeType":"YulExpressionStatement","src":"24493:33:6"},{"nativeSrc":"24539:34:6","nodeType":"YulVariableDeclaration","src":"24539:34:6","value":{"arguments":[{"name":"srcPtr","nativeSrc":"24566:6:6","nodeType":"YulIdentifier","src":"24566:6:6"}],"functionName":{"name":"mload","nativeSrc":"24560:5:6","nodeType":"YulIdentifier","src":"24560:5:6"},"nativeSrc":"24560:13:6","nodeType":"YulFunctionCall","src":"24560:13:6"},"variables":[{"name":"elementValue0","nativeSrc":"24543:13:6","nodeType":"YulTypedName","src":"24543:13:6","type":""}]},{"nativeSrc":"24586:130:6","nodeType":"YulAssignment","src":"24586:130:6","value":{"arguments":[{"name":"elementValue0","nativeSrc":"24696:13:6","nodeType":"YulIdentifier","src":"24696:13:6"},{"name":"tail","nativeSrc":"24711:4:6","nodeType":"YulIdentifier","src":"24711:4:6"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_Contribution_$816_memory_ptr_to_t_struct$_Contribution_$816_memory_ptr","nativeSrc":"24594:101:6","nodeType":"YulIdentifier","src":"24594:101:6"},"nativeSrc":"24594:122:6","nodeType":"YulFunctionCall","src":"24594:122:6"},"variableNames":[{"name":"tail","nativeSrc":"24586:4:6","nodeType":"YulIdentifier","src":"24586:4:6"}]},{"nativeSrc":"24729:99:6","nodeType":"YulAssignment","src":"24729:99:6","value":{"arguments":[{"name":"srcPtr","nativeSrc":"24821:6:6","nodeType":"YulIdentifier","src":"24821:6:6"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr","nativeSrc":"24739:81:6","nodeType":"YulIdentifier","src":"24739:81:6"},"nativeSrc":"24739:89:6","nodeType":"YulFunctionCall","src":"24739:89:6"},"variableNames":[{"name":"srcPtr","nativeSrc":"24729:6:6","nodeType":"YulIdentifier","src":"24729:6:6"}]},{"nativeSrc":"24841:21:6","nodeType":"YulAssignment","src":"24841:21:6","value":{"arguments":[{"name":"pos","nativeSrc":"24852:3:6","nodeType":"YulIdentifier","src":"24852:3:6"},{"kind":"number","nativeSrc":"24857:4:6","nodeType":"YulLiteral","src":"24857:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"24848:3:6","nodeType":"YulIdentifier","src":"24848:3:6"},"nativeSrc":"24848:14:6","nodeType":"YulFunctionCall","src":"24848:14:6"},"variableNames":[{"name":"pos","nativeSrc":"24841:3:6","nodeType":"YulIdentifier","src":"24841:3:6"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"24441:1:6","nodeType":"YulIdentifier","src":"24441:1:6"},{"name":"length","nativeSrc":"24444:6:6","nodeType":"YulIdentifier","src":"24444:6:6"}],"functionName":{"name":"lt","nativeSrc":"24438:2:6","nodeType":"YulIdentifier","src":"24438:2:6"},"nativeSrc":"24438:13:6","nodeType":"YulFunctionCall","src":"24438:13:6"},"nativeSrc":"24419:453:6","nodeType":"YulForLoop","post":{"nativeSrc":"24452:18:6","nodeType":"YulBlock","src":"24452:18:6","statements":[{"nativeSrc":"24454:14:6","nodeType":"YulAssignment","src":"24454:14:6","value":{"arguments":[{"name":"i","nativeSrc":"24463:1:6","nodeType":"YulIdentifier","src":"24463:1:6"},{"kind":"number","nativeSrc":"24466:1:6","nodeType":"YulLiteral","src":"24466:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"24459:3:6","nodeType":"YulIdentifier","src":"24459:3:6"},"nativeSrc":"24459:9:6","nodeType":"YulFunctionCall","src":"24459:9:6"},"variableNames":[{"name":"i","nativeSrc":"24454:1:6","nodeType":"YulIdentifier","src":"24454:1:6"}]}]},"pre":{"nativeSrc":"24423:14:6","nodeType":"YulBlock","src":"24423:14:6","statements":[{"nativeSrc":"24425:10:6","nodeType":"YulVariableDeclaration","src":"24425:10:6","value":{"kind":"number","nativeSrc":"24434:1:6","nodeType":"YulLiteral","src":"24434:1:6","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"24429:1:6","nodeType":"YulTypedName","src":"24429:1:6","type":""}]}]},"src":"24419:453:6"},{"nativeSrc":"24881:11:6","nodeType":"YulAssignment","src":"24881:11:6","value":{"name":"tail","nativeSrc":"24888:4:6","nodeType":"YulIdentifier","src":"24888:4:6"},"variableNames":[{"name":"pos","nativeSrc":"24881:3:6","nodeType":"YulIdentifier","src":"24881:3:6"}]},{"nativeSrc":"24901:10:6","nodeType":"YulAssignment","src":"24901:10:6","value":{"name":"pos","nativeSrc":"24908:3:6","nodeType":"YulIdentifier","src":"24908:3:6"},"variableNames":[{"name":"end","nativeSrc":"24901:3:6","nodeType":"YulIdentifier","src":"24901:3:6"}]}]},"name":"abi_encode_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"23774:1143:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23935:5:6","nodeType":"YulTypedName","src":"23935:5:6","type":""},{"name":"pos","nativeSrc":"23942:3:6","nodeType":"YulTypedName","src":"23942:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23951:3:6","nodeType":"YulTypedName","src":"23951:3:6","type":""}],"src":"23774:1143:6"},{"body":{"nativeSrc":"25129:283:6","nodeType":"YulBlock","src":"25129:283:6","statements":[{"nativeSrc":"25139:26:6","nodeType":"YulAssignment","src":"25139:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"25151:9:6","nodeType":"YulIdentifier","src":"25151:9:6"},{"kind":"number","nativeSrc":"25162:2:6","nodeType":"YulLiteral","src":"25162:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25147:3:6","nodeType":"YulIdentifier","src":"25147:3:6"},"nativeSrc":"25147:18:6","nodeType":"YulFunctionCall","src":"25147:18:6"},"variableNames":[{"name":"tail","nativeSrc":"25139:4:6","nodeType":"YulIdentifier","src":"25139:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25186:9:6","nodeType":"YulIdentifier","src":"25186:9:6"},{"kind":"number","nativeSrc":"25197:1:6","nodeType":"YulLiteral","src":"25197:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25182:3:6","nodeType":"YulIdentifier","src":"25182:3:6"},"nativeSrc":"25182:17:6","nodeType":"YulFunctionCall","src":"25182:17:6"},{"arguments":[{"name":"tail","nativeSrc":"25205:4:6","nodeType":"YulIdentifier","src":"25205:4:6"},{"name":"headStart","nativeSrc":"25211:9:6","nodeType":"YulIdentifier","src":"25211:9:6"}],"functionName":{"name":"sub","nativeSrc":"25201:3:6","nodeType":"YulIdentifier","src":"25201:3:6"},"nativeSrc":"25201:20:6","nodeType":"YulFunctionCall","src":"25201:20:6"}],"functionName":{"name":"mstore","nativeSrc":"25175:6:6","nodeType":"YulIdentifier","src":"25175:6:6"},"nativeSrc":"25175:47:6","nodeType":"YulFunctionCall","src":"25175:47:6"},"nativeSrc":"25175:47:6","nodeType":"YulExpressionStatement","src":"25175:47:6"},{"nativeSrc":"25231:174:6","nodeType":"YulAssignment","src":"25231:174:6","value":{"arguments":[{"name":"value0","nativeSrc":"25391:6:6","nodeType":"YulIdentifier","src":"25391:6:6"},{"name":"tail","nativeSrc":"25400:4:6","nodeType":"YulIdentifier","src":"25400:4:6"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"25239:151:6","nodeType":"YulIdentifier","src":"25239:151:6"},"nativeSrc":"25239:166:6","nodeType":"YulFunctionCall","src":"25239:166:6"},"variableNames":[{"name":"tail","nativeSrc":"25231:4:6","nodeType":"YulIdentifier","src":"25231:4:6"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"24923:489:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25101:9:6","nodeType":"YulTypedName","src":"25101:9:6","type":""},{"name":"value0","nativeSrc":"25113:6:6","nodeType":"YulTypedName","src":"25113:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25124:4:6","nodeType":"YulTypedName","src":"25124:4:6","type":""}],"src":"24923:489:6"},{"body":{"nativeSrc":"25450:28:6","nodeType":"YulBlock","src":"25450:28:6","statements":[{"nativeSrc":"25460:12:6","nodeType":"YulAssignment","src":"25460:12:6","value":{"name":"value","nativeSrc":"25467:5:6","nodeType":"YulIdentifier","src":"25467:5:6"},"variableNames":[{"name":"ret","nativeSrc":"25460:3:6","nodeType":"YulIdentifier","src":"25460:3:6"}]}]},"name":"identity","nativeSrc":"25418:60:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25436:5:6","nodeType":"YulTypedName","src":"25436:5:6","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"25446:3:6","nodeType":"YulTypedName","src":"25446:3:6","type":""}],"src":"25418:60:6"},{"body":{"nativeSrc":"25544:82:6","nodeType":"YulBlock","src":"25544:82:6","statements":[{"nativeSrc":"25554:66:6","nodeType":"YulAssignment","src":"25554:66:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"25612:5:6","nodeType":"YulIdentifier","src":"25612:5:6"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"25594:17:6","nodeType":"YulIdentifier","src":"25594:17:6"},"nativeSrc":"25594:24:6","nodeType":"YulFunctionCall","src":"25594:24:6"}],"functionName":{"name":"identity","nativeSrc":"25585:8:6","nodeType":"YulIdentifier","src":"25585:8:6"},"nativeSrc":"25585:34:6","nodeType":"YulFunctionCall","src":"25585:34:6"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"25567:17:6","nodeType":"YulIdentifier","src":"25567:17:6"},"nativeSrc":"25567:53:6","nodeType":"YulFunctionCall","src":"25567:53:6"},"variableNames":[{"name":"converted","nativeSrc":"25554:9:6","nodeType":"YulIdentifier","src":"25554:9:6"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"25484:142:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25524:5:6","nodeType":"YulTypedName","src":"25524:5:6","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"25534:9:6","nodeType":"YulTypedName","src":"25534:9:6","type":""}],"src":"25484:142:6"},{"body":{"nativeSrc":"25692:66:6","nodeType":"YulBlock","src":"25692:66:6","statements":[{"nativeSrc":"25702:50:6","nodeType":"YulAssignment","src":"25702:50:6","value":{"arguments":[{"name":"value","nativeSrc":"25746:5:6","nodeType":"YulIdentifier","src":"25746:5:6"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"25715:30:6","nodeType":"YulIdentifier","src":"25715:30:6"},"nativeSrc":"25715:37:6","nodeType":"YulFunctionCall","src":"25715:37:6"},"variableNames":[{"name":"converted","nativeSrc":"25702:9:6","nodeType":"YulIdentifier","src":"25702:9:6"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"25632:126:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25672:5:6","nodeType":"YulTypedName","src":"25672:5:6","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"25682:9:6","nodeType":"YulTypedName","src":"25682:9:6","type":""}],"src":"25632:126:6"},{"body":{"nativeSrc":"25837:66:6","nodeType":"YulBlock","src":"25837:66:6","statements":[{"nativeSrc":"25847:50:6","nodeType":"YulAssignment","src":"25847:50:6","value":{"arguments":[{"name":"value","nativeSrc":"25891:5:6","nodeType":"YulIdentifier","src":"25891:5:6"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"25860:30:6","nodeType":"YulIdentifier","src":"25860:30:6"},"nativeSrc":"25860:37:6","nodeType":"YulFunctionCall","src":"25860:37:6"},"variableNames":[{"name":"converted","nativeSrc":"25847:9:6","nodeType":"YulIdentifier","src":"25847:9:6"}]}]},"name":"convert_t_contract$_ERC20_$651_to_t_address","nativeSrc":"25764:139:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25817:5:6","nodeType":"YulTypedName","src":"25817:5:6","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"25827:9:6","nodeType":"YulTypedName","src":"25827:9:6","type":""}],"src":"25764:139:6"},{"body":{"nativeSrc":"25987:79:6","nodeType":"YulBlock","src":"25987:79:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"26004:3:6","nodeType":"YulIdentifier","src":"26004:3:6"},{"arguments":[{"name":"value","nativeSrc":"26053:5:6","nodeType":"YulIdentifier","src":"26053:5:6"}],"functionName":{"name":"convert_t_contract$_ERC20_$651_to_t_address","nativeSrc":"26009:43:6","nodeType":"YulIdentifier","src":"26009:43:6"},"nativeSrc":"26009:50:6","nodeType":"YulFunctionCall","src":"26009:50:6"}],"functionName":{"name":"mstore","nativeSrc":"25997:6:6","nodeType":"YulIdentifier","src":"25997:6:6"},"nativeSrc":"25997:63:6","nodeType":"YulFunctionCall","src":"25997:63:6"},"nativeSrc":"25997:63:6","nodeType":"YulExpressionStatement","src":"25997:63:6"}]},"name":"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack","nativeSrc":"25909:157:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25975:5:6","nodeType":"YulTypedName","src":"25975:5:6","type":""},{"name":"pos","nativeSrc":"25982:3:6","nodeType":"YulTypedName","src":"25982:3:6","type":""}],"src":"25909:157:6"},{"body":{"nativeSrc":"26183:137:6","nodeType":"YulBlock","src":"26183:137:6","statements":[{"nativeSrc":"26193:26:6","nodeType":"YulAssignment","src":"26193:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"26205:9:6","nodeType":"YulIdentifier","src":"26205:9:6"},{"kind":"number","nativeSrc":"26216:2:6","nodeType":"YulLiteral","src":"26216:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26201:3:6","nodeType":"YulIdentifier","src":"26201:3:6"},"nativeSrc":"26201:18:6","nodeType":"YulFunctionCall","src":"26201:18:6"},"variableNames":[{"name":"tail","nativeSrc":"26193:4:6","nodeType":"YulIdentifier","src":"26193:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"26286:6:6","nodeType":"YulIdentifier","src":"26286:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"26299:9:6","nodeType":"YulIdentifier","src":"26299:9:6"},{"kind":"number","nativeSrc":"26310:1:6","nodeType":"YulLiteral","src":"26310:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26295:3:6","nodeType":"YulIdentifier","src":"26295:3:6"},"nativeSrc":"26295:17:6","nodeType":"YulFunctionCall","src":"26295:17:6"}],"functionName":{"name":"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack","nativeSrc":"26229:56:6","nodeType":"YulIdentifier","src":"26229:56:6"},"nativeSrc":"26229:84:6","nodeType":"YulFunctionCall","src":"26229:84:6"},"nativeSrc":"26229:84:6","nodeType":"YulExpressionStatement","src":"26229:84:6"}]},"name":"abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed","nativeSrc":"26072:248:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26155:9:6","nodeType":"YulTypedName","src":"26155:9:6","type":""},{"name":"value0","nativeSrc":"26167:6:6","nodeType":"YulTypedName","src":"26167:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26178:4:6","nodeType":"YulTypedName","src":"26178:4:6","type":""}],"src":"26072:248:6"},{"body":{"nativeSrc":"26432:64:6","nodeType":"YulBlock","src":"26432:64:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"26454:6:6","nodeType":"YulIdentifier","src":"26454:6:6"},{"kind":"number","nativeSrc":"26462:1:6","nodeType":"YulLiteral","src":"26462:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26450:3:6","nodeType":"YulIdentifier","src":"26450:3:6"},"nativeSrc":"26450:14:6","nodeType":"YulFunctionCall","src":"26450:14:6"},{"hexValue":"506170657220646f6573206e6f74206578697374","kind":"string","nativeSrc":"26466:22:6","nodeType":"YulLiteral","src":"26466:22:6","type":"","value":"Paper does not exist"}],"functionName":{"name":"mstore","nativeSrc":"26443:6:6","nodeType":"YulIdentifier","src":"26443:6:6"},"nativeSrc":"26443:46:6","nodeType":"YulFunctionCall","src":"26443:46:6"},"nativeSrc":"26443:46:6","nodeType":"YulExpressionStatement","src":"26443:46:6"}]},"name":"store_literal_in_memory_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","nativeSrc":"26326:170:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"26424:6:6","nodeType":"YulTypedName","src":"26424:6:6","type":""}],"src":"26326:170:6"},{"body":{"nativeSrc":"26648:220:6","nodeType":"YulBlock","src":"26648:220:6","statements":[{"nativeSrc":"26658:74:6","nodeType":"YulAssignment","src":"26658:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"26724:3:6","nodeType":"YulIdentifier","src":"26724:3:6"},{"kind":"number","nativeSrc":"26729:2:6","nodeType":"YulLiteral","src":"26729:2:6","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"26665:58:6","nodeType":"YulIdentifier","src":"26665:58:6"},"nativeSrc":"26665:67:6","nodeType":"YulFunctionCall","src":"26665:67:6"},"variableNames":[{"name":"pos","nativeSrc":"26658:3:6","nodeType":"YulIdentifier","src":"26658:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"26830:3:6","nodeType":"YulIdentifier","src":"26830:3:6"}],"functionName":{"name":"store_literal_in_memory_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf","nativeSrc":"26741:88:6","nodeType":"YulIdentifier","src":"26741:88:6"},"nativeSrc":"26741:93:6","nodeType":"YulFunctionCall","src":"26741:93:6"},"nativeSrc":"26741:93:6","nodeType":"YulExpressionStatement","src":"26741:93:6"},{"nativeSrc":"26843:19:6","nodeType":"YulAssignment","src":"26843:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"26854:3:6","nodeType":"YulIdentifier","src":"26854:3:6"},{"kind":"number","nativeSrc":"26859:2:6","nodeType":"YulLiteral","src":"26859:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26850:3:6","nodeType":"YulIdentifier","src":"26850:3:6"},"nativeSrc":"26850:12:6","nodeType":"YulFunctionCall","src":"26850:12:6"},"variableNames":[{"name":"end","nativeSrc":"26843:3:6","nodeType":"YulIdentifier","src":"26843:3:6"}]}]},"name":"abi_encode_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf_to_t_string_memory_ptr_fromStack","nativeSrc":"26502:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"26636:3:6","nodeType":"YulTypedName","src":"26636:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"26644:3:6","nodeType":"YulTypedName","src":"26644:3:6","type":""}],"src":"26502:366:6"},{"body":{"nativeSrc":"27045:248:6","nodeType":"YulBlock","src":"27045:248:6","statements":[{"nativeSrc":"27055:26:6","nodeType":"YulAssignment","src":"27055:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"27067:9:6","nodeType":"YulIdentifier","src":"27067:9:6"},{"kind":"number","nativeSrc":"27078:2:6","nodeType":"YulLiteral","src":"27078:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27063:3:6","nodeType":"YulIdentifier","src":"27063:3:6"},"nativeSrc":"27063:18:6","nodeType":"YulFunctionCall","src":"27063:18:6"},"variableNames":[{"name":"tail","nativeSrc":"27055:4:6","nodeType":"YulIdentifier","src":"27055:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27102:9:6","nodeType":"YulIdentifier","src":"27102:9:6"},{"kind":"number","nativeSrc":"27113:1:6","nodeType":"YulLiteral","src":"27113:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27098:3:6","nodeType":"YulIdentifier","src":"27098:3:6"},"nativeSrc":"27098:17:6","nodeType":"YulFunctionCall","src":"27098:17:6"},{"arguments":[{"name":"tail","nativeSrc":"27121:4:6","nodeType":"YulIdentifier","src":"27121:4:6"},{"name":"headStart","nativeSrc":"27127:9:6","nodeType":"YulIdentifier","src":"27127:9:6"}],"functionName":{"name":"sub","nativeSrc":"27117:3:6","nodeType":"YulIdentifier","src":"27117:3:6"},"nativeSrc":"27117:20:6","nodeType":"YulFunctionCall","src":"27117:20:6"}],"functionName":{"name":"mstore","nativeSrc":"27091:6:6","nodeType":"YulIdentifier","src":"27091:6:6"},"nativeSrc":"27091:47:6","nodeType":"YulFunctionCall","src":"27091:47:6"},"nativeSrc":"27091:47:6","nodeType":"YulExpressionStatement","src":"27091:47:6"},{"nativeSrc":"27147:139:6","nodeType":"YulAssignment","src":"27147:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"27281:4:6","nodeType":"YulIdentifier","src":"27281:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf_to_t_string_memory_ptr_fromStack","nativeSrc":"27155:124:6","nodeType":"YulIdentifier","src":"27155:124:6"},"nativeSrc":"27155:131:6","nodeType":"YulFunctionCall","src":"27155:131:6"},"variableNames":[{"name":"tail","nativeSrc":"27147:4:6","nodeType":"YulIdentifier","src":"27147:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"26874:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27025:9:6","nodeType":"YulTypedName","src":"27025:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27040:4:6","nodeType":"YulTypedName","src":"27040:4:6","type":""}],"src":"26874:419:6"},{"body":{"nativeSrc":"27327:152:6","nodeType":"YulBlock","src":"27327:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"27344:1:6","nodeType":"YulLiteral","src":"27344:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"27347:77:6","nodeType":"YulLiteral","src":"27347:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"27337:6:6","nodeType":"YulIdentifier","src":"27337:6:6"},"nativeSrc":"27337:88:6","nodeType":"YulFunctionCall","src":"27337:88:6"},"nativeSrc":"27337:88:6","nodeType":"YulExpressionStatement","src":"27337:88:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"27441:1:6","nodeType":"YulLiteral","src":"27441:1:6","type":"","value":"4"},{"kind":"number","nativeSrc":"27444:4:6","nodeType":"YulLiteral","src":"27444:4:6","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"27434:6:6","nodeType":"YulIdentifier","src":"27434:6:6"},"nativeSrc":"27434:15:6","nodeType":"YulFunctionCall","src":"27434:15:6"},"nativeSrc":"27434:15:6","nodeType":"YulExpressionStatement","src":"27434:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"27465:1:6","nodeType":"YulLiteral","src":"27465:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"27468:4:6","nodeType":"YulLiteral","src":"27468:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"27458:6:6","nodeType":"YulIdentifier","src":"27458:6:6"},"nativeSrc":"27458:15:6","nodeType":"YulFunctionCall","src":"27458:15:6"},"nativeSrc":"27458:15:6","nodeType":"YulExpressionStatement","src":"27458:15:6"}]},"name":"panic_error_0x22","nativeSrc":"27299:180:6","nodeType":"YulFunctionDefinition","src":"27299:180:6"},{"body":{"nativeSrc":"27536:269:6","nodeType":"YulBlock","src":"27536:269:6","statements":[{"nativeSrc":"27546:22:6","nodeType":"YulAssignment","src":"27546:22:6","value":{"arguments":[{"name":"data","nativeSrc":"27560:4:6","nodeType":"YulIdentifier","src":"27560:4:6"},{"kind":"number","nativeSrc":"27566:1:6","nodeType":"YulLiteral","src":"27566:1:6","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"27556:3:6","nodeType":"YulIdentifier","src":"27556:3:6"},"nativeSrc":"27556:12:6","nodeType":"YulFunctionCall","src":"27556:12:6"},"variableNames":[{"name":"length","nativeSrc":"27546:6:6","nodeType":"YulIdentifier","src":"27546:6:6"}]},{"nativeSrc":"27577:38:6","nodeType":"YulVariableDeclaration","src":"27577:38:6","value":{"arguments":[{"name":"data","nativeSrc":"27607:4:6","nodeType":"YulIdentifier","src":"27607:4:6"},{"kind":"number","nativeSrc":"27613:1:6","nodeType":"YulLiteral","src":"27613:1:6","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"27603:3:6","nodeType":"YulIdentifier","src":"27603:3:6"},"nativeSrc":"27603:12:6","nodeType":"YulFunctionCall","src":"27603:12:6"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"27581:18:6","nodeType":"YulTypedName","src":"27581:18:6","type":""}]},{"body":{"nativeSrc":"27654:51:6","nodeType":"YulBlock","src":"27654:51:6","statements":[{"nativeSrc":"27668:27:6","nodeType":"YulAssignment","src":"27668:27:6","value":{"arguments":[{"name":"length","nativeSrc":"27682:6:6","nodeType":"YulIdentifier","src":"27682:6:6"},{"kind":"number","nativeSrc":"27690:4:6","nodeType":"YulLiteral","src":"27690:4:6","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"27678:3:6","nodeType":"YulIdentifier","src":"27678:3:6"},"nativeSrc":"27678:17:6","nodeType":"YulFunctionCall","src":"27678:17:6"},"variableNames":[{"name":"length","nativeSrc":"27668:6:6","nodeType":"YulIdentifier","src":"27668:6:6"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"27634:18:6","nodeType":"YulIdentifier","src":"27634:18:6"}],"functionName":{"name":"iszero","nativeSrc":"27627:6:6","nodeType":"YulIdentifier","src":"27627:6:6"},"nativeSrc":"27627:26:6","nodeType":"YulFunctionCall","src":"27627:26:6"},"nativeSrc":"27624:81:6","nodeType":"YulIf","src":"27624:81:6"},{"body":{"nativeSrc":"27757:42:6","nodeType":"YulBlock","src":"27757:42:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"27771:16:6","nodeType":"YulIdentifier","src":"27771:16:6"},"nativeSrc":"27771:18:6","nodeType":"YulFunctionCall","src":"27771:18:6"},"nativeSrc":"27771:18:6","nodeType":"YulExpressionStatement","src":"27771:18:6"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"27721:18:6","nodeType":"YulIdentifier","src":"27721:18:6"},{"arguments":[{"name":"length","nativeSrc":"27744:6:6","nodeType":"YulIdentifier","src":"27744:6:6"},{"kind":"number","nativeSrc":"27752:2:6","nodeType":"YulLiteral","src":"27752:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"27741:2:6","nodeType":"YulIdentifier","src":"27741:2:6"},"nativeSrc":"27741:14:6","nodeType":"YulFunctionCall","src":"27741:14:6"}],"functionName":{"name":"eq","nativeSrc":"27718:2:6","nodeType":"YulIdentifier","src":"27718:2:6"},"nativeSrc":"27718:38:6","nodeType":"YulFunctionCall","src":"27718:38:6"},"nativeSrc":"27715:84:6","nodeType":"YulIf","src":"27715:84:6"}]},"name":"extract_byte_array_length","nativeSrc":"27485:320:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"27520:4:6","nodeType":"YulTypedName","src":"27520:4:6","type":""}],"returnVariables":[{"name":"length","nativeSrc":"27529:6:6","nodeType":"YulTypedName","src":"27529:6:6","type":""}],"src":"27485:320:6"},{"body":{"nativeSrc":"27917:122:6","nodeType":"YulBlock","src":"27917:122:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"27939:6:6","nodeType":"YulIdentifier","src":"27939:6:6"},{"kind":"number","nativeSrc":"27947:1:6","nodeType":"YulLiteral","src":"27947:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27935:3:6","nodeType":"YulIdentifier","src":"27935:3:6"},"nativeSrc":"27935:14:6","nodeType":"YulFunctionCall","src":"27935:14:6"},{"hexValue":"4f6e6c792074686520617574686f722063616e20617070726f766520636f6e74","kind":"string","nativeSrc":"27951:34:6","nodeType":"YulLiteral","src":"27951:34:6","type":"","value":"Only the author can approve cont"}],"functionName":{"name":"mstore","nativeSrc":"27928:6:6","nodeType":"YulIdentifier","src":"27928:6:6"},"nativeSrc":"27928:58:6","nodeType":"YulFunctionCall","src":"27928:58:6"},"nativeSrc":"27928:58:6","nodeType":"YulExpressionStatement","src":"27928:58:6"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"28007:6:6","nodeType":"YulIdentifier","src":"28007:6:6"},{"kind":"number","nativeSrc":"28015:2:6","nodeType":"YulLiteral","src":"28015:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28003:3:6","nodeType":"YulIdentifier","src":"28003:3:6"},"nativeSrc":"28003:15:6","nodeType":"YulFunctionCall","src":"28003:15:6"},{"hexValue":"7269627574696f6e73","kind":"string","nativeSrc":"28020:11:6","nodeType":"YulLiteral","src":"28020:11:6","type":"","value":"ributions"}],"functionName":{"name":"mstore","nativeSrc":"27996:6:6","nodeType":"YulIdentifier","src":"27996:6:6"},"nativeSrc":"27996:36:6","nodeType":"YulFunctionCall","src":"27996:36:6"},"nativeSrc":"27996:36:6","nodeType":"YulExpressionStatement","src":"27996:36:6"}]},"name":"store_literal_in_memory_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1","nativeSrc":"27811:228:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"27909:6:6","nodeType":"YulTypedName","src":"27909:6:6","type":""}],"src":"27811:228:6"},{"body":{"nativeSrc":"28191:220:6","nodeType":"YulBlock","src":"28191:220:6","statements":[{"nativeSrc":"28201:74:6","nodeType":"YulAssignment","src":"28201:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"28267:3:6","nodeType":"YulIdentifier","src":"28267:3:6"},{"kind":"number","nativeSrc":"28272:2:6","nodeType":"YulLiteral","src":"28272:2:6","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"28208:58:6","nodeType":"YulIdentifier","src":"28208:58:6"},"nativeSrc":"28208:67:6","nodeType":"YulFunctionCall","src":"28208:67:6"},"variableNames":[{"name":"pos","nativeSrc":"28201:3:6","nodeType":"YulIdentifier","src":"28201:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"28373:3:6","nodeType":"YulIdentifier","src":"28373:3:6"}],"functionName":{"name":"store_literal_in_memory_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1","nativeSrc":"28284:88:6","nodeType":"YulIdentifier","src":"28284:88:6"},"nativeSrc":"28284:93:6","nodeType":"YulFunctionCall","src":"28284:93:6"},"nativeSrc":"28284:93:6","nodeType":"YulExpressionStatement","src":"28284:93:6"},{"nativeSrc":"28386:19:6","nodeType":"YulAssignment","src":"28386:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"28397:3:6","nodeType":"YulIdentifier","src":"28397:3:6"},{"kind":"number","nativeSrc":"28402:2:6","nodeType":"YulLiteral","src":"28402:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"28393:3:6","nodeType":"YulIdentifier","src":"28393:3:6"},"nativeSrc":"28393:12:6","nodeType":"YulFunctionCall","src":"28393:12:6"},"variableNames":[{"name":"end","nativeSrc":"28386:3:6","nodeType":"YulIdentifier","src":"28386:3:6"}]}]},"name":"abi_encode_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1_to_t_string_memory_ptr_fromStack","nativeSrc":"28045:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"28179:3:6","nodeType":"YulTypedName","src":"28179:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"28187:3:6","nodeType":"YulTypedName","src":"28187:3:6","type":""}],"src":"28045:366:6"},{"body":{"nativeSrc":"28588:248:6","nodeType":"YulBlock","src":"28588:248:6","statements":[{"nativeSrc":"28598:26:6","nodeType":"YulAssignment","src":"28598:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"28610:9:6","nodeType":"YulIdentifier","src":"28610:9:6"},{"kind":"number","nativeSrc":"28621:2:6","nodeType":"YulLiteral","src":"28621:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28606:3:6","nodeType":"YulIdentifier","src":"28606:3:6"},"nativeSrc":"28606:18:6","nodeType":"YulFunctionCall","src":"28606:18:6"},"variableNames":[{"name":"tail","nativeSrc":"28598:4:6","nodeType":"YulIdentifier","src":"28598:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28645:9:6","nodeType":"YulIdentifier","src":"28645:9:6"},{"kind":"number","nativeSrc":"28656:1:6","nodeType":"YulLiteral","src":"28656:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28641:3:6","nodeType":"YulIdentifier","src":"28641:3:6"},"nativeSrc":"28641:17:6","nodeType":"YulFunctionCall","src":"28641:17:6"},{"arguments":[{"name":"tail","nativeSrc":"28664:4:6","nodeType":"YulIdentifier","src":"28664:4:6"},{"name":"headStart","nativeSrc":"28670:9:6","nodeType":"YulIdentifier","src":"28670:9:6"}],"functionName":{"name":"sub","nativeSrc":"28660:3:6","nodeType":"YulIdentifier","src":"28660:3:6"},"nativeSrc":"28660:20:6","nodeType":"YulFunctionCall","src":"28660:20:6"}],"functionName":{"name":"mstore","nativeSrc":"28634:6:6","nodeType":"YulIdentifier","src":"28634:6:6"},"nativeSrc":"28634:47:6","nodeType":"YulFunctionCall","src":"28634:47:6"},"nativeSrc":"28634:47:6","nodeType":"YulExpressionStatement","src":"28634:47:6"},{"nativeSrc":"28690:139:6","nodeType":"YulAssignment","src":"28690:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"28824:4:6","nodeType":"YulIdentifier","src":"28824:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1_to_t_string_memory_ptr_fromStack","nativeSrc":"28698:124:6","nodeType":"YulIdentifier","src":"28698:124:6"},"nativeSrc":"28698:131:6","nodeType":"YulFunctionCall","src":"28698:131:6"},"variableNames":[{"name":"tail","nativeSrc":"28690:4:6","nodeType":"YulIdentifier","src":"28690:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"28417:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28568:9:6","nodeType":"YulTypedName","src":"28568:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28583:4:6","nodeType":"YulTypedName","src":"28583:4:6","type":""}],"src":"28417:419:6"},{"body":{"nativeSrc":"28948:70:6","nodeType":"YulBlock","src":"28948:70:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"28970:6:6","nodeType":"YulIdentifier","src":"28970:6:6"},{"kind":"number","nativeSrc":"28978:1:6","nodeType":"YulLiteral","src":"28978:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28966:3:6","nodeType":"YulIdentifier","src":"28966:3:6"},"nativeSrc":"28966:14:6","nodeType":"YulFunctionCall","src":"28966:14:6"},{"hexValue":"496e76616c696420636f6e747269627574696f6e20696e646578","kind":"string","nativeSrc":"28982:28:6","nodeType":"YulLiteral","src":"28982:28:6","type":"","value":"Invalid contribution index"}],"functionName":{"name":"mstore","nativeSrc":"28959:6:6","nodeType":"YulIdentifier","src":"28959:6:6"},"nativeSrc":"28959:52:6","nodeType":"YulFunctionCall","src":"28959:52:6"},"nativeSrc":"28959:52:6","nodeType":"YulExpressionStatement","src":"28959:52:6"}]},"name":"store_literal_in_memory_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340","nativeSrc":"28842:176:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"28940:6:6","nodeType":"YulTypedName","src":"28940:6:6","type":""}],"src":"28842:176:6"},{"body":{"nativeSrc":"29170:220:6","nodeType":"YulBlock","src":"29170:220:6","statements":[{"nativeSrc":"29180:74:6","nodeType":"YulAssignment","src":"29180:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"29246:3:6","nodeType":"YulIdentifier","src":"29246:3:6"},{"kind":"number","nativeSrc":"29251:2:6","nodeType":"YulLiteral","src":"29251:2:6","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"29187:58:6","nodeType":"YulIdentifier","src":"29187:58:6"},"nativeSrc":"29187:67:6","nodeType":"YulFunctionCall","src":"29187:67:6"},"variableNames":[{"name":"pos","nativeSrc":"29180:3:6","nodeType":"YulIdentifier","src":"29180:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"29352:3:6","nodeType":"YulIdentifier","src":"29352:3:6"}],"functionName":{"name":"store_literal_in_memory_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340","nativeSrc":"29263:88:6","nodeType":"YulIdentifier","src":"29263:88:6"},"nativeSrc":"29263:93:6","nodeType":"YulFunctionCall","src":"29263:93:6"},"nativeSrc":"29263:93:6","nodeType":"YulExpressionStatement","src":"29263:93:6"},{"nativeSrc":"29365:19:6","nodeType":"YulAssignment","src":"29365:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"29376:3:6","nodeType":"YulIdentifier","src":"29376:3:6"},{"kind":"number","nativeSrc":"29381:2:6","nodeType":"YulLiteral","src":"29381:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29372:3:6","nodeType":"YulIdentifier","src":"29372:3:6"},"nativeSrc":"29372:12:6","nodeType":"YulFunctionCall","src":"29372:12:6"},"variableNames":[{"name":"end","nativeSrc":"29365:3:6","nodeType":"YulIdentifier","src":"29365:3:6"}]}]},"name":"abi_encode_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340_to_t_string_memory_ptr_fromStack","nativeSrc":"29024:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"29158:3:6","nodeType":"YulTypedName","src":"29158:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"29166:3:6","nodeType":"YulTypedName","src":"29166:3:6","type":""}],"src":"29024:366:6"},{"body":{"nativeSrc":"29567:248:6","nodeType":"YulBlock","src":"29567:248:6","statements":[{"nativeSrc":"29577:26:6","nodeType":"YulAssignment","src":"29577:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"29589:9:6","nodeType":"YulIdentifier","src":"29589:9:6"},{"kind":"number","nativeSrc":"29600:2:6","nodeType":"YulLiteral","src":"29600:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29585:3:6","nodeType":"YulIdentifier","src":"29585:3:6"},"nativeSrc":"29585:18:6","nodeType":"YulFunctionCall","src":"29585:18:6"},"variableNames":[{"name":"tail","nativeSrc":"29577:4:6","nodeType":"YulIdentifier","src":"29577:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29624:9:6","nodeType":"YulIdentifier","src":"29624:9:6"},{"kind":"number","nativeSrc":"29635:1:6","nodeType":"YulLiteral","src":"29635:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29620:3:6","nodeType":"YulIdentifier","src":"29620:3:6"},"nativeSrc":"29620:17:6","nodeType":"YulFunctionCall","src":"29620:17:6"},{"arguments":[{"name":"tail","nativeSrc":"29643:4:6","nodeType":"YulIdentifier","src":"29643:4:6"},{"name":"headStart","nativeSrc":"29649:9:6","nodeType":"YulIdentifier","src":"29649:9:6"}],"functionName":{"name":"sub","nativeSrc":"29639:3:6","nodeType":"YulIdentifier","src":"29639:3:6"},"nativeSrc":"29639:20:6","nodeType":"YulFunctionCall","src":"29639:20:6"}],"functionName":{"name":"mstore","nativeSrc":"29613:6:6","nodeType":"YulIdentifier","src":"29613:6:6"},"nativeSrc":"29613:47:6","nodeType":"YulFunctionCall","src":"29613:47:6"},"nativeSrc":"29613:47:6","nodeType":"YulExpressionStatement","src":"29613:47:6"},{"nativeSrc":"29669:139:6","nodeType":"YulAssignment","src":"29669:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"29803:4:6","nodeType":"YulIdentifier","src":"29803:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340_to_t_string_memory_ptr_fromStack","nativeSrc":"29677:124:6","nodeType":"YulIdentifier","src":"29677:124:6"},"nativeSrc":"29677:131:6","nodeType":"YulFunctionCall","src":"29677:131:6"},"variableNames":[{"name":"tail","nativeSrc":"29669:4:6","nodeType":"YulIdentifier","src":"29669:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"29396:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29547:9:6","nodeType":"YulTypedName","src":"29547:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29562:4:6","nodeType":"YulTypedName","src":"29562:4:6","type":""}],"src":"29396:419:6"},{"body":{"nativeSrc":"29849:152:6","nodeType":"YulBlock","src":"29849:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"29866:1:6","nodeType":"YulLiteral","src":"29866:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"29869:77:6","nodeType":"YulLiteral","src":"29869:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"29859:6:6","nodeType":"YulIdentifier","src":"29859:6:6"},"nativeSrc":"29859:88:6","nodeType":"YulFunctionCall","src":"29859:88:6"},"nativeSrc":"29859:88:6","nodeType":"YulExpressionStatement","src":"29859:88:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"29963:1:6","nodeType":"YulLiteral","src":"29963:1:6","type":"","value":"4"},{"kind":"number","nativeSrc":"29966:4:6","nodeType":"YulLiteral","src":"29966:4:6","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"29956:6:6","nodeType":"YulIdentifier","src":"29956:6:6"},"nativeSrc":"29956:15:6","nodeType":"YulFunctionCall","src":"29956:15:6"},"nativeSrc":"29956:15:6","nodeType":"YulExpressionStatement","src":"29956:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"29987:1:6","nodeType":"YulLiteral","src":"29987:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"29990:4:6","nodeType":"YulLiteral","src":"29990:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"29980:6:6","nodeType":"YulIdentifier","src":"29980:6:6"},"nativeSrc":"29980:15:6","nodeType":"YulFunctionCall","src":"29980:15:6"},"nativeSrc":"29980:15:6","nodeType":"YulExpressionStatement","src":"29980:15:6"}]},"name":"panic_error_0x32","nativeSrc":"29821:180:6","nodeType":"YulFunctionDefinition","src":"29821:180:6"},{"body":{"nativeSrc":"30113:73:6","nodeType":"YulBlock","src":"30113:73:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"30135:6:6","nodeType":"YulIdentifier","src":"30135:6:6"},{"kind":"number","nativeSrc":"30143:1:6","nodeType":"YulLiteral","src":"30143:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30131:3:6","nodeType":"YulIdentifier","src":"30131:3:6"},"nativeSrc":"30131:14:6","nodeType":"YulFunctionCall","src":"30131:14:6"},{"hexValue":"436f6e747269627574696f6e20616c726561647920617070726f766564","kind":"string","nativeSrc":"30147:31:6","nodeType":"YulLiteral","src":"30147:31:6","type":"","value":"Contribution already approved"}],"functionName":{"name":"mstore","nativeSrc":"30124:6:6","nodeType":"YulIdentifier","src":"30124:6:6"},"nativeSrc":"30124:55:6","nodeType":"YulFunctionCall","src":"30124:55:6"},"nativeSrc":"30124:55:6","nodeType":"YulExpressionStatement","src":"30124:55:6"}]},"name":"store_literal_in_memory_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20","nativeSrc":"30007:179:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"30105:6:6","nodeType":"YulTypedName","src":"30105:6:6","type":""}],"src":"30007:179:6"},{"body":{"nativeSrc":"30338:220:6","nodeType":"YulBlock","src":"30338:220:6","statements":[{"nativeSrc":"30348:74:6","nodeType":"YulAssignment","src":"30348:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"30414:3:6","nodeType":"YulIdentifier","src":"30414:3:6"},{"kind":"number","nativeSrc":"30419:2:6","nodeType":"YulLiteral","src":"30419:2:6","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"30355:58:6","nodeType":"YulIdentifier","src":"30355:58:6"},"nativeSrc":"30355:67:6","nodeType":"YulFunctionCall","src":"30355:67:6"},"variableNames":[{"name":"pos","nativeSrc":"30348:3:6","nodeType":"YulIdentifier","src":"30348:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"30520:3:6","nodeType":"YulIdentifier","src":"30520:3:6"}],"functionName":{"name":"store_literal_in_memory_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20","nativeSrc":"30431:88:6","nodeType":"YulIdentifier","src":"30431:88:6"},"nativeSrc":"30431:93:6","nodeType":"YulFunctionCall","src":"30431:93:6"},"nativeSrc":"30431:93:6","nodeType":"YulExpressionStatement","src":"30431:93:6"},{"nativeSrc":"30533:19:6","nodeType":"YulAssignment","src":"30533:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"30544:3:6","nodeType":"YulIdentifier","src":"30544:3:6"},{"kind":"number","nativeSrc":"30549:2:6","nodeType":"YulLiteral","src":"30549:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30540:3:6","nodeType":"YulIdentifier","src":"30540:3:6"},"nativeSrc":"30540:12:6","nodeType":"YulFunctionCall","src":"30540:12:6"},"variableNames":[{"name":"end","nativeSrc":"30533:3:6","nodeType":"YulIdentifier","src":"30533:3:6"}]}]},"name":"abi_encode_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20_to_t_string_memory_ptr_fromStack","nativeSrc":"30192:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"30326:3:6","nodeType":"YulTypedName","src":"30326:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"30334:3:6","nodeType":"YulTypedName","src":"30334:3:6","type":""}],"src":"30192:366:6"},{"body":{"nativeSrc":"30735:248:6","nodeType":"YulBlock","src":"30735:248:6","statements":[{"nativeSrc":"30745:26:6","nodeType":"YulAssignment","src":"30745:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"30757:9:6","nodeType":"YulIdentifier","src":"30757:9:6"},{"kind":"number","nativeSrc":"30768:2:6","nodeType":"YulLiteral","src":"30768:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30753:3:6","nodeType":"YulIdentifier","src":"30753:3:6"},"nativeSrc":"30753:18:6","nodeType":"YulFunctionCall","src":"30753:18:6"},"variableNames":[{"name":"tail","nativeSrc":"30745:4:6","nodeType":"YulIdentifier","src":"30745:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"30792:9:6","nodeType":"YulIdentifier","src":"30792:9:6"},{"kind":"number","nativeSrc":"30803:1:6","nodeType":"YulLiteral","src":"30803:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30788:3:6","nodeType":"YulIdentifier","src":"30788:3:6"},"nativeSrc":"30788:17:6","nodeType":"YulFunctionCall","src":"30788:17:6"},{"arguments":[{"name":"tail","nativeSrc":"30811:4:6","nodeType":"YulIdentifier","src":"30811:4:6"},{"name":"headStart","nativeSrc":"30817:9:6","nodeType":"YulIdentifier","src":"30817:9:6"}],"functionName":{"name":"sub","nativeSrc":"30807:3:6","nodeType":"YulIdentifier","src":"30807:3:6"},"nativeSrc":"30807:20:6","nodeType":"YulFunctionCall","src":"30807:20:6"}],"functionName":{"name":"mstore","nativeSrc":"30781:6:6","nodeType":"YulIdentifier","src":"30781:6:6"},"nativeSrc":"30781:47:6","nodeType":"YulFunctionCall","src":"30781:47:6"},"nativeSrc":"30781:47:6","nodeType":"YulExpressionStatement","src":"30781:47:6"},{"nativeSrc":"30837:139:6","nodeType":"YulAssignment","src":"30837:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"30971:4:6","nodeType":"YulIdentifier","src":"30971:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20_to_t_string_memory_ptr_fromStack","nativeSrc":"30845:124:6","nodeType":"YulIdentifier","src":"30845:124:6"},"nativeSrc":"30845:131:6","nodeType":"YulFunctionCall","src":"30845:131:6"},"variableNames":[{"name":"tail","nativeSrc":"30837:4:6","nodeType":"YulIdentifier","src":"30837:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"30564:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30715:9:6","nodeType":"YulTypedName","src":"30715:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"30730:4:6","nodeType":"YulTypedName","src":"30730:4:6","type":""}],"src":"30564:419:6"},{"body":{"nativeSrc":"31017:152:6","nodeType":"YulBlock","src":"31017:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"31034:1:6","nodeType":"YulLiteral","src":"31034:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"31037:77:6","nodeType":"YulLiteral","src":"31037:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"31027:6:6","nodeType":"YulIdentifier","src":"31027:6:6"},"nativeSrc":"31027:88:6","nodeType":"YulFunctionCall","src":"31027:88:6"},"nativeSrc":"31027:88:6","nodeType":"YulExpressionStatement","src":"31027:88:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"31131:1:6","nodeType":"YulLiteral","src":"31131:1:6","type":"","value":"4"},{"kind":"number","nativeSrc":"31134:4:6","nodeType":"YulLiteral","src":"31134:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"31124:6:6","nodeType":"YulIdentifier","src":"31124:6:6"},"nativeSrc":"31124:15:6","nodeType":"YulFunctionCall","src":"31124:15:6"},"nativeSrc":"31124:15:6","nodeType":"YulExpressionStatement","src":"31124:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"31155:1:6","nodeType":"YulLiteral","src":"31155:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"31158:4:6","nodeType":"YulLiteral","src":"31158:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"31148:6:6","nodeType":"YulIdentifier","src":"31148:6:6"},"nativeSrc":"31148:15:6","nodeType":"YulFunctionCall","src":"31148:15:6"},"nativeSrc":"31148:15:6","nodeType":"YulExpressionStatement","src":"31148:15:6"}]},"name":"panic_error_0x11","nativeSrc":"30989:180:6","nodeType":"YulFunctionDefinition","src":"30989:180:6"},{"body":{"nativeSrc":"31223:362:6","nodeType":"YulBlock","src":"31223:362:6","statements":[{"nativeSrc":"31233:25:6","nodeType":"YulAssignment","src":"31233:25:6","value":{"arguments":[{"name":"x","nativeSrc":"31256:1:6","nodeType":"YulIdentifier","src":"31256:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"31238:17:6","nodeType":"YulIdentifier","src":"31238:17:6"},"nativeSrc":"31238:20:6","nodeType":"YulFunctionCall","src":"31238:20:6"},"variableNames":[{"name":"x","nativeSrc":"31233:1:6","nodeType":"YulIdentifier","src":"31233:1:6"}]},{"nativeSrc":"31267:25:6","nodeType":"YulAssignment","src":"31267:25:6","value":{"arguments":[{"name":"y","nativeSrc":"31290:1:6","nodeType":"YulIdentifier","src":"31290:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"31272:17:6","nodeType":"YulIdentifier","src":"31272:17:6"},"nativeSrc":"31272:20:6","nodeType":"YulFunctionCall","src":"31272:20:6"},"variableNames":[{"name":"y","nativeSrc":"31267:1:6","nodeType":"YulIdentifier","src":"31267:1:6"}]},{"nativeSrc":"31301:28:6","nodeType":"YulVariableDeclaration","src":"31301:28:6","value":{"arguments":[{"name":"x","nativeSrc":"31324:1:6","nodeType":"YulIdentifier","src":"31324:1:6"},{"name":"y","nativeSrc":"31327:1:6","nodeType":"YulIdentifier","src":"31327:1:6"}],"functionName":{"name":"mul","nativeSrc":"31320:3:6","nodeType":"YulIdentifier","src":"31320:3:6"},"nativeSrc":"31320:9:6","nodeType":"YulFunctionCall","src":"31320:9:6"},"variables":[{"name":"product_raw","nativeSrc":"31305:11:6","nodeType":"YulTypedName","src":"31305:11:6","type":""}]},{"nativeSrc":"31338:41:6","nodeType":"YulAssignment","src":"31338:41:6","value":{"arguments":[{"name":"product_raw","nativeSrc":"31367:11:6","nodeType":"YulIdentifier","src":"31367:11:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"31349:17:6","nodeType":"YulIdentifier","src":"31349:17:6"},"nativeSrc":"31349:30:6","nodeType":"YulFunctionCall","src":"31349:30:6"},"variableNames":[{"name":"product","nativeSrc":"31338:7:6","nodeType":"YulIdentifier","src":"31338:7:6"}]},{"body":{"nativeSrc":"31556:22:6","nodeType":"YulBlock","src":"31556:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"31558:16:6","nodeType":"YulIdentifier","src":"31558:16:6"},"nativeSrc":"31558:18:6","nodeType":"YulFunctionCall","src":"31558:18:6"},"nativeSrc":"31558:18:6","nodeType":"YulExpressionStatement","src":"31558:18:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"31489:1:6","nodeType":"YulIdentifier","src":"31489:1:6"}],"functionName":{"name":"iszero","nativeSrc":"31482:6:6","nodeType":"YulIdentifier","src":"31482:6:6"},"nativeSrc":"31482:9:6","nodeType":"YulFunctionCall","src":"31482:9:6"},{"arguments":[{"name":"y","nativeSrc":"31512:1:6","nodeType":"YulIdentifier","src":"31512:1:6"},{"arguments":[{"name":"product","nativeSrc":"31519:7:6","nodeType":"YulIdentifier","src":"31519:7:6"},{"name":"x","nativeSrc":"31528:1:6","nodeType":"YulIdentifier","src":"31528:1:6"}],"functionName":{"name":"div","nativeSrc":"31515:3:6","nodeType":"YulIdentifier","src":"31515:3:6"},"nativeSrc":"31515:15:6","nodeType":"YulFunctionCall","src":"31515:15:6"}],"functionName":{"name":"eq","nativeSrc":"31509:2:6","nodeType":"YulIdentifier","src":"31509:2:6"},"nativeSrc":"31509:22:6","nodeType":"YulFunctionCall","src":"31509:22:6"}],"functionName":{"name":"or","nativeSrc":"31462:2:6","nodeType":"YulIdentifier","src":"31462:2:6"},"nativeSrc":"31462:83:6","nodeType":"YulFunctionCall","src":"31462:83:6"}],"functionName":{"name":"iszero","nativeSrc":"31442:6:6","nodeType":"YulIdentifier","src":"31442:6:6"},"nativeSrc":"31442:113:6","nodeType":"YulFunctionCall","src":"31442:113:6"},"nativeSrc":"31439:139:6","nodeType":"YulIf","src":"31439:139:6"}]},"name":"checked_mul_t_uint256","nativeSrc":"31175:410:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"31206:1:6","nodeType":"YulTypedName","src":"31206:1:6","type":""},{"name":"y","nativeSrc":"31209:1:6","nodeType":"YulTypedName","src":"31209:1:6","type":""}],"returnVariables":[{"name":"product","nativeSrc":"31215:7:6","nodeType":"YulTypedName","src":"31215:7:6","type":""}],"src":"31175:410:6"},{"body":{"nativeSrc":"31619:152:6","nodeType":"YulBlock","src":"31619:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"31636:1:6","nodeType":"YulLiteral","src":"31636:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"31639:77:6","nodeType":"YulLiteral","src":"31639:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"31629:6:6","nodeType":"YulIdentifier","src":"31629:6:6"},"nativeSrc":"31629:88:6","nodeType":"YulFunctionCall","src":"31629:88:6"},"nativeSrc":"31629:88:6","nodeType":"YulExpressionStatement","src":"31629:88:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"31733:1:6","nodeType":"YulLiteral","src":"31733:1:6","type":"","value":"4"},{"kind":"number","nativeSrc":"31736:4:6","nodeType":"YulLiteral","src":"31736:4:6","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"31726:6:6","nodeType":"YulIdentifier","src":"31726:6:6"},"nativeSrc":"31726:15:6","nodeType":"YulFunctionCall","src":"31726:15:6"},"nativeSrc":"31726:15:6","nodeType":"YulExpressionStatement","src":"31726:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"31757:1:6","nodeType":"YulLiteral","src":"31757:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"31760:4:6","nodeType":"YulLiteral","src":"31760:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"31750:6:6","nodeType":"YulIdentifier","src":"31750:6:6"},"nativeSrc":"31750:15:6","nodeType":"YulFunctionCall","src":"31750:15:6"},"nativeSrc":"31750:15:6","nodeType":"YulExpressionStatement","src":"31750:15:6"}]},"name":"panic_error_0x12","nativeSrc":"31591:180:6","nodeType":"YulFunctionDefinition","src":"31591:180:6"},{"body":{"nativeSrc":"31819:143:6","nodeType":"YulBlock","src":"31819:143:6","statements":[{"nativeSrc":"31829:25:6","nodeType":"YulAssignment","src":"31829:25:6","value":{"arguments":[{"name":"x","nativeSrc":"31852:1:6","nodeType":"YulIdentifier","src":"31852:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"31834:17:6","nodeType":"YulIdentifier","src":"31834:17:6"},"nativeSrc":"31834:20:6","nodeType":"YulFunctionCall","src":"31834:20:6"},"variableNames":[{"name":"x","nativeSrc":"31829:1:6","nodeType":"YulIdentifier","src":"31829:1:6"}]},{"nativeSrc":"31863:25:6","nodeType":"YulAssignment","src":"31863:25:6","value":{"arguments":[{"name":"y","nativeSrc":"31886:1:6","nodeType":"YulIdentifier","src":"31886:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"31868:17:6","nodeType":"YulIdentifier","src":"31868:17:6"},"nativeSrc":"31868:20:6","nodeType":"YulFunctionCall","src":"31868:20:6"},"variableNames":[{"name":"y","nativeSrc":"31863:1:6","nodeType":"YulIdentifier","src":"31863:1:6"}]},{"body":{"nativeSrc":"31910:22:6","nodeType":"YulBlock","src":"31910:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"31912:16:6","nodeType":"YulIdentifier","src":"31912:16:6"},"nativeSrc":"31912:18:6","nodeType":"YulFunctionCall","src":"31912:18:6"},"nativeSrc":"31912:18:6","nodeType":"YulExpressionStatement","src":"31912:18:6"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"31907:1:6","nodeType":"YulIdentifier","src":"31907:1:6"}],"functionName":{"name":"iszero","nativeSrc":"31900:6:6","nodeType":"YulIdentifier","src":"31900:6:6"},"nativeSrc":"31900:9:6","nodeType":"YulFunctionCall","src":"31900:9:6"},"nativeSrc":"31897:35:6","nodeType":"YulIf","src":"31897:35:6"},{"nativeSrc":"31942:14:6","nodeType":"YulAssignment","src":"31942:14:6","value":{"arguments":[{"name":"x","nativeSrc":"31951:1:6","nodeType":"YulIdentifier","src":"31951:1:6"},{"name":"y","nativeSrc":"31954:1:6","nodeType":"YulIdentifier","src":"31954:1:6"}],"functionName":{"name":"div","nativeSrc":"31947:3:6","nodeType":"YulIdentifier","src":"31947:3:6"},"nativeSrc":"31947:9:6","nodeType":"YulFunctionCall","src":"31947:9:6"},"variableNames":[{"name":"r","nativeSrc":"31942:1:6","nodeType":"YulIdentifier","src":"31942:1:6"}]}]},"name":"checked_div_t_uint256","nativeSrc":"31777:185:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"31808:1:6","nodeType":"YulTypedName","src":"31808:1:6","type":""},{"name":"y","nativeSrc":"31811:1:6","nodeType":"YulTypedName","src":"31811:1:6","type":""}],"returnVariables":[{"name":"r","nativeSrc":"31817:1:6","nodeType":"YulTypedName","src":"31817:1:6","type":""}],"src":"31777:185:6"},{"body":{"nativeSrc":"32012:147:6","nodeType":"YulBlock","src":"32012:147:6","statements":[{"nativeSrc":"32022:25:6","nodeType":"YulAssignment","src":"32022:25:6","value":{"arguments":[{"name":"x","nativeSrc":"32045:1:6","nodeType":"YulIdentifier","src":"32045:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"32027:17:6","nodeType":"YulIdentifier","src":"32027:17:6"},"nativeSrc":"32027:20:6","nodeType":"YulFunctionCall","src":"32027:20:6"},"variableNames":[{"name":"x","nativeSrc":"32022:1:6","nodeType":"YulIdentifier","src":"32022:1:6"}]},{"nativeSrc":"32056:25:6","nodeType":"YulAssignment","src":"32056:25:6","value":{"arguments":[{"name":"y","nativeSrc":"32079:1:6","nodeType":"YulIdentifier","src":"32079:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"32061:17:6","nodeType":"YulIdentifier","src":"32061:17:6"},"nativeSrc":"32061:20:6","nodeType":"YulFunctionCall","src":"32061:20:6"},"variableNames":[{"name":"y","nativeSrc":"32056:1:6","nodeType":"YulIdentifier","src":"32056:1:6"}]},{"nativeSrc":"32090:16:6","nodeType":"YulAssignment","src":"32090:16:6","value":{"arguments":[{"name":"x","nativeSrc":"32101:1:6","nodeType":"YulIdentifier","src":"32101:1:6"},{"name":"y","nativeSrc":"32104:1:6","nodeType":"YulIdentifier","src":"32104:1:6"}],"functionName":{"name":"add","nativeSrc":"32097:3:6","nodeType":"YulIdentifier","src":"32097:3:6"},"nativeSrc":"32097:9:6","nodeType":"YulFunctionCall","src":"32097:9:6"},"variableNames":[{"name":"sum","nativeSrc":"32090:3:6","nodeType":"YulIdentifier","src":"32090:3:6"}]},{"body":{"nativeSrc":"32130:22:6","nodeType":"YulBlock","src":"32130:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"32132:16:6","nodeType":"YulIdentifier","src":"32132:16:6"},"nativeSrc":"32132:18:6","nodeType":"YulFunctionCall","src":"32132:18:6"},"nativeSrc":"32132:18:6","nodeType":"YulExpressionStatement","src":"32132:18:6"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"32122:1:6","nodeType":"YulIdentifier","src":"32122:1:6"},{"name":"sum","nativeSrc":"32125:3:6","nodeType":"YulIdentifier","src":"32125:3:6"}],"functionName":{"name":"gt","nativeSrc":"32119:2:6","nodeType":"YulIdentifier","src":"32119:2:6"},"nativeSrc":"32119:10:6","nodeType":"YulFunctionCall","src":"32119:10:6"},"nativeSrc":"32116:36:6","nodeType":"YulIf","src":"32116:36:6"}]},"name":"checked_add_t_uint256","nativeSrc":"31968:191:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"31999:1:6","nodeType":"YulTypedName","src":"31999:1:6","type":""},{"name":"y","nativeSrc":"32002:1:6","nodeType":"YulTypedName","src":"32002:1:6","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"32008:3:6","nodeType":"YulTypedName","src":"32008:3:6","type":""}],"src":"31968:191:6"},{"body":{"nativeSrc":"32291:206:6","nodeType":"YulBlock","src":"32291:206:6","statements":[{"nativeSrc":"32301:26:6","nodeType":"YulAssignment","src":"32301:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"32313:9:6","nodeType":"YulIdentifier","src":"32313:9:6"},{"kind":"number","nativeSrc":"32324:2:6","nodeType":"YulLiteral","src":"32324:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"32309:3:6","nodeType":"YulIdentifier","src":"32309:3:6"},"nativeSrc":"32309:18:6","nodeType":"YulFunctionCall","src":"32309:18:6"},"variableNames":[{"name":"tail","nativeSrc":"32301:4:6","nodeType":"YulIdentifier","src":"32301:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"32381:6:6","nodeType":"YulIdentifier","src":"32381:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"32394:9:6","nodeType":"YulIdentifier","src":"32394:9:6"},{"kind":"number","nativeSrc":"32405:1:6","nodeType":"YulLiteral","src":"32405:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32390:3:6","nodeType":"YulIdentifier","src":"32390:3:6"},"nativeSrc":"32390:17:6","nodeType":"YulFunctionCall","src":"32390:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"32337:43:6","nodeType":"YulIdentifier","src":"32337:43:6"},"nativeSrc":"32337:71:6","nodeType":"YulFunctionCall","src":"32337:71:6"},"nativeSrc":"32337:71:6","nodeType":"YulExpressionStatement","src":"32337:71:6"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"32462:6:6","nodeType":"YulIdentifier","src":"32462:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"32475:9:6","nodeType":"YulIdentifier","src":"32475:9:6"},{"kind":"number","nativeSrc":"32486:2:6","nodeType":"YulLiteral","src":"32486:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32471:3:6","nodeType":"YulIdentifier","src":"32471:3:6"},"nativeSrc":"32471:18:6","nodeType":"YulFunctionCall","src":"32471:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"32418:43:6","nodeType":"YulIdentifier","src":"32418:43:6"},"nativeSrc":"32418:72:6","nodeType":"YulFunctionCall","src":"32418:72:6"},"nativeSrc":"32418:72:6","nodeType":"YulExpressionStatement","src":"32418:72:6"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"32165:332:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32255:9:6","nodeType":"YulTypedName","src":"32255:9:6","type":""},{"name":"value1","nativeSrc":"32267:6:6","nodeType":"YulTypedName","src":"32267:6:6","type":""},{"name":"value0","nativeSrc":"32275:6:6","nodeType":"YulTypedName","src":"32275:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"32286:4:6","nodeType":"YulTypedName","src":"32286:4:6","type":""}],"src":"32165:332:6"},{"body":{"nativeSrc":"32543:76:6","nodeType":"YulBlock","src":"32543:76:6","statements":[{"body":{"nativeSrc":"32597:16:6","nodeType":"YulBlock","src":"32597:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"32606:1:6","nodeType":"YulLiteral","src":"32606:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"32609:1:6","nodeType":"YulLiteral","src":"32609:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"32599:6:6","nodeType":"YulIdentifier","src":"32599:6:6"},"nativeSrc":"32599:12:6","nodeType":"YulFunctionCall","src":"32599:12:6"},"nativeSrc":"32599:12:6","nodeType":"YulExpressionStatement","src":"32599:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"32566:5:6","nodeType":"YulIdentifier","src":"32566:5:6"},{"arguments":[{"name":"value","nativeSrc":"32588:5:6","nodeType":"YulIdentifier","src":"32588:5:6"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"32573:14:6","nodeType":"YulIdentifier","src":"32573:14:6"},"nativeSrc":"32573:21:6","nodeType":"YulFunctionCall","src":"32573:21:6"}],"functionName":{"name":"eq","nativeSrc":"32563:2:6","nodeType":"YulIdentifier","src":"32563:2:6"},"nativeSrc":"32563:32:6","nodeType":"YulFunctionCall","src":"32563:32:6"}],"functionName":{"name":"iszero","nativeSrc":"32556:6:6","nodeType":"YulIdentifier","src":"32556:6:6"},"nativeSrc":"32556:40:6","nodeType":"YulFunctionCall","src":"32556:40:6"},"nativeSrc":"32553:60:6","nodeType":"YulIf","src":"32553:60:6"}]},"name":"validator_revert_t_bool","nativeSrc":"32503:116:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"32536:5:6","nodeType":"YulTypedName","src":"32536:5:6","type":""}],"src":"32503:116:6"},{"body":{"nativeSrc":"32685:77:6","nodeType":"YulBlock","src":"32685:77:6","statements":[{"nativeSrc":"32695:22:6","nodeType":"YulAssignment","src":"32695:22:6","value":{"arguments":[{"name":"offset","nativeSrc":"32710:6:6","nodeType":"YulIdentifier","src":"32710:6:6"}],"functionName":{"name":"mload","nativeSrc":"32704:5:6","nodeType":"YulIdentifier","src":"32704:5:6"},"nativeSrc":"32704:13:6","nodeType":"YulFunctionCall","src":"32704:13:6"},"variableNames":[{"name":"value","nativeSrc":"32695:5:6","nodeType":"YulIdentifier","src":"32695:5:6"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"32750:5:6","nodeType":"YulIdentifier","src":"32750:5:6"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"32726:23:6","nodeType":"YulIdentifier","src":"32726:23:6"},"nativeSrc":"32726:30:6","nodeType":"YulFunctionCall","src":"32726:30:6"},"nativeSrc":"32726:30:6","nodeType":"YulExpressionStatement","src":"32726:30:6"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"32625:137:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"32663:6:6","nodeType":"YulTypedName","src":"32663:6:6","type":""},{"name":"end","nativeSrc":"32671:3:6","nodeType":"YulTypedName","src":"32671:3:6","type":""}],"returnVariables":[{"name":"value","nativeSrc":"32679:5:6","nodeType":"YulTypedName","src":"32679:5:6","type":""}],"src":"32625:137:6"},{"body":{"nativeSrc":"32842:271:6","nodeType":"YulBlock","src":"32842:271:6","statements":[{"body":{"nativeSrc":"32888:83:6","nodeType":"YulBlock","src":"32888:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"32890:77:6","nodeType":"YulIdentifier","src":"32890:77:6"},"nativeSrc":"32890:79:6","nodeType":"YulFunctionCall","src":"32890:79:6"},"nativeSrc":"32890:79:6","nodeType":"YulExpressionStatement","src":"32890:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"32863:7:6","nodeType":"YulIdentifier","src":"32863:7:6"},{"name":"headStart","nativeSrc":"32872:9:6","nodeType":"YulIdentifier","src":"32872:9:6"}],"functionName":{"name":"sub","nativeSrc":"32859:3:6","nodeType":"YulIdentifier","src":"32859:3:6"},"nativeSrc":"32859:23:6","nodeType":"YulFunctionCall","src":"32859:23:6"},{"kind":"number","nativeSrc":"32884:2:6","nodeType":"YulLiteral","src":"32884:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"32855:3:6","nodeType":"YulIdentifier","src":"32855:3:6"},"nativeSrc":"32855:32:6","nodeType":"YulFunctionCall","src":"32855:32:6"},"nativeSrc":"32852:119:6","nodeType":"YulIf","src":"32852:119:6"},{"nativeSrc":"32981:125:6","nodeType":"YulBlock","src":"32981:125:6","statements":[{"nativeSrc":"32996:15:6","nodeType":"YulVariableDeclaration","src":"32996:15:6","value":{"kind":"number","nativeSrc":"33010:1:6","nodeType":"YulLiteral","src":"33010:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"33000:6:6","nodeType":"YulTypedName","src":"33000:6:6","type":""}]},{"nativeSrc":"33025:71:6","nodeType":"YulAssignment","src":"33025:71:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"33068:9:6","nodeType":"YulIdentifier","src":"33068:9:6"},{"name":"offset","nativeSrc":"33079:6:6","nodeType":"YulIdentifier","src":"33079:6:6"}],"functionName":{"name":"add","nativeSrc":"33064:3:6","nodeType":"YulIdentifier","src":"33064:3:6"},"nativeSrc":"33064:22:6","nodeType":"YulFunctionCall","src":"33064:22:6"},{"name":"dataEnd","nativeSrc":"33088:7:6","nodeType":"YulIdentifier","src":"33088:7:6"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"33035:28:6","nodeType":"YulIdentifier","src":"33035:28:6"},"nativeSrc":"33035:61:6","nodeType":"YulFunctionCall","src":"33035:61:6"},"variableNames":[{"name":"value0","nativeSrc":"33025:6:6","nodeType":"YulIdentifier","src":"33025:6:6"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"32768:345:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32812:9:6","nodeType":"YulTypedName","src":"32812:9:6","type":""},{"name":"dataEnd","nativeSrc":"32823:7:6","nodeType":"YulTypedName","src":"32823:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"32835:6:6","nodeType":"YulTypedName","src":"32835:6:6","type":""}],"src":"32768:345:6"},{"body":{"nativeSrc":"33225:65:6","nodeType":"YulBlock","src":"33225:65:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"33247:6:6","nodeType":"YulIdentifier","src":"33247:6:6"},{"kind":"number","nativeSrc":"33255:1:6","nodeType":"YulLiteral","src":"33255:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33243:3:6","nodeType":"YulIdentifier","src":"33243:3:6"},"nativeSrc":"33243:14:6","nodeType":"YulFunctionCall","src":"33243:14:6"},{"hexValue":"546f6b656e207472616e73666572206661696c6564","kind":"string","nativeSrc":"33259:23:6","nodeType":"YulLiteral","src":"33259:23:6","type":"","value":"Token transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"33236:6:6","nodeType":"YulIdentifier","src":"33236:6:6"},"nativeSrc":"33236:47:6","nodeType":"YulFunctionCall","src":"33236:47:6"},"nativeSrc":"33236:47:6","nodeType":"YulExpressionStatement","src":"33236:47:6"}]},"name":"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","nativeSrc":"33119:171:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"33217:6:6","nodeType":"YulTypedName","src":"33217:6:6","type":""}],"src":"33119:171:6"},{"body":{"nativeSrc":"33442:220:6","nodeType":"YulBlock","src":"33442:220:6","statements":[{"nativeSrc":"33452:74:6","nodeType":"YulAssignment","src":"33452:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"33518:3:6","nodeType":"YulIdentifier","src":"33518:3:6"},{"kind":"number","nativeSrc":"33523:2:6","nodeType":"YulLiteral","src":"33523:2:6","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"33459:58:6","nodeType":"YulIdentifier","src":"33459:58:6"},"nativeSrc":"33459:67:6","nodeType":"YulFunctionCall","src":"33459:67:6"},"variableNames":[{"name":"pos","nativeSrc":"33452:3:6","nodeType":"YulIdentifier","src":"33452:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"33624:3:6","nodeType":"YulIdentifier","src":"33624:3:6"}],"functionName":{"name":"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","nativeSrc":"33535:88:6","nodeType":"YulIdentifier","src":"33535:88:6"},"nativeSrc":"33535:93:6","nodeType":"YulFunctionCall","src":"33535:93:6"},"nativeSrc":"33535:93:6","nodeType":"YulExpressionStatement","src":"33535:93:6"},{"nativeSrc":"33637:19:6","nodeType":"YulAssignment","src":"33637:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"33648:3:6","nodeType":"YulIdentifier","src":"33648:3:6"},{"kind":"number","nativeSrc":"33653:2:6","nodeType":"YulLiteral","src":"33653:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33644:3:6","nodeType":"YulIdentifier","src":"33644:3:6"},"nativeSrc":"33644:12:6","nodeType":"YulFunctionCall","src":"33644:12:6"},"variableNames":[{"name":"end","nativeSrc":"33637:3:6","nodeType":"YulIdentifier","src":"33637:3:6"}]}]},"name":"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack","nativeSrc":"33296:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"33430:3:6","nodeType":"YulTypedName","src":"33430:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"33438:3:6","nodeType":"YulTypedName","src":"33438:3:6","type":""}],"src":"33296:366:6"},{"body":{"nativeSrc":"33839:248:6","nodeType":"YulBlock","src":"33839:248:6","statements":[{"nativeSrc":"33849:26:6","nodeType":"YulAssignment","src":"33849:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"33861:9:6","nodeType":"YulIdentifier","src":"33861:9:6"},{"kind":"number","nativeSrc":"33872:2:6","nodeType":"YulLiteral","src":"33872:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33857:3:6","nodeType":"YulIdentifier","src":"33857:3:6"},"nativeSrc":"33857:18:6","nodeType":"YulFunctionCall","src":"33857:18:6"},"variableNames":[{"name":"tail","nativeSrc":"33849:4:6","nodeType":"YulIdentifier","src":"33849:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"33896:9:6","nodeType":"YulIdentifier","src":"33896:9:6"},{"kind":"number","nativeSrc":"33907:1:6","nodeType":"YulLiteral","src":"33907:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33892:3:6","nodeType":"YulIdentifier","src":"33892:3:6"},"nativeSrc":"33892:17:6","nodeType":"YulFunctionCall","src":"33892:17:6"},{"arguments":[{"name":"tail","nativeSrc":"33915:4:6","nodeType":"YulIdentifier","src":"33915:4:6"},{"name":"headStart","nativeSrc":"33921:9:6","nodeType":"YulIdentifier","src":"33921:9:6"}],"functionName":{"name":"sub","nativeSrc":"33911:3:6","nodeType":"YulIdentifier","src":"33911:3:6"},"nativeSrc":"33911:20:6","nodeType":"YulFunctionCall","src":"33911:20:6"}],"functionName":{"name":"mstore","nativeSrc":"33885:6:6","nodeType":"YulIdentifier","src":"33885:6:6"},"nativeSrc":"33885:47:6","nodeType":"YulFunctionCall","src":"33885:47:6"},"nativeSrc":"33885:47:6","nodeType":"YulExpressionStatement","src":"33885:47:6"},{"nativeSrc":"33941:139:6","nodeType":"YulAssignment","src":"33941:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"34075:4:6","nodeType":"YulIdentifier","src":"34075:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack","nativeSrc":"33949:124:6","nodeType":"YulIdentifier","src":"33949:124:6"},"nativeSrc":"33949:131:6","nodeType":"YulFunctionCall","src":"33949:131:6"},"variableNames":[{"name":"tail","nativeSrc":"33941:4:6","nodeType":"YulIdentifier","src":"33941:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"33668:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"33819:9:6","nodeType":"YulTypedName","src":"33819:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"33834:4:6","nodeType":"YulTypedName","src":"33834:4:6","type":""}],"src":"33668:419:6"},{"body":{"nativeSrc":"34136:190:6","nodeType":"YulBlock","src":"34136:190:6","statements":[{"nativeSrc":"34146:33:6","nodeType":"YulAssignment","src":"34146:33:6","value":{"arguments":[{"name":"value","nativeSrc":"34173:5:6","nodeType":"YulIdentifier","src":"34173:5:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"34155:17:6","nodeType":"YulIdentifier","src":"34155:17:6"},"nativeSrc":"34155:24:6","nodeType":"YulFunctionCall","src":"34155:24:6"},"variableNames":[{"name":"value","nativeSrc":"34146:5:6","nodeType":"YulIdentifier","src":"34146:5:6"}]},{"body":{"nativeSrc":"34269:22:6","nodeType":"YulBlock","src":"34269:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"34271:16:6","nodeType":"YulIdentifier","src":"34271:16:6"},"nativeSrc":"34271:18:6","nodeType":"YulFunctionCall","src":"34271:18:6"},"nativeSrc":"34271:18:6","nodeType":"YulExpressionStatement","src":"34271:18:6"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"34194:5:6","nodeType":"YulIdentifier","src":"34194:5:6"},{"kind":"number","nativeSrc":"34201:66:6","nodeType":"YulLiteral","src":"34201:66:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"34191:2:6","nodeType":"YulIdentifier","src":"34191:2:6"},"nativeSrc":"34191:77:6","nodeType":"YulFunctionCall","src":"34191:77:6"},"nativeSrc":"34188:103:6","nodeType":"YulIf","src":"34188:103:6"},{"nativeSrc":"34300:20:6","nodeType":"YulAssignment","src":"34300:20:6","value":{"arguments":[{"name":"value","nativeSrc":"34311:5:6","nodeType":"YulIdentifier","src":"34311:5:6"},{"kind":"number","nativeSrc":"34318:1:6","nodeType":"YulLiteral","src":"34318:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"34307:3:6","nodeType":"YulIdentifier","src":"34307:3:6"},"nativeSrc":"34307:13:6","nodeType":"YulFunctionCall","src":"34307:13:6"},"variableNames":[{"name":"ret","nativeSrc":"34300:3:6","nodeType":"YulIdentifier","src":"34300:3:6"}]}]},"name":"increment_t_uint256","nativeSrc":"34093:233:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34122:5:6","nodeType":"YulTypedName","src":"34122:5:6","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"34132:3:6","nodeType":"YulTypedName","src":"34132:3:6","type":""}],"src":"34093:233:6"},{"body":{"nativeSrc":"34386:87:6","nodeType":"YulBlock","src":"34386:87:6","statements":[{"nativeSrc":"34396:11:6","nodeType":"YulAssignment","src":"34396:11:6","value":{"name":"ptr","nativeSrc":"34404:3:6","nodeType":"YulIdentifier","src":"34404:3:6"},"variableNames":[{"name":"data","nativeSrc":"34396:4:6","nodeType":"YulIdentifier","src":"34396:4:6"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"34424:1:6","nodeType":"YulLiteral","src":"34424:1:6","type":"","value":"0"},{"name":"ptr","nativeSrc":"34427:3:6","nodeType":"YulIdentifier","src":"34427:3:6"}],"functionName":{"name":"mstore","nativeSrc":"34417:6:6","nodeType":"YulIdentifier","src":"34417:6:6"},"nativeSrc":"34417:14:6","nodeType":"YulFunctionCall","src":"34417:14:6"},"nativeSrc":"34417:14:6","nodeType":"YulExpressionStatement","src":"34417:14:6"},{"nativeSrc":"34440:26:6","nodeType":"YulAssignment","src":"34440:26:6","value":{"arguments":[{"kind":"number","nativeSrc":"34458:1:6","nodeType":"YulLiteral","src":"34458:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"34461:4:6","nodeType":"YulLiteral","src":"34461:4:6","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"34448:9:6","nodeType":"YulIdentifier","src":"34448:9:6"},"nativeSrc":"34448:18:6","nodeType":"YulFunctionCall","src":"34448:18:6"},"variableNames":[{"name":"data","nativeSrc":"34440:4:6","nodeType":"YulIdentifier","src":"34440:4:6"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"34332:141:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"34373:3:6","nodeType":"YulTypedName","src":"34373:3:6","type":""}],"returnVariables":[{"name":"data","nativeSrc":"34381:4:6","nodeType":"YulTypedName","src":"34381:4:6","type":""}],"src":"34332:141:6"},{"body":{"nativeSrc":"34523:49:6","nodeType":"YulBlock","src":"34523:49:6","statements":[{"nativeSrc":"34533:33:6","nodeType":"YulAssignment","src":"34533:33:6","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"34551:5:6","nodeType":"YulIdentifier","src":"34551:5:6"},{"kind":"number","nativeSrc":"34558:2:6","nodeType":"YulLiteral","src":"34558:2:6","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"34547:3:6","nodeType":"YulIdentifier","src":"34547:3:6"},"nativeSrc":"34547:14:6","nodeType":"YulFunctionCall","src":"34547:14:6"},{"kind":"number","nativeSrc":"34563:2:6","nodeType":"YulLiteral","src":"34563:2:6","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"34543:3:6","nodeType":"YulIdentifier","src":"34543:3:6"},"nativeSrc":"34543:23:6","nodeType":"YulFunctionCall","src":"34543:23:6"},"variableNames":[{"name":"result","nativeSrc":"34533:6:6","nodeType":"YulIdentifier","src":"34533:6:6"}]}]},"name":"divide_by_32_ceil","nativeSrc":"34479:93:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34506:5:6","nodeType":"YulTypedName","src":"34506:5:6","type":""}],"returnVariables":[{"name":"result","nativeSrc":"34516:6:6","nodeType":"YulTypedName","src":"34516:6:6","type":""}],"src":"34479:93:6"},{"body":{"nativeSrc":"34631:54:6","nodeType":"YulBlock","src":"34631:54:6","statements":[{"nativeSrc":"34641:37:6","nodeType":"YulAssignment","src":"34641:37:6","value":{"arguments":[{"name":"bits","nativeSrc":"34666:4:6","nodeType":"YulIdentifier","src":"34666:4:6"},{"name":"value","nativeSrc":"34672:5:6","nodeType":"YulIdentifier","src":"34672:5:6"}],"functionName":{"name":"shl","nativeSrc":"34662:3:6","nodeType":"YulIdentifier","src":"34662:3:6"},"nativeSrc":"34662:16:6","nodeType":"YulFunctionCall","src":"34662:16:6"},"variableNames":[{"name":"newValue","nativeSrc":"34641:8:6","nodeType":"YulIdentifier","src":"34641:8:6"}]}]},"name":"shift_left_dynamic","nativeSrc":"34578:107:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"34606:4:6","nodeType":"YulTypedName","src":"34606:4:6","type":""},{"name":"value","nativeSrc":"34612:5:6","nodeType":"YulTypedName","src":"34612:5:6","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"34622:8:6","nodeType":"YulTypedName","src":"34622:8:6","type":""}],"src":"34578:107:6"},{"body":{"nativeSrc":"34767:317:6","nodeType":"YulBlock","src":"34767:317:6","statements":[{"nativeSrc":"34777:35:6","nodeType":"YulVariableDeclaration","src":"34777:35:6","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"34798:10:6","nodeType":"YulIdentifier","src":"34798:10:6"},{"kind":"number","nativeSrc":"34810:1:6","nodeType":"YulLiteral","src":"34810:1:6","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"34794:3:6","nodeType":"YulIdentifier","src":"34794:3:6"},"nativeSrc":"34794:18:6","nodeType":"YulFunctionCall","src":"34794:18:6"},"variables":[{"name":"shiftBits","nativeSrc":"34781:9:6","nodeType":"YulTypedName","src":"34781:9:6","type":""}]},{"nativeSrc":"34821:109:6","nodeType":"YulVariableDeclaration","src":"34821:109:6","value":{"arguments":[{"name":"shiftBits","nativeSrc":"34852:9:6","nodeType":"YulIdentifier","src":"34852:9:6"},{"kind":"number","nativeSrc":"34863:66:6","nodeType":"YulLiteral","src":"34863:66:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"34833:18:6","nodeType":"YulIdentifier","src":"34833:18:6"},"nativeSrc":"34833:97:6","nodeType":"YulFunctionCall","src":"34833:97:6"},"variables":[{"name":"mask","nativeSrc":"34825:4:6","nodeType":"YulTypedName","src":"34825:4:6","type":""}]},{"nativeSrc":"34939:51:6","nodeType":"YulAssignment","src":"34939:51:6","value":{"arguments":[{"name":"shiftBits","nativeSrc":"34970:9:6","nodeType":"YulIdentifier","src":"34970:9:6"},{"name":"toInsert","nativeSrc":"34981:8:6","nodeType":"YulIdentifier","src":"34981:8:6"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"34951:18:6","nodeType":"YulIdentifier","src":"34951:18:6"},"nativeSrc":"34951:39:6","nodeType":"YulFunctionCall","src":"34951:39:6"},"variableNames":[{"name":"toInsert","nativeSrc":"34939:8:6","nodeType":"YulIdentifier","src":"34939:8:6"}]},{"nativeSrc":"34999:30:6","nodeType":"YulAssignment","src":"34999:30:6","value":{"arguments":[{"name":"value","nativeSrc":"35012:5:6","nodeType":"YulIdentifier","src":"35012:5:6"},{"arguments":[{"name":"mask","nativeSrc":"35023:4:6","nodeType":"YulIdentifier","src":"35023:4:6"}],"functionName":{"name":"not","nativeSrc":"35019:3:6","nodeType":"YulIdentifier","src":"35019:3:6"},"nativeSrc":"35019:9:6","nodeType":"YulFunctionCall","src":"35019:9:6"}],"functionName":{"name":"and","nativeSrc":"35008:3:6","nodeType":"YulIdentifier","src":"35008:3:6"},"nativeSrc":"35008:21:6","nodeType":"YulFunctionCall","src":"35008:21:6"},"variableNames":[{"name":"value","nativeSrc":"34999:5:6","nodeType":"YulIdentifier","src":"34999:5:6"}]},{"nativeSrc":"35038:40:6","nodeType":"YulAssignment","src":"35038:40:6","value":{"arguments":[{"name":"value","nativeSrc":"35051:5:6","nodeType":"YulIdentifier","src":"35051:5:6"},{"arguments":[{"name":"toInsert","nativeSrc":"35062:8:6","nodeType":"YulIdentifier","src":"35062:8:6"},{"name":"mask","nativeSrc":"35072:4:6","nodeType":"YulIdentifier","src":"35072:4:6"}],"functionName":{"name":"and","nativeSrc":"35058:3:6","nodeType":"YulIdentifier","src":"35058:3:6"},"nativeSrc":"35058:19:6","nodeType":"YulFunctionCall","src":"35058:19:6"}],"functionName":{"name":"or","nativeSrc":"35048:2:6","nodeType":"YulIdentifier","src":"35048:2:6"},"nativeSrc":"35048:30:6","nodeType":"YulFunctionCall","src":"35048:30:6"},"variableNames":[{"name":"result","nativeSrc":"35038:6:6","nodeType":"YulIdentifier","src":"35038:6:6"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"34691:393:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34728:5:6","nodeType":"YulTypedName","src":"34728:5:6","type":""},{"name":"shiftBytes","nativeSrc":"34735:10:6","nodeType":"YulTypedName","src":"34735:10:6","type":""},{"name":"toInsert","nativeSrc":"34747:8:6","nodeType":"YulTypedName","src":"34747:8:6","type":""}],"returnVariables":[{"name":"result","nativeSrc":"34760:6:6","nodeType":"YulTypedName","src":"34760:6:6","type":""}],"src":"34691:393:6"},{"body":{"nativeSrc":"35150:82:6","nodeType":"YulBlock","src":"35150:82:6","statements":[{"nativeSrc":"35160:66:6","nodeType":"YulAssignment","src":"35160:66:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"35218:5:6","nodeType":"YulIdentifier","src":"35218:5:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"35200:17:6","nodeType":"YulIdentifier","src":"35200:17:6"},"nativeSrc":"35200:24:6","nodeType":"YulFunctionCall","src":"35200:24:6"}],"functionName":{"name":"identity","nativeSrc":"35191:8:6","nodeType":"YulIdentifier","src":"35191:8:6"},"nativeSrc":"35191:34:6","nodeType":"YulFunctionCall","src":"35191:34:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"35173:17:6","nodeType":"YulIdentifier","src":"35173:17:6"},"nativeSrc":"35173:53:6","nodeType":"YulFunctionCall","src":"35173:53:6"},"variableNames":[{"name":"converted","nativeSrc":"35160:9:6","nodeType":"YulIdentifier","src":"35160:9:6"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"35090:142:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"35130:5:6","nodeType":"YulTypedName","src":"35130:5:6","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"35140:9:6","nodeType":"YulTypedName","src":"35140:9:6","type":""}],"src":"35090:142:6"},{"body":{"nativeSrc":"35285:28:6","nodeType":"YulBlock","src":"35285:28:6","statements":[{"nativeSrc":"35295:12:6","nodeType":"YulAssignment","src":"35295:12:6","value":{"name":"value","nativeSrc":"35302:5:6","nodeType":"YulIdentifier","src":"35302:5:6"},"variableNames":[{"name":"ret","nativeSrc":"35295:3:6","nodeType":"YulIdentifier","src":"35295:3:6"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"35238:75:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"35271:5:6","nodeType":"YulTypedName","src":"35271:5:6","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"35281:3:6","nodeType":"YulTypedName","src":"35281:3:6","type":""}],"src":"35238:75:6"},{"body":{"nativeSrc":"35395:193:6","nodeType":"YulBlock","src":"35395:193:6","statements":[{"nativeSrc":"35405:63:6","nodeType":"YulVariableDeclaration","src":"35405:63:6","value":{"arguments":[{"name":"value_0","nativeSrc":"35460:7:6","nodeType":"YulIdentifier","src":"35460:7:6"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"35429:30:6","nodeType":"YulIdentifier","src":"35429:30:6"},"nativeSrc":"35429:39:6","nodeType":"YulFunctionCall","src":"35429:39:6"},"variables":[{"name":"convertedValue_0","nativeSrc":"35409:16:6","nodeType":"YulTypedName","src":"35409:16:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"35484:4:6","nodeType":"YulIdentifier","src":"35484:4:6"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"35524:4:6","nodeType":"YulIdentifier","src":"35524:4:6"}],"functionName":{"name":"sload","nativeSrc":"35518:5:6","nodeType":"YulIdentifier","src":"35518:5:6"},"nativeSrc":"35518:11:6","nodeType":"YulFunctionCall","src":"35518:11:6"},{"name":"offset","nativeSrc":"35531:6:6","nodeType":"YulIdentifier","src":"35531:6:6"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"35563:16:6","nodeType":"YulIdentifier","src":"35563:16:6"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"35539:23:6","nodeType":"YulIdentifier","src":"35539:23:6"},"nativeSrc":"35539:41:6","nodeType":"YulFunctionCall","src":"35539:41:6"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"35490:27:6","nodeType":"YulIdentifier","src":"35490:27:6"},"nativeSrc":"35490:91:6","nodeType":"YulFunctionCall","src":"35490:91:6"}],"functionName":{"name":"sstore","nativeSrc":"35477:6:6","nodeType":"YulIdentifier","src":"35477:6:6"},"nativeSrc":"35477:105:6","nodeType":"YulFunctionCall","src":"35477:105:6"},"nativeSrc":"35477:105:6","nodeType":"YulExpressionStatement","src":"35477:105:6"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"35319:269:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"35372:4:6","nodeType":"YulTypedName","src":"35372:4:6","type":""},{"name":"offset","nativeSrc":"35378:6:6","nodeType":"YulTypedName","src":"35378:6:6","type":""},{"name":"value_0","nativeSrc":"35386:7:6","nodeType":"YulTypedName","src":"35386:7:6","type":""}],"src":"35319:269:6"},{"body":{"nativeSrc":"35643:24:6","nodeType":"YulBlock","src":"35643:24:6","statements":[{"nativeSrc":"35653:8:6","nodeType":"YulAssignment","src":"35653:8:6","value":{"kind":"number","nativeSrc":"35660:1:6","nodeType":"YulLiteral","src":"35660:1:6","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"35653:3:6","nodeType":"YulIdentifier","src":"35653:3:6"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"35594:73:6","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"35639:3:6","nodeType":"YulTypedName","src":"35639:3:6","type":""}],"src":"35594:73:6"},{"body":{"nativeSrc":"35726:136:6","nodeType":"YulBlock","src":"35726:136:6","statements":[{"nativeSrc":"35736:46:6","nodeType":"YulVariableDeclaration","src":"35736:46:6","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"35750:30:6","nodeType":"YulIdentifier","src":"35750:30:6"},"nativeSrc":"35750:32:6","nodeType":"YulFunctionCall","src":"35750:32:6"},"variables":[{"name":"zero_0","nativeSrc":"35740:6:6","nodeType":"YulTypedName","src":"35740:6:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"35835:4:6","nodeType":"YulIdentifier","src":"35835:4:6"},{"name":"offset","nativeSrc":"35841:6:6","nodeType":"YulIdentifier","src":"35841:6:6"},{"name":"zero_0","nativeSrc":"35849:6:6","nodeType":"YulIdentifier","src":"35849:6:6"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"35791:43:6","nodeType":"YulIdentifier","src":"35791:43:6"},"nativeSrc":"35791:65:6","nodeType":"YulFunctionCall","src":"35791:65:6"},"nativeSrc":"35791:65:6","nodeType":"YulExpressionStatement","src":"35791:65:6"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"35673:189:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"35712:4:6","nodeType":"YulTypedName","src":"35712:4:6","type":""},{"name":"offset","nativeSrc":"35718:6:6","nodeType":"YulTypedName","src":"35718:6:6","type":""}],"src":"35673:189:6"},{"body":{"nativeSrc":"35918:136:6","nodeType":"YulBlock","src":"35918:136:6","statements":[{"body":{"nativeSrc":"35985:63:6","nodeType":"YulBlock","src":"35985:63:6","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"36029:5:6","nodeType":"YulIdentifier","src":"36029:5:6"},{"kind":"number","nativeSrc":"36036:1:6","nodeType":"YulLiteral","src":"36036:1:6","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"35999:29:6","nodeType":"YulIdentifier","src":"35999:29:6"},"nativeSrc":"35999:39:6","nodeType":"YulFunctionCall","src":"35999:39:6"},"nativeSrc":"35999:39:6","nodeType":"YulExpressionStatement","src":"35999:39:6"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"35938:5:6","nodeType":"YulIdentifier","src":"35938:5:6"},{"name":"end","nativeSrc":"35945:3:6","nodeType":"YulIdentifier","src":"35945:3:6"}],"functionName":{"name":"lt","nativeSrc":"35935:2:6","nodeType":"YulIdentifier","src":"35935:2:6"},"nativeSrc":"35935:14:6","nodeType":"YulFunctionCall","src":"35935:14:6"},"nativeSrc":"35928:120:6","nodeType":"YulForLoop","post":{"nativeSrc":"35950:26:6","nodeType":"YulBlock","src":"35950:26:6","statements":[{"nativeSrc":"35952:22:6","nodeType":"YulAssignment","src":"35952:22:6","value":{"arguments":[{"name":"start","nativeSrc":"35965:5:6","nodeType":"YulIdentifier","src":"35965:5:6"},{"kind":"number","nativeSrc":"35972:1:6","nodeType":"YulLiteral","src":"35972:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"35961:3:6","nodeType":"YulIdentifier","src":"35961:3:6"},"nativeSrc":"35961:13:6","nodeType":"YulFunctionCall","src":"35961:13:6"},"variableNames":[{"name":"start","nativeSrc":"35952:5:6","nodeType":"YulIdentifier","src":"35952:5:6"}]}]},"pre":{"nativeSrc":"35932:2:6","nodeType":"YulBlock","src":"35932:2:6","statements":[]},"src":"35928:120:6"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"35868:186:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"35906:5:6","nodeType":"YulTypedName","src":"35906:5:6","type":""},{"name":"end","nativeSrc":"35913:3:6","nodeType":"YulTypedName","src":"35913:3:6","type":""}],"src":"35868:186:6"},{"body":{"nativeSrc":"36139:464:6","nodeType":"YulBlock","src":"36139:464:6","statements":[{"body":{"nativeSrc":"36165:431:6","nodeType":"YulBlock","src":"36165:431:6","statements":[{"nativeSrc":"36179:54:6","nodeType":"YulVariableDeclaration","src":"36179:54:6","value":{"arguments":[{"name":"array","nativeSrc":"36227:5:6","nodeType":"YulIdentifier","src":"36227:5:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"36195:31:6","nodeType":"YulIdentifier","src":"36195:31:6"},"nativeSrc":"36195:38:6","nodeType":"YulFunctionCall","src":"36195:38:6"},"variables":[{"name":"dataArea","nativeSrc":"36183:8:6","nodeType":"YulTypedName","src":"36183:8:6","type":""}]},{"nativeSrc":"36246:63:6","nodeType":"YulVariableDeclaration","src":"36246:63:6","value":{"arguments":[{"name":"dataArea","nativeSrc":"36269:8:6","nodeType":"YulIdentifier","src":"36269:8:6"},{"arguments":[{"name":"startIndex","nativeSrc":"36297:10:6","nodeType":"YulIdentifier","src":"36297:10:6"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"36279:17:6","nodeType":"YulIdentifier","src":"36279:17:6"},"nativeSrc":"36279:29:6","nodeType":"YulFunctionCall","src":"36279:29:6"}],"functionName":{"name":"add","nativeSrc":"36265:3:6","nodeType":"YulIdentifier","src":"36265:3:6"},"nativeSrc":"36265:44:6","nodeType":"YulFunctionCall","src":"36265:44:6"},"variables":[{"name":"deleteStart","nativeSrc":"36250:11:6","nodeType":"YulTypedName","src":"36250:11:6","type":""}]},{"body":{"nativeSrc":"36466:27:6","nodeType":"YulBlock","src":"36466:27:6","statements":[{"nativeSrc":"36468:23:6","nodeType":"YulAssignment","src":"36468:23:6","value":{"name":"dataArea","nativeSrc":"36483:8:6","nodeType":"YulIdentifier","src":"36483:8:6"},"variableNames":[{"name":"deleteStart","nativeSrc":"36468:11:6","nodeType":"YulIdentifier","src":"36468:11:6"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"36450:10:6","nodeType":"YulIdentifier","src":"36450:10:6"},{"kind":"number","nativeSrc":"36462:2:6","nodeType":"YulLiteral","src":"36462:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"36447:2:6","nodeType":"YulIdentifier","src":"36447:2:6"},"nativeSrc":"36447:18:6","nodeType":"YulFunctionCall","src":"36447:18:6"},"nativeSrc":"36444:49:6","nodeType":"YulIf","src":"36444:49:6"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"36535:11:6","nodeType":"YulIdentifier","src":"36535:11:6"},{"arguments":[{"name":"dataArea","nativeSrc":"36552:8:6","nodeType":"YulIdentifier","src":"36552:8:6"},{"arguments":[{"name":"len","nativeSrc":"36580:3:6","nodeType":"YulIdentifier","src":"36580:3:6"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"36562:17:6","nodeType":"YulIdentifier","src":"36562:17:6"},"nativeSrc":"36562:22:6","nodeType":"YulFunctionCall","src":"36562:22:6"}],"functionName":{"name":"add","nativeSrc":"36548:3:6","nodeType":"YulIdentifier","src":"36548:3:6"},"nativeSrc":"36548:37:6","nodeType":"YulFunctionCall","src":"36548:37:6"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"36506:28:6","nodeType":"YulIdentifier","src":"36506:28:6"},"nativeSrc":"36506:80:6","nodeType":"YulFunctionCall","src":"36506:80:6"},"nativeSrc":"36506:80:6","nodeType":"YulExpressionStatement","src":"36506:80:6"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"36156:3:6","nodeType":"YulIdentifier","src":"36156:3:6"},{"kind":"number","nativeSrc":"36161:2:6","nodeType":"YulLiteral","src":"36161:2:6","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"36153:2:6","nodeType":"YulIdentifier","src":"36153:2:6"},"nativeSrc":"36153:11:6","nodeType":"YulFunctionCall","src":"36153:11:6"},"nativeSrc":"36150:446:6","nodeType":"YulIf","src":"36150:446:6"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"36060:543:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"36115:5:6","nodeType":"YulTypedName","src":"36115:5:6","type":""},{"name":"len","nativeSrc":"36122:3:6","nodeType":"YulTypedName","src":"36122:3:6","type":""},{"name":"startIndex","nativeSrc":"36127:10:6","nodeType":"YulTypedName","src":"36127:10:6","type":""}],"src":"36060:543:6"},{"body":{"nativeSrc":"36672:54:6","nodeType":"YulBlock","src":"36672:54:6","statements":[{"nativeSrc":"36682:37:6","nodeType":"YulAssignment","src":"36682:37:6","value":{"arguments":[{"name":"bits","nativeSrc":"36707:4:6","nodeType":"YulIdentifier","src":"36707:4:6"},{"name":"value","nativeSrc":"36713:5:6","nodeType":"YulIdentifier","src":"36713:5:6"}],"functionName":{"name":"shr","nativeSrc":"36703:3:6","nodeType":"YulIdentifier","src":"36703:3:6"},"nativeSrc":"36703:16:6","nodeType":"YulFunctionCall","src":"36703:16:6"},"variableNames":[{"name":"newValue","nativeSrc":"36682:8:6","nodeType":"YulIdentifier","src":"36682:8:6"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"36609:117:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"36647:4:6","nodeType":"YulTypedName","src":"36647:4:6","type":""},{"name":"value","nativeSrc":"36653:5:6","nodeType":"YulTypedName","src":"36653:5:6","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"36663:8:6","nodeType":"YulTypedName","src":"36663:8:6","type":""}],"src":"36609:117:6"},{"body":{"nativeSrc":"36783:118:6","nodeType":"YulBlock","src":"36783:118:6","statements":[{"nativeSrc":"36793:68:6","nodeType":"YulVariableDeclaration","src":"36793:68:6","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"36842:1:6","nodeType":"YulLiteral","src":"36842:1:6","type":"","value":"8"},{"name":"bytes","nativeSrc":"36845:5:6","nodeType":"YulIdentifier","src":"36845:5:6"}],"functionName":{"name":"mul","nativeSrc":"36838:3:6","nodeType":"YulIdentifier","src":"36838:3:6"},"nativeSrc":"36838:13:6","nodeType":"YulFunctionCall","src":"36838:13:6"},{"arguments":[{"kind":"number","nativeSrc":"36857:1:6","nodeType":"YulLiteral","src":"36857:1:6","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"36853:3:6","nodeType":"YulIdentifier","src":"36853:3:6"},"nativeSrc":"36853:6:6","nodeType":"YulFunctionCall","src":"36853:6:6"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"36809:28:6","nodeType":"YulIdentifier","src":"36809:28:6"},"nativeSrc":"36809:51:6","nodeType":"YulFunctionCall","src":"36809:51:6"}],"functionName":{"name":"not","nativeSrc":"36805:3:6","nodeType":"YulIdentifier","src":"36805:3:6"},"nativeSrc":"36805:56:6","nodeType":"YulFunctionCall","src":"36805:56:6"},"variables":[{"name":"mask","nativeSrc":"36797:4:6","nodeType":"YulTypedName","src":"36797:4:6","type":""}]},{"nativeSrc":"36870:25:6","nodeType":"YulAssignment","src":"36870:25:6","value":{"arguments":[{"name":"data","nativeSrc":"36884:4:6","nodeType":"YulIdentifier","src":"36884:4:6"},{"name":"mask","nativeSrc":"36890:4:6","nodeType":"YulIdentifier","src":"36890:4:6"}],"functionName":{"name":"and","nativeSrc":"36880:3:6","nodeType":"YulIdentifier","src":"36880:3:6"},"nativeSrc":"36880:15:6","nodeType":"YulFunctionCall","src":"36880:15:6"},"variableNames":[{"name":"result","nativeSrc":"36870:6:6","nodeType":"YulIdentifier","src":"36870:6:6"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"36732:169:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"36760:4:6","nodeType":"YulTypedName","src":"36760:4:6","type":""},{"name":"bytes","nativeSrc":"36766:5:6","nodeType":"YulTypedName","src":"36766:5:6","type":""}],"returnVariables":[{"name":"result","nativeSrc":"36776:6:6","nodeType":"YulTypedName","src":"36776:6:6","type":""}],"src":"36732:169:6"},{"body":{"nativeSrc":"36987:214:6","nodeType":"YulBlock","src":"36987:214:6","statements":[{"nativeSrc":"37120:37:6","nodeType":"YulAssignment","src":"37120:37:6","value":{"arguments":[{"name":"data","nativeSrc":"37147:4:6","nodeType":"YulIdentifier","src":"37147:4:6"},{"name":"len","nativeSrc":"37153:3:6","nodeType":"YulIdentifier","src":"37153:3:6"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"37128:18:6","nodeType":"YulIdentifier","src":"37128:18:6"},"nativeSrc":"37128:29:6","nodeType":"YulFunctionCall","src":"37128:29:6"},"variableNames":[{"name":"data","nativeSrc":"37120:4:6","nodeType":"YulIdentifier","src":"37120:4:6"}]},{"nativeSrc":"37166:29:6","nodeType":"YulAssignment","src":"37166:29:6","value":{"arguments":[{"name":"data","nativeSrc":"37177:4:6","nodeType":"YulIdentifier","src":"37177:4:6"},{"arguments":[{"kind":"number","nativeSrc":"37187:1:6","nodeType":"YulLiteral","src":"37187:1:6","type":"","value":"2"},{"name":"len","nativeSrc":"37190:3:6","nodeType":"YulIdentifier","src":"37190:3:6"}],"functionName":{"name":"mul","nativeSrc":"37183:3:6","nodeType":"YulIdentifier","src":"37183:3:6"},"nativeSrc":"37183:11:6","nodeType":"YulFunctionCall","src":"37183:11:6"}],"functionName":{"name":"or","nativeSrc":"37174:2:6","nodeType":"YulIdentifier","src":"37174:2:6"},"nativeSrc":"37174:21:6","nodeType":"YulFunctionCall","src":"37174:21:6"},"variableNames":[{"name":"used","nativeSrc":"37166:4:6","nodeType":"YulIdentifier","src":"37166:4:6"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"36906:295:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"36968:4:6","nodeType":"YulTypedName","src":"36968:4:6","type":""},{"name":"len","nativeSrc":"36974:3:6","nodeType":"YulTypedName","src":"36974:3:6","type":""}],"returnVariables":[{"name":"used","nativeSrc":"36982:4:6","nodeType":"YulTypedName","src":"36982:4:6","type":""}],"src":"36906:295:6"},{"body":{"nativeSrc":"37298:1303:6","nodeType":"YulBlock","src":"37298:1303:6","statements":[{"nativeSrc":"37309:51:6","nodeType":"YulVariableDeclaration","src":"37309:51:6","value":{"arguments":[{"name":"src","nativeSrc":"37356:3:6","nodeType":"YulIdentifier","src":"37356:3:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"37323:32:6","nodeType":"YulIdentifier","src":"37323:32:6"},"nativeSrc":"37323:37:6","nodeType":"YulFunctionCall","src":"37323:37:6"},"variables":[{"name":"newLen","nativeSrc":"37313:6:6","nodeType":"YulTypedName","src":"37313:6:6","type":""}]},{"body":{"nativeSrc":"37445:22:6","nodeType":"YulBlock","src":"37445:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"37447:16:6","nodeType":"YulIdentifier","src":"37447:16:6"},"nativeSrc":"37447:18:6","nodeType":"YulFunctionCall","src":"37447:18:6"},"nativeSrc":"37447:18:6","nodeType":"YulExpressionStatement","src":"37447:18:6"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"37417:6:6","nodeType":"YulIdentifier","src":"37417:6:6"},{"kind":"number","nativeSrc":"37425:18:6","nodeType":"YulLiteral","src":"37425:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"37414:2:6","nodeType":"YulIdentifier","src":"37414:2:6"},"nativeSrc":"37414:30:6","nodeType":"YulFunctionCall","src":"37414:30:6"},"nativeSrc":"37411:56:6","nodeType":"YulIf","src":"37411:56:6"},{"nativeSrc":"37477:52:6","nodeType":"YulVariableDeclaration","src":"37477:52:6","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"37523:4:6","nodeType":"YulIdentifier","src":"37523:4:6"}],"functionName":{"name":"sload","nativeSrc":"37517:5:6","nodeType":"YulIdentifier","src":"37517:5:6"},"nativeSrc":"37517:11:6","nodeType":"YulFunctionCall","src":"37517:11:6"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"37491:25:6","nodeType":"YulIdentifier","src":"37491:25:6"},"nativeSrc":"37491:38:6","nodeType":"YulFunctionCall","src":"37491:38:6"},"variables":[{"name":"oldLen","nativeSrc":"37481:6:6","nodeType":"YulTypedName","src":"37481:6:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"37622:4:6","nodeType":"YulIdentifier","src":"37622:4:6"},{"name":"oldLen","nativeSrc":"37628:6:6","nodeType":"YulIdentifier","src":"37628:6:6"},{"name":"newLen","nativeSrc":"37636:6:6","nodeType":"YulIdentifier","src":"37636:6:6"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"37576:45:6","nodeType":"YulIdentifier","src":"37576:45:6"},"nativeSrc":"37576:67:6","nodeType":"YulFunctionCall","src":"37576:67:6"},"nativeSrc":"37576:67:6","nodeType":"YulExpressionStatement","src":"37576:67:6"},{"nativeSrc":"37653:18:6","nodeType":"YulVariableDeclaration","src":"37653:18:6","value":{"kind":"number","nativeSrc":"37670:1:6","nodeType":"YulLiteral","src":"37670:1:6","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"37657:9:6","nodeType":"YulTypedName","src":"37657:9:6","type":""}]},{"nativeSrc":"37681:17:6","nodeType":"YulAssignment","src":"37681:17:6","value":{"kind":"number","nativeSrc":"37694:4:6","nodeType":"YulLiteral","src":"37694:4:6","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"37681:9:6","nodeType":"YulIdentifier","src":"37681:9:6"}]},{"cases":[{"body":{"nativeSrc":"37745:611:6","nodeType":"YulBlock","src":"37745:611:6","statements":[{"nativeSrc":"37759:37:6","nodeType":"YulVariableDeclaration","src":"37759:37:6","value":{"arguments":[{"name":"newLen","nativeSrc":"37778:6:6","nodeType":"YulIdentifier","src":"37778:6:6"},{"arguments":[{"kind":"number","nativeSrc":"37790:4:6","nodeType":"YulLiteral","src":"37790:4:6","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"37786:3:6","nodeType":"YulIdentifier","src":"37786:3:6"},"nativeSrc":"37786:9:6","nodeType":"YulFunctionCall","src":"37786:9:6"}],"functionName":{"name":"and","nativeSrc":"37774:3:6","nodeType":"YulIdentifier","src":"37774:3:6"},"nativeSrc":"37774:22:6","nodeType":"YulFunctionCall","src":"37774:22:6"},"variables":[{"name":"loopEnd","nativeSrc":"37763:7:6","nodeType":"YulTypedName","src":"37763:7:6","type":""}]},{"nativeSrc":"37810:51:6","nodeType":"YulVariableDeclaration","src":"37810:51:6","value":{"arguments":[{"name":"slot","nativeSrc":"37856:4:6","nodeType":"YulIdentifier","src":"37856:4:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"37824:31:6","nodeType":"YulIdentifier","src":"37824:31:6"},"nativeSrc":"37824:37:6","nodeType":"YulFunctionCall","src":"37824:37:6"},"variables":[{"name":"dstPtr","nativeSrc":"37814:6:6","nodeType":"YulTypedName","src":"37814:6:6","type":""}]},{"nativeSrc":"37874:10:6","nodeType":"YulVariableDeclaration","src":"37874:10:6","value":{"kind":"number","nativeSrc":"37883:1:6","nodeType":"YulLiteral","src":"37883:1:6","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"37878:1:6","nodeType":"YulTypedName","src":"37878:1:6","type":""}]},{"body":{"nativeSrc":"37942:163:6","nodeType":"YulBlock","src":"37942:163:6","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"37967:6:6","nodeType":"YulIdentifier","src":"37967:6:6"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"37985:3:6","nodeType":"YulIdentifier","src":"37985:3:6"},{"name":"srcOffset","nativeSrc":"37990:9:6","nodeType":"YulIdentifier","src":"37990:9:6"}],"functionName":{"name":"add","nativeSrc":"37981:3:6","nodeType":"YulIdentifier","src":"37981:3:6"},"nativeSrc":"37981:19:6","nodeType":"YulFunctionCall","src":"37981:19:6"}],"functionName":{"name":"mload","nativeSrc":"37975:5:6","nodeType":"YulIdentifier","src":"37975:5:6"},"nativeSrc":"37975:26:6","nodeType":"YulFunctionCall","src":"37975:26:6"}],"functionName":{"name":"sstore","nativeSrc":"37960:6:6","nodeType":"YulIdentifier","src":"37960:6:6"},"nativeSrc":"37960:42:6","nodeType":"YulFunctionCall","src":"37960:42:6"},"nativeSrc":"37960:42:6","nodeType":"YulExpressionStatement","src":"37960:42:6"},{"nativeSrc":"38019:24:6","nodeType":"YulAssignment","src":"38019:24:6","value":{"arguments":[{"name":"dstPtr","nativeSrc":"38033:6:6","nodeType":"YulIdentifier","src":"38033:6:6"},{"kind":"number","nativeSrc":"38041:1:6","nodeType":"YulLiteral","src":"38041:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"38029:3:6","nodeType":"YulIdentifier","src":"38029:3:6"},"nativeSrc":"38029:14:6","nodeType":"YulFunctionCall","src":"38029:14:6"},"variableNames":[{"name":"dstPtr","nativeSrc":"38019:6:6","nodeType":"YulIdentifier","src":"38019:6:6"}]},{"nativeSrc":"38060:31:6","nodeType":"YulAssignment","src":"38060:31:6","value":{"arguments":[{"name":"srcOffset","nativeSrc":"38077:9:6","nodeType":"YulIdentifier","src":"38077:9:6"},{"kind":"number","nativeSrc":"38088:2:6","nodeType":"YulLiteral","src":"38088:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38073:3:6","nodeType":"YulIdentifier","src":"38073:3:6"},"nativeSrc":"38073:18:6","nodeType":"YulFunctionCall","src":"38073:18:6"},"variableNames":[{"name":"srcOffset","nativeSrc":"38060:9:6","nodeType":"YulIdentifier","src":"38060:9:6"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"37908:1:6","nodeType":"YulIdentifier","src":"37908:1:6"},{"name":"loopEnd","nativeSrc":"37911:7:6","nodeType":"YulIdentifier","src":"37911:7:6"}],"functionName":{"name":"lt","nativeSrc":"37905:2:6","nodeType":"YulIdentifier","src":"37905:2:6"},"nativeSrc":"37905:14:6","nodeType":"YulFunctionCall","src":"37905:14:6"},"nativeSrc":"37897:208:6","nodeType":"YulForLoop","post":{"nativeSrc":"37920:21:6","nodeType":"YulBlock","src":"37920:21:6","statements":[{"nativeSrc":"37922:17:6","nodeType":"YulAssignment","src":"37922:17:6","value":{"arguments":[{"name":"i","nativeSrc":"37931:1:6","nodeType":"YulIdentifier","src":"37931:1:6"},{"kind":"number","nativeSrc":"37934:4:6","nodeType":"YulLiteral","src":"37934:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"37927:3:6","nodeType":"YulIdentifier","src":"37927:3:6"},"nativeSrc":"37927:12:6","nodeType":"YulFunctionCall","src":"37927:12:6"},"variableNames":[{"name":"i","nativeSrc":"37922:1:6","nodeType":"YulIdentifier","src":"37922:1:6"}]}]},"pre":{"nativeSrc":"37901:3:6","nodeType":"YulBlock","src":"37901:3:6","statements":[]},"src":"37897:208:6"},{"body":{"nativeSrc":"38141:156:6","nodeType":"YulBlock","src":"38141:156:6","statements":[{"nativeSrc":"38159:43:6","nodeType":"YulVariableDeclaration","src":"38159:43:6","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"38186:3:6","nodeType":"YulIdentifier","src":"38186:3:6"},{"name":"srcOffset","nativeSrc":"38191:9:6","nodeType":"YulIdentifier","src":"38191:9:6"}],"functionName":{"name":"add","nativeSrc":"38182:3:6","nodeType":"YulIdentifier","src":"38182:3:6"},"nativeSrc":"38182:19:6","nodeType":"YulFunctionCall","src":"38182:19:6"}],"functionName":{"name":"mload","nativeSrc":"38176:5:6","nodeType":"YulIdentifier","src":"38176:5:6"},"nativeSrc":"38176:26:6","nodeType":"YulFunctionCall","src":"38176:26:6"},"variables":[{"name":"lastValue","nativeSrc":"38163:9:6","nodeType":"YulTypedName","src":"38163:9:6","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"38226:6:6","nodeType":"YulIdentifier","src":"38226:6:6"},{"arguments":[{"name":"lastValue","nativeSrc":"38253:9:6","nodeType":"YulIdentifier","src":"38253:9:6"},{"arguments":[{"name":"newLen","nativeSrc":"38268:6:6","nodeType":"YulIdentifier","src":"38268:6:6"},{"kind":"number","nativeSrc":"38276:4:6","nodeType":"YulLiteral","src":"38276:4:6","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"38264:3:6","nodeType":"YulIdentifier","src":"38264:3:6"},"nativeSrc":"38264:17:6","nodeType":"YulFunctionCall","src":"38264:17:6"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"38234:18:6","nodeType":"YulIdentifier","src":"38234:18:6"},"nativeSrc":"38234:48:6","nodeType":"YulFunctionCall","src":"38234:48:6"}],"functionName":{"name":"sstore","nativeSrc":"38219:6:6","nodeType":"YulIdentifier","src":"38219:6:6"},"nativeSrc":"38219:64:6","nodeType":"YulFunctionCall","src":"38219:64:6"},"nativeSrc":"38219:64:6","nodeType":"YulExpressionStatement","src":"38219:64:6"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"38124:7:6","nodeType":"YulIdentifier","src":"38124:7:6"},{"name":"newLen","nativeSrc":"38133:6:6","nodeType":"YulIdentifier","src":"38133:6:6"}],"functionName":{"name":"lt","nativeSrc":"38121:2:6","nodeType":"YulIdentifier","src":"38121:2:6"},"nativeSrc":"38121:19:6","nodeType":"YulFunctionCall","src":"38121:19:6"},"nativeSrc":"38118:179:6","nodeType":"YulIf","src":"38118:179:6"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"38317:4:6","nodeType":"YulIdentifier","src":"38317:4:6"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"38331:6:6","nodeType":"YulIdentifier","src":"38331:6:6"},{"kind":"number","nativeSrc":"38339:1:6","nodeType":"YulLiteral","src":"38339:1:6","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"38327:3:6","nodeType":"YulIdentifier","src":"38327:3:6"},"nativeSrc":"38327:14:6","nodeType":"YulFunctionCall","src":"38327:14:6"},{"kind":"number","nativeSrc":"38343:1:6","nodeType":"YulLiteral","src":"38343:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"38323:3:6","nodeType":"YulIdentifier","src":"38323:3:6"},"nativeSrc":"38323:22:6","nodeType":"YulFunctionCall","src":"38323:22:6"}],"functionName":{"name":"sstore","nativeSrc":"38310:6:6","nodeType":"YulIdentifier","src":"38310:6:6"},"nativeSrc":"38310:36:6","nodeType":"YulFunctionCall","src":"38310:36:6"},"nativeSrc":"38310:36:6","nodeType":"YulExpressionStatement","src":"38310:36:6"}]},"nativeSrc":"37738:618:6","nodeType":"YulCase","src":"37738:618:6","value":{"kind":"number","nativeSrc":"37743:1:6","nodeType":"YulLiteral","src":"37743:1:6","type":"","value":"1"}},{"body":{"nativeSrc":"38373:222:6","nodeType":"YulBlock","src":"38373:222:6","statements":[{"nativeSrc":"38387:14:6","nodeType":"YulVariableDeclaration","src":"38387:14:6","value":{"kind":"number","nativeSrc":"38400:1:6","nodeType":"YulLiteral","src":"38400:1:6","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"38391:5:6","nodeType":"YulTypedName","src":"38391:5:6","type":""}]},{"body":{"nativeSrc":"38424:67:6","nodeType":"YulBlock","src":"38424:67:6","statements":[{"nativeSrc":"38442:35:6","nodeType":"YulAssignment","src":"38442:35:6","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"38461:3:6","nodeType":"YulIdentifier","src":"38461:3:6"},{"name":"srcOffset","nativeSrc":"38466:9:6","nodeType":"YulIdentifier","src":"38466:9:6"}],"functionName":{"name":"add","nativeSrc":"38457:3:6","nodeType":"YulIdentifier","src":"38457:3:6"},"nativeSrc":"38457:19:6","nodeType":"YulFunctionCall","src":"38457:19:6"}],"functionName":{"name":"mload","nativeSrc":"38451:5:6","nodeType":"YulIdentifier","src":"38451:5:6"},"nativeSrc":"38451:26:6","nodeType":"YulFunctionCall","src":"38451:26:6"},"variableNames":[{"name":"value","nativeSrc":"38442:5:6","nodeType":"YulIdentifier","src":"38442:5:6"}]}]},"condition":{"name":"newLen","nativeSrc":"38417:6:6","nodeType":"YulIdentifier","src":"38417:6:6"},"nativeSrc":"38414:77:6","nodeType":"YulIf","src":"38414:77:6"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"38511:4:6","nodeType":"YulIdentifier","src":"38511:4:6"},{"arguments":[{"name":"value","nativeSrc":"38570:5:6","nodeType":"YulIdentifier","src":"38570:5:6"},{"name":"newLen","nativeSrc":"38577:6:6","nodeType":"YulIdentifier","src":"38577:6:6"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"38517:52:6","nodeType":"YulIdentifier","src":"38517:52:6"},"nativeSrc":"38517:67:6","nodeType":"YulFunctionCall","src":"38517:67:6"}],"functionName":{"name":"sstore","nativeSrc":"38504:6:6","nodeType":"YulIdentifier","src":"38504:6:6"},"nativeSrc":"38504:81:6","nodeType":"YulFunctionCall","src":"38504:81:6"},"nativeSrc":"38504:81:6","nodeType":"YulExpressionStatement","src":"38504:81:6"}]},"nativeSrc":"38365:230:6","nodeType":"YulCase","src":"38365:230:6","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"37718:6:6","nodeType":"YulIdentifier","src":"37718:6:6"},{"kind":"number","nativeSrc":"37726:2:6","nodeType":"YulLiteral","src":"37726:2:6","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"37715:2:6","nodeType":"YulIdentifier","src":"37715:2:6"},"nativeSrc":"37715:14:6","nodeType":"YulFunctionCall","src":"37715:14:6"},"nativeSrc":"37708:887:6","nodeType":"YulSwitch","src":"37708:887:6"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"37206:1395:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"37287:4:6","nodeType":"YulTypedName","src":"37287:4:6","type":""},{"name":"src","nativeSrc":"37293:3:6","nodeType":"YulTypedName","src":"37293:3:6","type":""}],"src":"37206:1395:6"},{"body":{"nativeSrc":"38789:371:6","nodeType":"YulBlock","src":"38789:371:6","statements":[{"nativeSrc":"38799:27:6","nodeType":"YulAssignment","src":"38799:27:6","value":{"arguments":[{"name":"headStart","nativeSrc":"38811:9:6","nodeType":"YulIdentifier","src":"38811:9:6"},{"kind":"number","nativeSrc":"38822:3:6","nodeType":"YulLiteral","src":"38822:3:6","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"38807:3:6","nodeType":"YulIdentifier","src":"38807:3:6"},"nativeSrc":"38807:19:6","nodeType":"YulFunctionCall","src":"38807:19:6"},"variableNames":[{"name":"tail","nativeSrc":"38799:4:6","nodeType":"YulIdentifier","src":"38799:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"38880:6:6","nodeType":"YulIdentifier","src":"38880:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"38893:9:6","nodeType":"YulIdentifier","src":"38893:9:6"},{"kind":"number","nativeSrc":"38904:1:6","nodeType":"YulLiteral","src":"38904:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"38889:3:6","nodeType":"YulIdentifier","src":"38889:3:6"},"nativeSrc":"38889:17:6","nodeType":"YulFunctionCall","src":"38889:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"38836:43:6","nodeType":"YulIdentifier","src":"38836:43:6"},"nativeSrc":"38836:71:6","nodeType":"YulFunctionCall","src":"38836:71:6"},"nativeSrc":"38836:71:6","nodeType":"YulExpressionStatement","src":"38836:71:6"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"38961:6:6","nodeType":"YulIdentifier","src":"38961:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"38974:9:6","nodeType":"YulIdentifier","src":"38974:9:6"},{"kind":"number","nativeSrc":"38985:2:6","nodeType":"YulLiteral","src":"38985:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38970:3:6","nodeType":"YulIdentifier","src":"38970:3:6"},"nativeSrc":"38970:18:6","nodeType":"YulFunctionCall","src":"38970:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"38917:43:6","nodeType":"YulIdentifier","src":"38917:43:6"},"nativeSrc":"38917:72:6","nodeType":"YulFunctionCall","src":"38917:72:6"},"nativeSrc":"38917:72:6","nodeType":"YulExpressionStatement","src":"38917:72:6"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"39043:6:6","nodeType":"YulIdentifier","src":"39043:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"39056:9:6","nodeType":"YulIdentifier","src":"39056:9:6"},{"kind":"number","nativeSrc":"39067:2:6","nodeType":"YulLiteral","src":"39067:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"39052:3:6","nodeType":"YulIdentifier","src":"39052:3:6"},"nativeSrc":"39052:18:6","nodeType":"YulFunctionCall","src":"39052:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"38999:43:6","nodeType":"YulIdentifier","src":"38999:43:6"},"nativeSrc":"38999:72:6","nodeType":"YulFunctionCall","src":"38999:72:6"},"nativeSrc":"38999:72:6","nodeType":"YulExpressionStatement","src":"38999:72:6"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"39125:6:6","nodeType":"YulIdentifier","src":"39125:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"39138:9:6","nodeType":"YulIdentifier","src":"39138:9:6"},{"kind":"number","nativeSrc":"39149:2:6","nodeType":"YulLiteral","src":"39149:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"39134:3:6","nodeType":"YulIdentifier","src":"39134:3:6"},"nativeSrc":"39134:18:6","nodeType":"YulFunctionCall","src":"39134:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"39081:43:6","nodeType":"YulIdentifier","src":"39081:43:6"},"nativeSrc":"39081:72:6","nodeType":"YulFunctionCall","src":"39081:72:6"},"nativeSrc":"39081:72:6","nodeType":"YulExpressionStatement","src":"39081:72:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"38607:553:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"38737:9:6","nodeType":"YulTypedName","src":"38737:9:6","type":""},{"name":"value3","nativeSrc":"38749:6:6","nodeType":"YulTypedName","src":"38749:6:6","type":""},{"name":"value2","nativeSrc":"38757:6:6","nodeType":"YulTypedName","src":"38757:6:6","type":""},{"name":"value1","nativeSrc":"38765:6:6","nodeType":"YulTypedName","src":"38765:6:6","type":""},{"name":"value0","nativeSrc":"38773:6:6","nodeType":"YulTypedName","src":"38773:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"38784:4:6","nodeType":"YulTypedName","src":"38784:4:6","type":""}],"src":"38607:553:6"},{"body":{"nativeSrc":"39279:742:6","nodeType":"YulBlock","src":"39279:742:6","statements":[{"nativeSrc":"39289:29:6","nodeType":"YulVariableDeclaration","src":"39289:29:6","value":{"arguments":[{"name":"value","nativeSrc":"39312:5:6","nodeType":"YulIdentifier","src":"39312:5:6"}],"functionName":{"name":"sload","nativeSrc":"39306:5:6","nodeType":"YulIdentifier","src":"39306:5:6"},"nativeSrc":"39306:12:6","nodeType":"YulFunctionCall","src":"39306:12:6"},"variables":[{"name":"slotValue","nativeSrc":"39293:9:6","nodeType":"YulTypedName","src":"39293:9:6","type":""}]},{"nativeSrc":"39327:50:6","nodeType":"YulVariableDeclaration","src":"39327:50:6","value":{"arguments":[{"name":"slotValue","nativeSrc":"39367:9:6","nodeType":"YulIdentifier","src":"39367:9:6"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"39341:25:6","nodeType":"YulIdentifier","src":"39341:25:6"},"nativeSrc":"39341:36:6","nodeType":"YulFunctionCall","src":"39341:36:6"},"variables":[{"name":"length","nativeSrc":"39331:6:6","nodeType":"YulTypedName","src":"39331:6:6","type":""}]},{"nativeSrc":"39386:78:6","nodeType":"YulAssignment","src":"39386:78:6","value":{"arguments":[{"name":"pos","nativeSrc":"39452:3:6","nodeType":"YulIdentifier","src":"39452:3:6"},{"name":"length","nativeSrc":"39457:6:6","nodeType":"YulIdentifier","src":"39457:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"39393:58:6","nodeType":"YulIdentifier","src":"39393:58:6"},"nativeSrc":"39393:71:6","nodeType":"YulFunctionCall","src":"39393:71:6"},"variableNames":[{"name":"pos","nativeSrc":"39386:3:6","nodeType":"YulIdentifier","src":"39386:3:6"}]},{"cases":[{"body":{"nativeSrc":"39513:157:6","nodeType":"YulBlock","src":"39513:157:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"39566:3:6","nodeType":"YulIdentifier","src":"39566:3:6"},{"arguments":[{"name":"slotValue","nativeSrc":"39575:9:6","nodeType":"YulIdentifier","src":"39575:9:6"},{"arguments":[{"kind":"number","nativeSrc":"39590:4:6","nodeType":"YulLiteral","src":"39590:4:6","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"39586:3:6","nodeType":"YulIdentifier","src":"39586:3:6"},"nativeSrc":"39586:9:6","nodeType":"YulFunctionCall","src":"39586:9:6"}],"functionName":{"name":"and","nativeSrc":"39571:3:6","nodeType":"YulIdentifier","src":"39571:3:6"},"nativeSrc":"39571:25:6","nodeType":"YulFunctionCall","src":"39571:25:6"}],"functionName":{"name":"mstore","nativeSrc":"39559:6:6","nodeType":"YulIdentifier","src":"39559:6:6"},"nativeSrc":"39559:38:6","nodeType":"YulFunctionCall","src":"39559:38:6"},"nativeSrc":"39559:38:6","nodeType":"YulExpressionStatement","src":"39559:38:6"},{"nativeSrc":"39610:50:6","nodeType":"YulAssignment","src":"39610:50:6","value":{"arguments":[{"name":"pos","nativeSrc":"39621:3:6","nodeType":"YulIdentifier","src":"39621:3:6"},{"arguments":[{"kind":"number","nativeSrc":"39630:4:6","nodeType":"YulLiteral","src":"39630:4:6","type":"","value":"0x20"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"39650:6:6","nodeType":"YulIdentifier","src":"39650:6:6"}],"functionName":{"name":"iszero","nativeSrc":"39643:6:6","nodeType":"YulIdentifier","src":"39643:6:6"},"nativeSrc":"39643:14:6","nodeType":"YulFunctionCall","src":"39643:14:6"}],"functionName":{"name":"iszero","nativeSrc":"39636:6:6","nodeType":"YulIdentifier","src":"39636:6:6"},"nativeSrc":"39636:22:6","nodeType":"YulFunctionCall","src":"39636:22:6"}],"functionName":{"name":"mul","nativeSrc":"39626:3:6","nodeType":"YulIdentifier","src":"39626:3:6"},"nativeSrc":"39626:33:6","nodeType":"YulFunctionCall","src":"39626:33:6"}],"functionName":{"name":"add","nativeSrc":"39617:3:6","nodeType":"YulIdentifier","src":"39617:3:6"},"nativeSrc":"39617:43:6","nodeType":"YulFunctionCall","src":"39617:43:6"},"variableNames":[{"name":"ret","nativeSrc":"39610:3:6","nodeType":"YulIdentifier","src":"39610:3:6"}]}]},"nativeSrc":"39506:164:6","nodeType":"YulCase","src":"39506:164:6","value":{"kind":"number","nativeSrc":"39511:1:6","nodeType":"YulLiteral","src":"39511:1:6","type":"","value":"0"}},{"body":{"nativeSrc":"39686:329:6","nodeType":"YulBlock","src":"39686:329:6","statements":[{"nativeSrc":"39731:53:6","nodeType":"YulVariableDeclaration","src":"39731:53:6","value":{"arguments":[{"name":"value","nativeSrc":"39778:5:6","nodeType":"YulIdentifier","src":"39778:5:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"39746:31:6","nodeType":"YulIdentifier","src":"39746:31:6"},"nativeSrc":"39746:38:6","nodeType":"YulFunctionCall","src":"39746:38:6"},"variables":[{"name":"dataPos","nativeSrc":"39735:7:6","nodeType":"YulTypedName","src":"39735:7:6","type":""}]},{"nativeSrc":"39797:10:6","nodeType":"YulVariableDeclaration","src":"39797:10:6","value":{"kind":"number","nativeSrc":"39806:1:6","nodeType":"YulLiteral","src":"39806:1:6","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"39801:1:6","nodeType":"YulTypedName","src":"39801:1:6","type":""}]},{"body":{"nativeSrc":"39864:110:6","nodeType":"YulBlock","src":"39864:110:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"39893:3:6","nodeType":"YulIdentifier","src":"39893:3:6"},{"name":"i","nativeSrc":"39898:1:6","nodeType":"YulIdentifier","src":"39898:1:6"}],"functionName":{"name":"add","nativeSrc":"39889:3:6","nodeType":"YulIdentifier","src":"39889:3:6"},"nativeSrc":"39889:11:6","nodeType":"YulFunctionCall","src":"39889:11:6"},{"arguments":[{"name":"dataPos","nativeSrc":"39908:7:6","nodeType":"YulIdentifier","src":"39908:7:6"}],"functionName":{"name":"sload","nativeSrc":"39902:5:6","nodeType":"YulIdentifier","src":"39902:5:6"},"nativeSrc":"39902:14:6","nodeType":"YulFunctionCall","src":"39902:14:6"}],"functionName":{"name":"mstore","nativeSrc":"39882:6:6","nodeType":"YulIdentifier","src":"39882:6:6"},"nativeSrc":"39882:35:6","nodeType":"YulFunctionCall","src":"39882:35:6"},"nativeSrc":"39882:35:6","nodeType":"YulExpressionStatement","src":"39882:35:6"},{"nativeSrc":"39934:26:6","nodeType":"YulAssignment","src":"39934:26:6","value":{"arguments":[{"name":"dataPos","nativeSrc":"39949:7:6","nodeType":"YulIdentifier","src":"39949:7:6"},{"kind":"number","nativeSrc":"39958:1:6","nodeType":"YulLiteral","src":"39958:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"39945:3:6","nodeType":"YulIdentifier","src":"39945:3:6"},"nativeSrc":"39945:15:6","nodeType":"YulFunctionCall","src":"39945:15:6"},"variableNames":[{"name":"dataPos","nativeSrc":"39934:7:6","nodeType":"YulIdentifier","src":"39934:7:6"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"39831:1:6","nodeType":"YulIdentifier","src":"39831:1:6"},{"name":"length","nativeSrc":"39834:6:6","nodeType":"YulIdentifier","src":"39834:6:6"}],"functionName":{"name":"lt","nativeSrc":"39828:2:6","nodeType":"YulIdentifier","src":"39828:2:6"},"nativeSrc":"39828:13:6","nodeType":"YulFunctionCall","src":"39828:13:6"},"nativeSrc":"39820:154:6","nodeType":"YulForLoop","post":{"nativeSrc":"39842:21:6","nodeType":"YulBlock","src":"39842:21:6","statements":[{"nativeSrc":"39844:17:6","nodeType":"YulAssignment","src":"39844:17:6","value":{"arguments":[{"name":"i","nativeSrc":"39853:1:6","nodeType":"YulIdentifier","src":"39853:1:6"},{"kind":"number","nativeSrc":"39856:4:6","nodeType":"YulLiteral","src":"39856:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"39849:3:6","nodeType":"YulIdentifier","src":"39849:3:6"},"nativeSrc":"39849:12:6","nodeType":"YulFunctionCall","src":"39849:12:6"},"variableNames":[{"name":"i","nativeSrc":"39844:1:6","nodeType":"YulIdentifier","src":"39844:1:6"}]}]},"pre":{"nativeSrc":"39824:3:6","nodeType":"YulBlock","src":"39824:3:6","statements":[]},"src":"39820:154:6"},{"nativeSrc":"39987:18:6","nodeType":"YulAssignment","src":"39987:18:6","value":{"arguments":[{"name":"pos","nativeSrc":"39998:3:6","nodeType":"YulIdentifier","src":"39998:3:6"},{"name":"i","nativeSrc":"40003:1:6","nodeType":"YulIdentifier","src":"40003:1:6"}],"functionName":{"name":"add","nativeSrc":"39994:3:6","nodeType":"YulIdentifier","src":"39994:3:6"},"nativeSrc":"39994:11:6","nodeType":"YulFunctionCall","src":"39994:11:6"},"variableNames":[{"name":"ret","nativeSrc":"39987:3:6","nodeType":"YulIdentifier","src":"39987:3:6"}]}]},"nativeSrc":"39679:336:6","nodeType":"YulCase","src":"39679:336:6","value":{"kind":"number","nativeSrc":"39684:1:6","nodeType":"YulLiteral","src":"39684:1:6","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nativeSrc":"39484:9:6","nodeType":"YulIdentifier","src":"39484:9:6"},{"kind":"number","nativeSrc":"39495:1:6","nodeType":"YulLiteral","src":"39495:1:6","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"39480:3:6","nodeType":"YulIdentifier","src":"39480:3:6"},"nativeSrc":"39480:17:6","nodeType":"YulFunctionCall","src":"39480:17:6"},"nativeSrc":"39473:542:6","nodeType":"YulSwitch","src":"39473:542:6"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nativeSrc":"39190:831:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"39260:5:6","nodeType":"YulTypedName","src":"39260:5:6","type":""},{"name":"pos","nativeSrc":"39267:3:6","nodeType":"YulTypedName","src":"39267:3:6","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"39275:3:6","nodeType":"YulTypedName","src":"39275:3:6","type":""}],"src":"39190:831:6"},{"body":{"nativeSrc":"40170:274:6","nodeType":"YulBlock","src":"40170:274:6","statements":[{"nativeSrc":"40180:26:6","nodeType":"YulAssignment","src":"40180:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"40192:9:6","nodeType":"YulIdentifier","src":"40192:9:6"},{"kind":"number","nativeSrc":"40203:2:6","nodeType":"YulLiteral","src":"40203:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"40188:3:6","nodeType":"YulIdentifier","src":"40188:3:6"},"nativeSrc":"40188:18:6","nodeType":"YulFunctionCall","src":"40188:18:6"},"variableNames":[{"name":"tail","nativeSrc":"40180:4:6","nodeType":"YulIdentifier","src":"40180:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"40260:6:6","nodeType":"YulIdentifier","src":"40260:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"40273:9:6","nodeType":"YulIdentifier","src":"40273:9:6"},{"kind":"number","nativeSrc":"40284:1:6","nodeType":"YulLiteral","src":"40284:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"40269:3:6","nodeType":"YulIdentifier","src":"40269:3:6"},"nativeSrc":"40269:17:6","nodeType":"YulFunctionCall","src":"40269:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"40216:43:6","nodeType":"YulIdentifier","src":"40216:43:6"},"nativeSrc":"40216:71:6","nodeType":"YulFunctionCall","src":"40216:71:6"},"nativeSrc":"40216:71:6","nodeType":"YulExpressionStatement","src":"40216:71:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"40308:9:6","nodeType":"YulIdentifier","src":"40308:9:6"},{"kind":"number","nativeSrc":"40319:2:6","nodeType":"YulLiteral","src":"40319:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"40304:3:6","nodeType":"YulIdentifier","src":"40304:3:6"},"nativeSrc":"40304:18:6","nodeType":"YulFunctionCall","src":"40304:18:6"},{"arguments":[{"name":"tail","nativeSrc":"40328:4:6","nodeType":"YulIdentifier","src":"40328:4:6"},{"name":"headStart","nativeSrc":"40334:9:6","nodeType":"YulIdentifier","src":"40334:9:6"}],"functionName":{"name":"sub","nativeSrc":"40324:3:6","nodeType":"YulIdentifier","src":"40324:3:6"},"nativeSrc":"40324:20:6","nodeType":"YulFunctionCall","src":"40324:20:6"}],"functionName":{"name":"mstore","nativeSrc":"40297:6:6","nodeType":"YulIdentifier","src":"40297:6:6"},"nativeSrc":"40297:48:6","nodeType":"YulFunctionCall","src":"40297:48:6"},"nativeSrc":"40297:48:6","nodeType":"YulExpressionStatement","src":"40297:48:6"},{"nativeSrc":"40354:83:6","nodeType":"YulAssignment","src":"40354:83:6","value":{"arguments":[{"name":"value1","nativeSrc":"40423:6:6","nodeType":"YulIdentifier","src":"40423:6:6"},{"name":"tail","nativeSrc":"40432:4:6","nodeType":"YulIdentifier","src":"40432:4:6"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nativeSrc":"40362:60:6","nodeType":"YulIdentifier","src":"40362:60:6"},"nativeSrc":"40362:75:6","nodeType":"YulFunctionCall","src":"40362:75:6"},"variableNames":[{"name":"tail","nativeSrc":"40354:4:6","nodeType":"YulIdentifier","src":"40354:4:6"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_storage__to_t_uint256_t_string_memory_ptr__fromStack_reversed","nativeSrc":"40027:417:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"40134:9:6","nodeType":"YulTypedName","src":"40134:9:6","type":""},{"name":"value1","nativeSrc":"40146:6:6","nodeType":"YulTypedName","src":"40146:6:6","type":""},{"name":"value0","nativeSrc":"40154:6:6","nodeType":"YulTypedName","src":"40154:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"40165:4:6","nodeType":"YulTypedName","src":"40165:4:6","type":""}],"src":"40027:417:6"},{"body":{"nativeSrc":"40495:149:6","nodeType":"YulBlock","src":"40495:149:6","statements":[{"nativeSrc":"40505:25:6","nodeType":"YulAssignment","src":"40505:25:6","value":{"arguments":[{"name":"x","nativeSrc":"40528:1:6","nodeType":"YulIdentifier","src":"40528:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"40510:17:6","nodeType":"YulIdentifier","src":"40510:17:6"},"nativeSrc":"40510:20:6","nodeType":"YulFunctionCall","src":"40510:20:6"},"variableNames":[{"name":"x","nativeSrc":"40505:1:6","nodeType":"YulIdentifier","src":"40505:1:6"}]},{"nativeSrc":"40539:25:6","nodeType":"YulAssignment","src":"40539:25:6","value":{"arguments":[{"name":"y","nativeSrc":"40562:1:6","nodeType":"YulIdentifier","src":"40562:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"40544:17:6","nodeType":"YulIdentifier","src":"40544:17:6"},"nativeSrc":"40544:20:6","nodeType":"YulFunctionCall","src":"40544:20:6"},"variableNames":[{"name":"y","nativeSrc":"40539:1:6","nodeType":"YulIdentifier","src":"40539:1:6"}]},{"nativeSrc":"40573:17:6","nodeType":"YulAssignment","src":"40573:17:6","value":{"arguments":[{"name":"x","nativeSrc":"40585:1:6","nodeType":"YulIdentifier","src":"40585:1:6"},{"name":"y","nativeSrc":"40588:1:6","nodeType":"YulIdentifier","src":"40588:1:6"}],"functionName":{"name":"sub","nativeSrc":"40581:3:6","nodeType":"YulIdentifier","src":"40581:3:6"},"nativeSrc":"40581:9:6","nodeType":"YulFunctionCall","src":"40581:9:6"},"variableNames":[{"name":"diff","nativeSrc":"40573:4:6","nodeType":"YulIdentifier","src":"40573:4:6"}]},{"body":{"nativeSrc":"40615:22:6","nodeType":"YulBlock","src":"40615:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"40617:16:6","nodeType":"YulIdentifier","src":"40617:16:6"},"nativeSrc":"40617:18:6","nodeType":"YulFunctionCall","src":"40617:18:6"},"nativeSrc":"40617:18:6","nodeType":"YulExpressionStatement","src":"40617:18:6"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"40606:4:6","nodeType":"YulIdentifier","src":"40606:4:6"},{"name":"x","nativeSrc":"40612:1:6","nodeType":"YulIdentifier","src":"40612:1:6"}],"functionName":{"name":"gt","nativeSrc":"40603:2:6","nodeType":"YulIdentifier","src":"40603:2:6"},"nativeSrc":"40603:11:6","nodeType":"YulFunctionCall","src":"40603:11:6"},"nativeSrc":"40600:37:6","nodeType":"YulIf","src":"40600:37:6"}]},"name":"checked_sub_t_uint256","nativeSrc":"40450:194:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"40481:1:6","nodeType":"YulTypedName","src":"40481:1:6","type":""},{"name":"y","nativeSrc":"40484:1:6","nodeType":"YulTypedName","src":"40484:1:6","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"40490:4:6","nodeType":"YulTypedName","src":"40490:4:6","type":""}],"src":"40450:194:6"},{"body":{"nativeSrc":"40970:717:6","nodeType":"YulBlock","src":"40970:717:6","statements":[{"nativeSrc":"40980:27:6","nodeType":"YulAssignment","src":"40980:27:6","value":{"arguments":[{"name":"headStart","nativeSrc":"40992:9:6","nodeType":"YulIdentifier","src":"40992:9:6"},{"kind":"number","nativeSrc":"41003:3:6","nodeType":"YulLiteral","src":"41003:3:6","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"40988:3:6","nodeType":"YulIdentifier","src":"40988:3:6"},"nativeSrc":"40988:19:6","nodeType":"YulFunctionCall","src":"40988:19:6"},"variableNames":[{"name":"tail","nativeSrc":"40980:4:6","nodeType":"YulIdentifier","src":"40980:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"41061:6:6","nodeType":"YulIdentifier","src":"41061:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"41074:9:6","nodeType":"YulIdentifier","src":"41074:9:6"},{"kind":"number","nativeSrc":"41085:1:6","nodeType":"YulLiteral","src":"41085:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"41070:3:6","nodeType":"YulIdentifier","src":"41070:3:6"},"nativeSrc":"41070:17:6","nodeType":"YulFunctionCall","src":"41070:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"41017:43:6","nodeType":"YulIdentifier","src":"41017:43:6"},"nativeSrc":"41017:71:6","nodeType":"YulFunctionCall","src":"41017:71:6"},"nativeSrc":"41017:71:6","nodeType":"YulExpressionStatement","src":"41017:71:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"41109:9:6","nodeType":"YulIdentifier","src":"41109:9:6"},{"kind":"number","nativeSrc":"41120:2:6","nodeType":"YulLiteral","src":"41120:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"41105:3:6","nodeType":"YulIdentifier","src":"41105:3:6"},"nativeSrc":"41105:18:6","nodeType":"YulFunctionCall","src":"41105:18:6"},{"arguments":[{"name":"tail","nativeSrc":"41129:4:6","nodeType":"YulIdentifier","src":"41129:4:6"},{"name":"headStart","nativeSrc":"41135:9:6","nodeType":"YulIdentifier","src":"41135:9:6"}],"functionName":{"name":"sub","nativeSrc":"41125:3:6","nodeType":"YulIdentifier","src":"41125:3:6"},"nativeSrc":"41125:20:6","nodeType":"YulFunctionCall","src":"41125:20:6"}],"functionName":{"name":"mstore","nativeSrc":"41098:6:6","nodeType":"YulIdentifier","src":"41098:6:6"},"nativeSrc":"41098:48:6","nodeType":"YulFunctionCall","src":"41098:48:6"},"nativeSrc":"41098:48:6","nodeType":"YulExpressionStatement","src":"41098:48:6"},{"nativeSrc":"41155:86:6","nodeType":"YulAssignment","src":"41155:86:6","value":{"arguments":[{"name":"value1","nativeSrc":"41227:6:6","nodeType":"YulIdentifier","src":"41227:6:6"},{"name":"tail","nativeSrc":"41236:4:6","nodeType":"YulIdentifier","src":"41236:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"41163:63:6","nodeType":"YulIdentifier","src":"41163:63:6"},"nativeSrc":"41163:78:6","nodeType":"YulFunctionCall","src":"41163:78:6"},"variableNames":[{"name":"tail","nativeSrc":"41155:4:6","nodeType":"YulIdentifier","src":"41155:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"41262:9:6","nodeType":"YulIdentifier","src":"41262:9:6"},{"kind":"number","nativeSrc":"41273:2:6","nodeType":"YulLiteral","src":"41273:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"41258:3:6","nodeType":"YulIdentifier","src":"41258:3:6"},"nativeSrc":"41258:18:6","nodeType":"YulFunctionCall","src":"41258:18:6"},{"arguments":[{"name":"tail","nativeSrc":"41282:4:6","nodeType":"YulIdentifier","src":"41282:4:6"},{"name":"headStart","nativeSrc":"41288:9:6","nodeType":"YulIdentifier","src":"41288:9:6"}],"functionName":{"name":"sub","nativeSrc":"41278:3:6","nodeType":"YulIdentifier","src":"41278:3:6"},"nativeSrc":"41278:20:6","nodeType":"YulFunctionCall","src":"41278:20:6"}],"functionName":{"name":"mstore","nativeSrc":"41251:6:6","nodeType":"YulIdentifier","src":"41251:6:6"},"nativeSrc":"41251:48:6","nodeType":"YulFunctionCall","src":"41251:48:6"},"nativeSrc":"41251:48:6","nodeType":"YulExpressionStatement","src":"41251:48:6"},{"nativeSrc":"41308:86:6","nodeType":"YulAssignment","src":"41308:86:6","value":{"arguments":[{"name":"value2","nativeSrc":"41380:6:6","nodeType":"YulIdentifier","src":"41380:6:6"},{"name":"tail","nativeSrc":"41389:4:6","nodeType":"YulIdentifier","src":"41389:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"41316:63:6","nodeType":"YulIdentifier","src":"41316:63:6"},"nativeSrc":"41316:78:6","nodeType":"YulFunctionCall","src":"41316:78:6"},"variableNames":[{"name":"tail","nativeSrc":"41308:4:6","nodeType":"YulIdentifier","src":"41308:4:6"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"41448:6:6","nodeType":"YulIdentifier","src":"41448:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"41461:9:6","nodeType":"YulIdentifier","src":"41461:9:6"},{"kind":"number","nativeSrc":"41472:2:6","nodeType":"YulLiteral","src":"41472:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"41457:3:6","nodeType":"YulIdentifier","src":"41457:3:6"},"nativeSrc":"41457:18:6","nodeType":"YulFunctionCall","src":"41457:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"41404:43:6","nodeType":"YulIdentifier","src":"41404:43:6"},"nativeSrc":"41404:72:6","nodeType":"YulFunctionCall","src":"41404:72:6"},"nativeSrc":"41404:72:6","nodeType":"YulExpressionStatement","src":"41404:72:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"41497:9:6","nodeType":"YulIdentifier","src":"41497:9:6"},{"kind":"number","nativeSrc":"41508:3:6","nodeType":"YulLiteral","src":"41508:3:6","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"41493:3:6","nodeType":"YulIdentifier","src":"41493:3:6"},"nativeSrc":"41493:19:6","nodeType":"YulFunctionCall","src":"41493:19:6"},{"arguments":[{"name":"tail","nativeSrc":"41518:4:6","nodeType":"YulIdentifier","src":"41518:4:6"},{"name":"headStart","nativeSrc":"41524:9:6","nodeType":"YulIdentifier","src":"41524:9:6"}],"functionName":{"name":"sub","nativeSrc":"41514:3:6","nodeType":"YulIdentifier","src":"41514:3:6"},"nativeSrc":"41514:20:6","nodeType":"YulFunctionCall","src":"41514:20:6"}],"functionName":{"name":"mstore","nativeSrc":"41486:6:6","nodeType":"YulIdentifier","src":"41486:6:6"},"nativeSrc":"41486:49:6","nodeType":"YulFunctionCall","src":"41486:49:6"},"nativeSrc":"41486:49:6","nodeType":"YulExpressionStatement","src":"41486:49:6"},{"nativeSrc":"41544:136:6","nodeType":"YulAssignment","src":"41544:136:6","value":{"arguments":[{"name":"value4","nativeSrc":"41666:6:6","nodeType":"YulIdentifier","src":"41666:6:6"},{"name":"tail","nativeSrc":"41675:4:6","nodeType":"YulIdentifier","src":"41675:4:6"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"41552:113:6","nodeType":"YulIdentifier","src":"41552:113:6"},"nativeSrc":"41552:128:6","nodeType":"YulFunctionCall","src":"41552:128:6"},"variableNames":[{"name":"tail","nativeSrc":"41544:4:6","nodeType":"YulIdentifier","src":"41544:4:6"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"40650:1037:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"40910:9:6","nodeType":"YulTypedName","src":"40910:9:6","type":""},{"name":"value4","nativeSrc":"40922:6:6","nodeType":"YulTypedName","src":"40922:6:6","type":""},{"name":"value3","nativeSrc":"40930:6:6","nodeType":"YulTypedName","src":"40930:6:6","type":""},{"name":"value2","nativeSrc":"40938:6:6","nodeType":"YulTypedName","src":"40938:6:6","type":""},{"name":"value1","nativeSrc":"40946:6:6","nodeType":"YulTypedName","src":"40946:6:6","type":""},{"name":"value0","nativeSrc":"40954:6:6","nodeType":"YulTypedName","src":"40954:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"40965:4:6","nodeType":"YulTypedName","src":"40965:4:6","type":""}],"src":"40650:1037:6"},{"body":{"nativeSrc":"41847:288:6","nodeType":"YulBlock","src":"41847:288:6","statements":[{"nativeSrc":"41857:26:6","nodeType":"YulAssignment","src":"41857:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"41869:9:6","nodeType":"YulIdentifier","src":"41869:9:6"},{"kind":"number","nativeSrc":"41880:2:6","nodeType":"YulLiteral","src":"41880:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"41865:3:6","nodeType":"YulIdentifier","src":"41865:3:6"},"nativeSrc":"41865:18:6","nodeType":"YulFunctionCall","src":"41865:18:6"},"variableNames":[{"name":"tail","nativeSrc":"41857:4:6","nodeType":"YulIdentifier","src":"41857:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"41937:6:6","nodeType":"YulIdentifier","src":"41937:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"41950:9:6","nodeType":"YulIdentifier","src":"41950:9:6"},{"kind":"number","nativeSrc":"41961:1:6","nodeType":"YulLiteral","src":"41961:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"41946:3:6","nodeType":"YulIdentifier","src":"41946:3:6"},"nativeSrc":"41946:17:6","nodeType":"YulFunctionCall","src":"41946:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"41893:43:6","nodeType":"YulIdentifier","src":"41893:43:6"},"nativeSrc":"41893:71:6","nodeType":"YulFunctionCall","src":"41893:71:6"},"nativeSrc":"41893:71:6","nodeType":"YulExpressionStatement","src":"41893:71:6"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"42018:6:6","nodeType":"YulIdentifier","src":"42018:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"42031:9:6","nodeType":"YulIdentifier","src":"42031:9:6"},{"kind":"number","nativeSrc":"42042:2:6","nodeType":"YulLiteral","src":"42042:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"42027:3:6","nodeType":"YulIdentifier","src":"42027:3:6"},"nativeSrc":"42027:18:6","nodeType":"YulFunctionCall","src":"42027:18:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"41974:43:6","nodeType":"YulIdentifier","src":"41974:43:6"},"nativeSrc":"41974:72:6","nodeType":"YulFunctionCall","src":"41974:72:6"},"nativeSrc":"41974:72:6","nodeType":"YulExpressionStatement","src":"41974:72:6"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"42100:6:6","nodeType":"YulIdentifier","src":"42100:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"42113:9:6","nodeType":"YulIdentifier","src":"42113:9:6"},{"kind":"number","nativeSrc":"42124:2:6","nodeType":"YulLiteral","src":"42124:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"42109:3:6","nodeType":"YulIdentifier","src":"42109:3:6"},"nativeSrc":"42109:18:6","nodeType":"YulFunctionCall","src":"42109:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"42056:43:6","nodeType":"YulIdentifier","src":"42056:43:6"},"nativeSrc":"42056:72:6","nodeType":"YulFunctionCall","src":"42056:72:6"},"nativeSrc":"42056:72:6","nodeType":"YulExpressionStatement","src":"42056:72:6"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"41693:442:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"41803:9:6","nodeType":"YulTypedName","src":"41803:9:6","type":""},{"name":"value2","nativeSrc":"41815:6:6","nodeType":"YulTypedName","src":"41815:6:6","type":""},{"name":"value1","nativeSrc":"41823:6:6","nodeType":"YulTypedName","src":"41823:6:6","type":""},{"name":"value0","nativeSrc":"41831:6:6","nodeType":"YulTypedName","src":"41831:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"41842:4:6","nodeType":"YulTypedName","src":"41842:4:6","type":""}],"src":"41693:442:6"},{"body":{"nativeSrc":"42343:442:6","nodeType":"YulBlock","src":"42343:442:6","statements":[{"nativeSrc":"42353:27:6","nodeType":"YulAssignment","src":"42353:27:6","value":{"arguments":[{"name":"headStart","nativeSrc":"42365:9:6","nodeType":"YulIdentifier","src":"42365:9:6"},{"kind":"number","nativeSrc":"42376:3:6","nodeType":"YulLiteral","src":"42376:3:6","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"42361:3:6","nodeType":"YulIdentifier","src":"42361:3:6"},"nativeSrc":"42361:19:6","nodeType":"YulFunctionCall","src":"42361:19:6"},"variableNames":[{"name":"tail","nativeSrc":"42353:4:6","nodeType":"YulIdentifier","src":"42353:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"42434:6:6","nodeType":"YulIdentifier","src":"42434:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"42447:9:6","nodeType":"YulIdentifier","src":"42447:9:6"},{"kind":"number","nativeSrc":"42458:1:6","nodeType":"YulLiteral","src":"42458:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"42443:3:6","nodeType":"YulIdentifier","src":"42443:3:6"},"nativeSrc":"42443:17:6","nodeType":"YulFunctionCall","src":"42443:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"42390:43:6","nodeType":"YulIdentifier","src":"42390:43:6"},"nativeSrc":"42390:71:6","nodeType":"YulFunctionCall","src":"42390:71:6"},"nativeSrc":"42390:71:6","nodeType":"YulExpressionStatement","src":"42390:71:6"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"42515:6:6","nodeType":"YulIdentifier","src":"42515:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"42528:9:6","nodeType":"YulIdentifier","src":"42528:9:6"},{"kind":"number","nativeSrc":"42539:2:6","nodeType":"YulLiteral","src":"42539:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"42524:3:6","nodeType":"YulIdentifier","src":"42524:3:6"},"nativeSrc":"42524:18:6","nodeType":"YulFunctionCall","src":"42524:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"42471:43:6","nodeType":"YulIdentifier","src":"42471:43:6"},"nativeSrc":"42471:72:6","nodeType":"YulFunctionCall","src":"42471:72:6"},"nativeSrc":"42471:72:6","nodeType":"YulExpressionStatement","src":"42471:72:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"42564:9:6","nodeType":"YulIdentifier","src":"42564:9:6"},{"kind":"number","nativeSrc":"42575:2:6","nodeType":"YulLiteral","src":"42575:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"42560:3:6","nodeType":"YulIdentifier","src":"42560:3:6"},"nativeSrc":"42560:18:6","nodeType":"YulFunctionCall","src":"42560:18:6"},{"arguments":[{"name":"tail","nativeSrc":"42584:4:6","nodeType":"YulIdentifier","src":"42584:4:6"},{"name":"headStart","nativeSrc":"42590:9:6","nodeType":"YulIdentifier","src":"42590:9:6"}],"functionName":{"name":"sub","nativeSrc":"42580:3:6","nodeType":"YulIdentifier","src":"42580:3:6"},"nativeSrc":"42580:20:6","nodeType":"YulFunctionCall","src":"42580:20:6"}],"functionName":{"name":"mstore","nativeSrc":"42553:6:6","nodeType":"YulIdentifier","src":"42553:6:6"},"nativeSrc":"42553:48:6","nodeType":"YulFunctionCall","src":"42553:48:6"},"nativeSrc":"42553:48:6","nodeType":"YulExpressionStatement","src":"42553:48:6"},{"nativeSrc":"42610:86:6","nodeType":"YulAssignment","src":"42610:86:6","value":{"arguments":[{"name":"value2","nativeSrc":"42682:6:6","nodeType":"YulIdentifier","src":"42682:6:6"},{"name":"tail","nativeSrc":"42691:4:6","nodeType":"YulIdentifier","src":"42691:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"42618:63:6","nodeType":"YulIdentifier","src":"42618:63:6"},"nativeSrc":"42618:78:6","nodeType":"YulFunctionCall","src":"42618:78:6"},"variableNames":[{"name":"tail","nativeSrc":"42610:4:6","nodeType":"YulIdentifier","src":"42610:4:6"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"42750:6:6","nodeType":"YulIdentifier","src":"42750:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"42763:9:6","nodeType":"YulIdentifier","src":"42763:9:6"},{"kind":"number","nativeSrc":"42774:2:6","nodeType":"YulLiteral","src":"42774:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"42759:3:6","nodeType":"YulIdentifier","src":"42759:3:6"},"nativeSrc":"42759:18:6","nodeType":"YulFunctionCall","src":"42759:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"42706:43:6","nodeType":"YulIdentifier","src":"42706:43:6"},"nativeSrc":"42706:72:6","nodeType":"YulFunctionCall","src":"42706:72:6"},"nativeSrc":"42706:72:6","nodeType":"YulExpressionStatement","src":"42706:72:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"42141:644:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"42291:9:6","nodeType":"YulTypedName","src":"42291:9:6","type":""},{"name":"value3","nativeSrc":"42303:6:6","nodeType":"YulTypedName","src":"42303:6:6","type":""},{"name":"value2","nativeSrc":"42311:6:6","nodeType":"YulTypedName","src":"42311:6:6","type":""},{"name":"value1","nativeSrc":"42319:6:6","nodeType":"YulTypedName","src":"42319:6:6","type":""},{"name":"value0","nativeSrc":"42327:6:6","nodeType":"YulTypedName","src":"42327:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"42338:4:6","nodeType":"YulTypedName","src":"42338:4:6","type":""}],"src":"42141:644:6"},{"body":{"nativeSrc":"42897:118:6","nodeType":"YulBlock","src":"42897:118:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"42919:6:6","nodeType":"YulIdentifier","src":"42919:6:6"},{"kind":"number","nativeSrc":"42927:1:6","nodeType":"YulLiteral","src":"42927:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"42915:3:6","nodeType":"YulIdentifier","src":"42915:3:6"},"nativeSrc":"42915:14:6","nodeType":"YulFunctionCall","src":"42915:14:6"},{"hexValue":"5573657220616c7265616479206861732061636365737320746f207468697320","kind":"string","nativeSrc":"42931:34:6","nodeType":"YulLiteral","src":"42931:34:6","type":"","value":"User already has access to this "}],"functionName":{"name":"mstore","nativeSrc":"42908:6:6","nodeType":"YulIdentifier","src":"42908:6:6"},"nativeSrc":"42908:58:6","nodeType":"YulFunctionCall","src":"42908:58:6"},"nativeSrc":"42908:58:6","nodeType":"YulExpressionStatement","src":"42908:58:6"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"42987:6:6","nodeType":"YulIdentifier","src":"42987:6:6"},{"kind":"number","nativeSrc":"42995:2:6","nodeType":"YulLiteral","src":"42995:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"42983:3:6","nodeType":"YulIdentifier","src":"42983:3:6"},"nativeSrc":"42983:15:6","nodeType":"YulFunctionCall","src":"42983:15:6"},{"hexValue":"7061706572","kind":"string","nativeSrc":"43000:7:6","nodeType":"YulLiteral","src":"43000:7:6","type":"","value":"paper"}],"functionName":{"name":"mstore","nativeSrc":"42976:6:6","nodeType":"YulIdentifier","src":"42976:6:6"},"nativeSrc":"42976:32:6","nodeType":"YulFunctionCall","src":"42976:32:6"},"nativeSrc":"42976:32:6","nodeType":"YulExpressionStatement","src":"42976:32:6"}]},"name":"store_literal_in_memory_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924","nativeSrc":"42791:224:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"42889:6:6","nodeType":"YulTypedName","src":"42889:6:6","type":""}],"src":"42791:224:6"},{"body":{"nativeSrc":"43167:220:6","nodeType":"YulBlock","src":"43167:220:6","statements":[{"nativeSrc":"43177:74:6","nodeType":"YulAssignment","src":"43177:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"43243:3:6","nodeType":"YulIdentifier","src":"43243:3:6"},{"kind":"number","nativeSrc":"43248:2:6","nodeType":"YulLiteral","src":"43248:2:6","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"43184:58:6","nodeType":"YulIdentifier","src":"43184:58:6"},"nativeSrc":"43184:67:6","nodeType":"YulFunctionCall","src":"43184:67:6"},"variableNames":[{"name":"pos","nativeSrc":"43177:3:6","nodeType":"YulIdentifier","src":"43177:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"43349:3:6","nodeType":"YulIdentifier","src":"43349:3:6"}],"functionName":{"name":"store_literal_in_memory_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924","nativeSrc":"43260:88:6","nodeType":"YulIdentifier","src":"43260:88:6"},"nativeSrc":"43260:93:6","nodeType":"YulFunctionCall","src":"43260:93:6"},"nativeSrc":"43260:93:6","nodeType":"YulExpressionStatement","src":"43260:93:6"},{"nativeSrc":"43362:19:6","nodeType":"YulAssignment","src":"43362:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"43373:3:6","nodeType":"YulIdentifier","src":"43373:3:6"},{"kind":"number","nativeSrc":"43378:2:6","nodeType":"YulLiteral","src":"43378:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"43369:3:6","nodeType":"YulIdentifier","src":"43369:3:6"},"nativeSrc":"43369:12:6","nodeType":"YulFunctionCall","src":"43369:12:6"},"variableNames":[{"name":"end","nativeSrc":"43362:3:6","nodeType":"YulIdentifier","src":"43362:3:6"}]}]},"name":"abi_encode_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924_to_t_string_memory_ptr_fromStack","nativeSrc":"43021:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"43155:3:6","nodeType":"YulTypedName","src":"43155:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"43163:3:6","nodeType":"YulTypedName","src":"43163:3:6","type":""}],"src":"43021:366:6"},{"body":{"nativeSrc":"43564:248:6","nodeType":"YulBlock","src":"43564:248:6","statements":[{"nativeSrc":"43574:26:6","nodeType":"YulAssignment","src":"43574:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"43586:9:6","nodeType":"YulIdentifier","src":"43586:9:6"},{"kind":"number","nativeSrc":"43597:2:6","nodeType":"YulLiteral","src":"43597:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"43582:3:6","nodeType":"YulIdentifier","src":"43582:3:6"},"nativeSrc":"43582:18:6","nodeType":"YulFunctionCall","src":"43582:18:6"},"variableNames":[{"name":"tail","nativeSrc":"43574:4:6","nodeType":"YulIdentifier","src":"43574:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"43621:9:6","nodeType":"YulIdentifier","src":"43621:9:6"},{"kind":"number","nativeSrc":"43632:1:6","nodeType":"YulLiteral","src":"43632:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"43617:3:6","nodeType":"YulIdentifier","src":"43617:3:6"},"nativeSrc":"43617:17:6","nodeType":"YulFunctionCall","src":"43617:17:6"},{"arguments":[{"name":"tail","nativeSrc":"43640:4:6","nodeType":"YulIdentifier","src":"43640:4:6"},{"name":"headStart","nativeSrc":"43646:9:6","nodeType":"YulIdentifier","src":"43646:9:6"}],"functionName":{"name":"sub","nativeSrc":"43636:3:6","nodeType":"YulIdentifier","src":"43636:3:6"},"nativeSrc":"43636:20:6","nodeType":"YulFunctionCall","src":"43636:20:6"}],"functionName":{"name":"mstore","nativeSrc":"43610:6:6","nodeType":"YulIdentifier","src":"43610:6:6"},"nativeSrc":"43610:47:6","nodeType":"YulFunctionCall","src":"43610:47:6"},"nativeSrc":"43610:47:6","nodeType":"YulExpressionStatement","src":"43610:47:6"},{"nativeSrc":"43666:139:6","nodeType":"YulAssignment","src":"43666:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"43800:4:6","nodeType":"YulIdentifier","src":"43800:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924_to_t_string_memory_ptr_fromStack","nativeSrc":"43674:124:6","nodeType":"YulIdentifier","src":"43674:124:6"},"nativeSrc":"43674:131:6","nodeType":"YulFunctionCall","src":"43674:131:6"},"variableNames":[{"name":"tail","nativeSrc":"43666:4:6","nodeType":"YulIdentifier","src":"43666:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"43393:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"43544:9:6","nodeType":"YulTypedName","src":"43544:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"43559:4:6","nodeType":"YulTypedName","src":"43559:4:6","type":""}],"src":"43393:419:6"},{"body":{"nativeSrc":"43944:206:6","nodeType":"YulBlock","src":"43944:206:6","statements":[{"nativeSrc":"43954:26:6","nodeType":"YulAssignment","src":"43954:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"43966:9:6","nodeType":"YulIdentifier","src":"43966:9:6"},{"kind":"number","nativeSrc":"43977:2:6","nodeType":"YulLiteral","src":"43977:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"43962:3:6","nodeType":"YulIdentifier","src":"43962:3:6"},"nativeSrc":"43962:18:6","nodeType":"YulFunctionCall","src":"43962:18:6"},"variableNames":[{"name":"tail","nativeSrc":"43954:4:6","nodeType":"YulIdentifier","src":"43954:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"44034:6:6","nodeType":"YulIdentifier","src":"44034:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"44047:9:6","nodeType":"YulIdentifier","src":"44047:9:6"},{"kind":"number","nativeSrc":"44058:1:6","nodeType":"YulLiteral","src":"44058:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"44043:3:6","nodeType":"YulIdentifier","src":"44043:3:6"},"nativeSrc":"44043:17:6","nodeType":"YulFunctionCall","src":"44043:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"43990:43:6","nodeType":"YulIdentifier","src":"43990:43:6"},"nativeSrc":"43990:71:6","nodeType":"YulFunctionCall","src":"43990:71:6"},"nativeSrc":"43990:71:6","nodeType":"YulExpressionStatement","src":"43990:71:6"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"44115:6:6","nodeType":"YulIdentifier","src":"44115:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"44128:9:6","nodeType":"YulIdentifier","src":"44128:9:6"},{"kind":"number","nativeSrc":"44139:2:6","nodeType":"YulLiteral","src":"44139:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"44124:3:6","nodeType":"YulIdentifier","src":"44124:3:6"},"nativeSrc":"44124:18:6","nodeType":"YulFunctionCall","src":"44124:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"44071:43:6","nodeType":"YulIdentifier","src":"44071:43:6"},"nativeSrc":"44071:72:6","nodeType":"YulFunctionCall","src":"44071:72:6"},"nativeSrc":"44071:72:6","nodeType":"YulExpressionStatement","src":"44071:72:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"43818:332:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"43908:9:6","nodeType":"YulTypedName","src":"43908:9:6","type":""},{"name":"value1","nativeSrc":"43920:6:6","nodeType":"YulTypedName","src":"43920:6:6","type":""},{"name":"value0","nativeSrc":"43928:6:6","nodeType":"YulTypedName","src":"43928:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"43939:4:6","nodeType":"YulTypedName","src":"43939:4:6","type":""}],"src":"43818:332:6"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct MedicalResearch.Paper -> struct MedicalResearch.Paper\n    function abi_encode_t_struct$_Paper_$807_memory_ptr_to_t_struct$_Paper_$807_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // author\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // title\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // contentHash\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // accessFee\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // keywords\n\n            let memberValue0 := mload(add(value, 0x80))\n\n            mstore(add(pos, 0x80), sub(tail, pos))\n            tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // exists\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // parentPaperId\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Paper_$807_memory_ptr_to_t_struct$_Paper_$807_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_Paper_$807_memory_ptr_to_t_struct$_Paper_$807_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct MedicalResearch.Paper[] -> struct MedicalResearch.Paper[]\n    function abi_encode_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_Paper_$807_memory_ptr_to_t_struct$_Paper_$807_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Paper_$807_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_bool_t_uint256__to_t_address_t_string_memory_ptr_t_bool_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct MedicalResearch.Contribution -> struct MedicalResearch.Contribution\n    function abi_encode_t_struct$_Contribution_$816_memory_ptr_to_t_struct$_Contribution_$816_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // contributor\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // changesHash\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // approved\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // stakeAmount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Contribution_$816_memory_ptr_to_t_struct$_Contribution_$816_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_Contribution_$816_memory_ptr_to_t_struct$_Contribution_$816_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct MedicalResearch.Contribution[] -> struct MedicalResearch.Contribution[]\n    function abi_encode_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_Contribution_$816_memory_ptr_to_t_struct$_Contribution_$816_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Contribution_$816_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$651_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$651_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Paper does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_49afc8703fc4815fb14143bdc8e0999e2ad3d15a9c22306e2c45f2e85b2460bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the author can approve cont\")\n\n        mstore(add(memPtr, 32), \"ributions\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9121c809417c33c16789ecdbb65843511cd62d18ee2034db48bf79e3533d7a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid contribution index\")\n\n    }\n\n    function abi_encode_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f0ab600a9763f3c341cc2bc855643fe135718d7d073ec87e64659a5f13957340_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contribution already approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_storage__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924(memPtr) {\n\n        mstore(add(memPtr, 0), \"User already has access to this \")\n\n        mstore(add(memPtr, 32), \"paper\")\n\n    }\n\n    function abi_encode_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_740f3b47ab9ceea18983b74ae8bc13402d5467c8c202634531c3d02d8a77f924_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA1C74BE5 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD05E3CC5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD05E3CC5 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xDF771ACA EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xE7565890 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xED272A99 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3BE JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0xA1C74BE5 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xA949DFDF EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xAA4A66DD EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xC2414DEF EQ PUSH2 0x2DE JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x77154FDE GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x77154FDE EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x7ED4CD87 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x830E28F6 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x972A2239 EQ PUSH2 0x258 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x2C258C9E EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x3E0B7810 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x5E775A27 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x6FD91DA9 EQ PUSH2 0x1A9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x2CED JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x2D48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x3021 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x3061 JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x308E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x3061 JUMP JUMPDEST PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x3021 JUMP JUMPDEST PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x3551 JUMP JUMPDEST PUSH2 0x19B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x308E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x360C JUMP JUMPDEST PUSH2 0x1BD1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x3061 JUMP JUMPDEST PUSH2 0x1EDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x37A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x2444 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x3061 JUMP JUMPDEST PUSH2 0x27AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x308E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x27F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C6 PUSH2 0x2AF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x3821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x477 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46E SWAP1 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD DUP3 PUSH1 0x2 ADD DUP4 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x4 ADD DUP4 DUP1 SLOAD PUSH2 0x4D0 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FC SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x549 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x549 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP DUP3 DUP1 SLOAD PUSH2 0x55C SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x588 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x6A9 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x61C SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x648 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x695 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x695 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x678 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x5FD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x70C SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x738 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x785 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x75A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x785 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x768 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x79A SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7C6 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x813 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x813 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x896 SWAP1 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x943 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93A SWAP1 PUSH2 0x397A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x992 SWAP1 PUSH2 0x39E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9C0 JUMPI PUSH2 0x9BF PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA16 SWAP1 PUSH2 0x3A81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA46 JUMPI PUSH2 0xA45 PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0xA PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA7A SWAP2 SWAP1 PUSH2 0x3AD0 JUMP JUMPDEST PUSH2 0xA84 SWAP2 SWAP1 PUSH2 0x3B41 JUMP JUMPDEST DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0xA93 SWAP2 SWAP1 PUSH2 0x3B72 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB14 SWAP3 SWAP2 SWAP1 PUSH2 0x3BA6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB57 SWAP2 SWAP1 PUSH2 0x3BFB JUMP JUMPDEST PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8D SWAP1 PUSH2 0x3C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xBB0 SWAP1 PUSH2 0x3C94 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xBFD SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC29 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC76 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC4B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC59 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xC8F SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCBB SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD08 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCDD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD08 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCEB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xE10 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xD83 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDAF SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDFC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDD1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDFC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDDF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD64 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xE95 SWAP2 SWAP1 PUSH2 0x3E7E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xEAB SWAP2 SWAP1 PUSH2 0x3E7E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xED2 SWAP3 SWAP2 SWAP1 PUSH2 0x2B16 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x1 DUP4 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B0FC1DFDFECA1D7E9D6E25A76602E33ED913671DB0F6AAE33735EB74B66107 DUP7 DUP4 DUP8 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1092 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH32 0xB97425B8EC45AA7C5CCC9B938659EB11B5502276F1EEC240E61BAF207824396C DUP2 DUP5 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x10CE SWAP3 SWAP2 SWAP1 PUSH2 0x4019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1107 SWAP2 SWAP1 PUSH2 0x4049 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1120 JUMPI PUSH2 0x111F PUSH2 0x3340 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x114E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x1202 JUMPI PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11F5 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11DA JUMPI PUSH2 0x11D9 PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x11F1 SWAP1 PUSH2 0x3C94 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1159 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x121F JUMPI PUSH2 0x121E PUSH2 0x3340 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1258 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1245 PUSH2 0x2B6F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x123D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x154B JUMPI PUSH1 0x3 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x127D JUMPI PUSH2 0x127C PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1304 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1330 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x137D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1352 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x137D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1360 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x1396 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13C2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x140F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x140F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x14F3 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1466 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1492 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1447 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1533 JUMPI PUSH2 0x1532 PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x125E JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x15BD SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15E9 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1636 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x160B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1636 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1619 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD PUSH2 0x166B SWAP2 SWAP1 PUSH2 0x4049 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1684 JUMPI PUSH2 0x1683 PUSH2 0x3340 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16BD JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x16AA PUSH2 0x2B6F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x16A2 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x19A8 JUMPI PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1755 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1781 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x17E7 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1813 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1860 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1835 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1860 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1843 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1944 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x18B7 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18E3 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1930 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1905 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1930 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1913 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1898 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 PUSH1 0x1 DUP4 PUSH2 0x197F SWAP2 SWAP1 PUSH2 0x4049 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1990 JUMPI PUSH2 0x198F PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x16C7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x19CA SWAP1 PUSH2 0x3C94 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1A8B SWAP2 SWAP1 PUSH2 0x3E7E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1AA1 SWAP2 SWAP1 PUSH2 0x3E7E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1AC8 SWAP3 SWAP2 SWAP1 PUSH2 0x2B16 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x56EEAA024974E3268B1CDCEEF36BAEF0F1C89CE1F09AFA010857B95D4AED2586 DUP3 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1BAA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x407D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1C34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2B SWAP1 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C91 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CD4 SWAP2 SWAP1 PUSH2 0x3BFB JUMP JUMPDEST PUSH2 0x1D13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0A SWAP1 PUSH2 0x3C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1E00 SWAP2 SWAP1 PUSH2 0x3E7E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1E7D SWAP1 PUSH2 0x3C94 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE17C01AF799C5069ECF6FD9A231440A115ADB7A1DEA0306B06D8EFE971A1A0B0 DUP6 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1ECE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x411C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1F69 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1F55 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F8D JUMPI PUSH2 0x1F8C PUSH2 0x3340 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FC6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1FB3 PUSH2 0x2B6F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1FAB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x22BA JUMPI PUSH1 0x3 PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FEC JUMPI PUSH2 0x1FEB PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x2073 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x209F SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x2105 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2131 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x217E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2153 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x217E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2161 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2262 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x21D5 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2201 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x224E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x224E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x21B6 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x22A2 JUMPI PUSH2 0x22A1 PUSH2 0x3A06 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1FCC JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2439 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x2383 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23AF SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x23FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x23FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x23DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x22FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x24A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249E SWAP1 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2545 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x253C SWAP1 PUSH2 0x41DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x26DC JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x260D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x262C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2650 SWAP2 SWAP1 PUSH2 0x3BFB JUMP JUMPDEST PUSH2 0x268F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2686 SWAP1 PUSH2 0x3C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26C4 SWAP2 SWAP1 PUSH2 0x3B72 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1442BDB26F7569DB0CB308056CB26688F7AAD42FC098B54920E1AF1E8B67A5FC DUP3 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x27A3 SWAP3 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2863 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285A SWAP1 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD EQ PUSH2 0x28A5 JUMPI PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 POP PUSH2 0x2869 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD DUP3 PUSH1 0x2 ADD DUP4 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x4 ADD DUP4 DUP1 SLOAD PUSH2 0x28FE SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x292A SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2977 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x294C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2977 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x295A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP DUP3 DUP1 SLOAD PUSH2 0x298A SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29B6 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A03 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A03 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2AD7 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x2A4A SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A76 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AC3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A98 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AC3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AA6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2A2B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2B5E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2B5D JUMPI DUP3 MLOAD DUP3 SWAP1 DUP2 PUSH2 0x2B4D SWAP2 SWAP1 PUSH2 0x3E7E JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2B36 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2B6B SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BE4 JUMPI PUSH1 0x0 DUP2 DUP2 PUSH2 0x2BDB SWAP2 SWAP1 PUSH2 0x2BE8 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2BC5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2BF4 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2C06 JUMPI POP PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2C24 SWAP2 SWAP1 PUSH2 0x2C28 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2C41 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2C29 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C6C DUP2 PUSH2 0x2C59 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C89 DUP2 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CBA DUP3 PUSH2 0x2C8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CCA DUP2 PUSH2 0x2CAF JUMP JUMPDEST DUP2 EQ PUSH2 0x2CD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CE7 DUP2 PUSH2 0x2CC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D04 JUMPI PUSH2 0x2D03 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D12 DUP6 DUP3 DUP7 ADD PUSH2 0x2C7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D23 DUP6 DUP3 DUP7 ADD PUSH2 0x2CD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D42 DUP2 PUSH2 0x2D2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D79 JUMPI PUSH2 0x2D78 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D87 DUP5 DUP3 DUP6 ADD PUSH2 0x2C7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D99 DUP2 PUSH2 0x2CAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DD9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DBE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E01 DUP3 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x2E0B DUP2 DUP6 PUSH2 0x2DAA JUMP JUMPDEST SWAP4 POP PUSH2 0x2E1B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DBB JUMP JUMPDEST PUSH2 0x2E24 DUP2 PUSH2 0x2DE5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E38 DUP2 PUSH2 0x2C59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E86 DUP3 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x2E90 DUP2 DUP6 PUSH2 0x2E6A JUMP JUMPDEST SWAP4 POP PUSH2 0x2EA0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DBB JUMP JUMPDEST PUSH2 0x2EA9 DUP2 PUSH2 0x2DE5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC0 DUP4 DUP4 PUSH2 0x2E7B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE0 DUP3 PUSH2 0x2E3E JUMP JUMPDEST PUSH2 0x2EEA DUP2 DUP6 PUSH2 0x2E49 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x2EFC DUP6 PUSH2 0x2E5A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2F38 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x2F19 DUP6 DUP3 PUSH2 0x2EB4 JUMP JUMPDEST SWAP5 POP PUSH2 0x2F24 DUP4 PUSH2 0x2EC8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2F00 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2F5F PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2D90 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2F71 DUP2 DUP8 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2F85 DUP2 DUP7 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F94 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2E2F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2FA6 DUP2 DUP5 PUSH2 0x2ED5 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2FC7 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2D90 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2FD9 DUP2 DUP9 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2FED DUP2 DUP8 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FFC PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x3009 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2D39 JUMP JUMPDEST PUSH2 0x3016 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3038 JUMPI PUSH2 0x3037 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3046 DUP6 DUP3 DUP7 ADD PUSH2 0x2C7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3057 DUP6 DUP3 DUP7 ADD PUSH2 0x2C7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3077 JUMPI PUSH2 0x3076 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3085 DUP5 DUP3 DUP6 ADD PUSH2 0x2CD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30DE DUP2 PUSH2 0x2CAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x30ED DUP2 PUSH2 0x2C59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310F DUP3 PUSH2 0x2E3E JUMP JUMPDEST PUSH2 0x3119 DUP2 DUP6 PUSH2 0x30F3 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x312B DUP6 PUSH2 0x2E5A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3167 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3148 DUP6 DUP3 PUSH2 0x2EB4 JUMP JUMPDEST SWAP5 POP PUSH2 0x3153 DUP4 PUSH2 0x2EC8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x312F JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3182 DUP2 PUSH2 0x2D2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x31A0 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x30D5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x31B8 DUP3 DUP3 PUSH2 0x2E7B JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x31D2 DUP3 DUP3 PUSH2 0x2E7B JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x31E7 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x30E4 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x31FF DUP3 DUP3 PUSH2 0x3104 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x3214 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x3179 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x3227 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x30E4 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x323E DUP4 DUP4 PUSH2 0x3188 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x325E DUP3 PUSH2 0x30A9 JUMP JUMPDEST PUSH2 0x3268 DUP2 DUP6 PUSH2 0x30B4 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x327A DUP6 PUSH2 0x30C5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x32B6 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3297 DUP6 DUP3 PUSH2 0x3232 JUMP JUMPDEST SWAP5 POP PUSH2 0x32A2 DUP4 PUSH2 0x3246 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x327E JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32E2 DUP2 DUP5 PUSH2 0x3253 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x32FF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2D90 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3311 DUP2 DUP7 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP PUSH2 0x3320 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2D39 JUMP JUMPDEST PUSH2 0x332D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3378 DUP3 PUSH2 0x2DE5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3397 JUMPI PUSH2 0x3396 PUSH2 0x3340 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33AA PUSH2 0x2C45 JUMP JUMPDEST SWAP1 POP PUSH2 0x33B6 DUP3 DUP3 PUSH2 0x336F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x33D6 JUMPI PUSH2 0x33D5 PUSH2 0x3340 JUMP JUMPDEST JUMPDEST PUSH2 0x33DF DUP3 PUSH2 0x2DE5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x340E PUSH2 0x3409 DUP5 PUSH2 0x33BB JUMP JUMPDEST PUSH2 0x33A0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x342A JUMPI PUSH2 0x3429 PUSH2 0x333B JUMP JUMPDEST JUMPDEST PUSH2 0x3435 DUP5 DUP3 DUP6 PUSH2 0x33EC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3452 JUMPI PUSH2 0x3451 PUSH2 0x3336 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3462 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x33FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3486 JUMPI PUSH2 0x3485 PUSH2 0x3340 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x34AF PUSH2 0x34AA DUP5 PUSH2 0x346B JUMP JUMPDEST PUSH2 0x33A0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x34D2 JUMPI PUSH2 0x34D1 PUSH2 0x3497 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3519 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34F7 JUMPI PUSH2 0x34F6 PUSH2 0x3336 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x3504 DUP10 DUP3 PUSH2 0x343D JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x34D4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3538 JUMPI PUSH2 0x3537 PUSH2 0x3336 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3548 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x349C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x356B JUMPI PUSH2 0x356A PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3589 JUMPI PUSH2 0x3588 PUSH2 0x2C54 JUMP JUMPDEST JUMPDEST PUSH2 0x3595 DUP8 DUP3 DUP9 ADD PUSH2 0x343D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35B6 JUMPI PUSH2 0x35B5 PUSH2 0x2C54 JUMP JUMPDEST JUMPDEST PUSH2 0x35C2 DUP8 DUP3 DUP9 ADD PUSH2 0x343D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x35D3 DUP8 DUP3 DUP9 ADD PUSH2 0x2C7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35F4 JUMPI PUSH2 0x35F3 PUSH2 0x2C54 JUMP JUMPDEST JUMPDEST PUSH2 0x3600 DUP8 DUP3 DUP9 ADD PUSH2 0x3523 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3625 JUMPI PUSH2 0x3624 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3633 DUP7 DUP3 DUP8 ADD PUSH2 0x2C7A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3654 JUMPI PUSH2 0x3653 PUSH2 0x2C54 JUMP JUMPDEST JUMPDEST PUSH2 0x3660 DUP7 DUP3 DUP8 ADD PUSH2 0x343D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3671 DUP7 DUP3 DUP8 ADD PUSH2 0x2C7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x36BF PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x30D5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x36D7 DUP3 DUP3 PUSH2 0x2E7B JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x36EC PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x3179 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x36FF PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x30E4 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3716 DUP4 DUP4 PUSH2 0x36A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3736 DUP3 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x3740 DUP2 DUP6 PUSH2 0x3686 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3752 DUP6 PUSH2 0x3697 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x378E JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x376F DUP6 DUP3 PUSH2 0x370A JUMP JUMPDEST SWAP5 POP PUSH2 0x377A DUP4 PUSH2 0x371E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3756 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37BA DUP2 DUP5 PUSH2 0x372B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E7 PUSH2 0x37E2 PUSH2 0x37DD DUP5 PUSH2 0x2C8F JUMP JUMPDEST PUSH2 0x37C2 JUMP JUMPDEST PUSH2 0x2C8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F9 DUP3 PUSH2 0x37CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x380B DUP3 PUSH2 0x37EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x381B DUP2 PUSH2 0x3800 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3836 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3812 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506170657220646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3872 PUSH1 0x14 DUP4 PUSH2 0x2DAA JUMP JUMPDEST SWAP2 POP PUSH2 0x387D DUP3 PUSH2 0x383C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38A1 DUP2 PUSH2 0x3865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x38EF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3902 JUMPI PUSH2 0x3901 PUSH2 0x38A8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792074686520617574686F722063616E20617070726F766520636F6E74 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7269627574696F6E730000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3964 PUSH1 0x29 DUP4 PUSH2 0x2DAA JUMP JUMPDEST SWAP2 POP PUSH2 0x396F DUP3 PUSH2 0x3908 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3993 DUP2 PUSH2 0x3957 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F6E747269627574696F6E20696E646578000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39D0 PUSH1 0x1A DUP4 PUSH2 0x2DAA JUMP JUMPDEST SWAP2 POP PUSH2 0x39DB DUP3 PUSH2 0x399A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39FF DUP2 PUSH2 0x39C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x436F6E747269627574696F6E20616C726561647920617070726F766564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A6B PUSH1 0x1D DUP4 PUSH2 0x2DAA JUMP JUMPDEST SWAP2 POP PUSH2 0x3A76 DUP3 PUSH2 0x3A35 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A9A DUP2 PUSH2 0x3A5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3ADB DUP3 PUSH2 0x2C59 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AE6 DUP4 PUSH2 0x2C59 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3AF4 DUP2 PUSH2 0x2C59 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3B0B JUMPI PUSH2 0x3B0A PUSH2 0x3AA1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B4C DUP3 PUSH2 0x2C59 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B57 DUP4 PUSH2 0x2C59 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3B67 JUMPI PUSH2 0x3B66 PUSH2 0x3B12 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B7D DUP3 PUSH2 0x2C59 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B88 DUP4 PUSH2 0x2C59 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3BA0 JUMPI PUSH2 0x3B9F PUSH2 0x3AA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3BBB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D90 JUMP JUMPDEST PUSH2 0x3BC8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3BD8 DUP2 PUSH2 0x2D2D JUMP JUMPDEST DUP2 EQ PUSH2 0x3BE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3BF5 DUP2 PUSH2 0x3BCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C11 JUMPI PUSH2 0x3C10 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C1F DUP5 DUP3 DUP6 ADD PUSH2 0x3BE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5E PUSH1 0x15 DUP4 PUSH2 0x2DAA JUMP JUMPDEST SWAP2 POP PUSH2 0x3C69 DUP3 PUSH2 0x3C28 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C8D DUP2 PUSH2 0x3C51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C9F DUP3 PUSH2 0x2C59 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3CD1 JUMPI PUSH2 0x3CD0 PUSH2 0x3AA1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3D3E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3D01 JUMP JUMPDEST PUSH2 0x3D48 DUP7 DUP4 PUSH2 0x3D01 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D7B PUSH2 0x3D76 PUSH2 0x3D71 DUP5 PUSH2 0x2C59 JUMP JUMPDEST PUSH2 0x37C2 JUMP JUMPDEST PUSH2 0x2C59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D95 DUP4 PUSH2 0x3D60 JUMP JUMPDEST PUSH2 0x3DA9 PUSH2 0x3DA1 DUP3 PUSH2 0x3D82 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3D0E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3DBE PUSH2 0x3DB1 JUMP JUMPDEST PUSH2 0x3DC9 DUP2 DUP5 DUP5 PUSH2 0x3D8C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DED JUMPI PUSH2 0x3DE2 PUSH1 0x0 DUP3 PUSH2 0x3DB6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3DCF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E32 JUMPI PUSH2 0x3E03 DUP2 PUSH2 0x3CDC JUMP JUMPDEST PUSH2 0x3E0C DUP5 PUSH2 0x3CF1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3E1B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3E2F PUSH2 0x3E27 DUP6 PUSH2 0x3CF1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3DCE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E55 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3E37 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E6E DUP4 DUP4 PUSH2 0x3E44 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E87 DUP3 PUSH2 0x2D9F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EA0 JUMPI PUSH2 0x3E9F PUSH2 0x3340 JUMP JUMPDEST JUMPDEST PUSH2 0x3EAA DUP3 SLOAD PUSH2 0x38D7 JUMP JUMPDEST PUSH2 0x3EB5 DUP3 DUP3 DUP6 PUSH2 0x3DF1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3EE8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3ED6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3EE0 DUP6 DUP3 PUSH2 0x3E62 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3F48 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3EF6 DUP7 PUSH2 0x3CDC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3F1E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3EF9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3F3B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3F37 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3E44 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F65 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x3F72 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x3F7F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x3F8C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3FA2 DUP2 PUSH2 0x38D7 JUMP JUMPDEST PUSH2 0x3FAC DUP2 DUP7 PUSH2 0x2DAA JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3FC7 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3FDD JUMPI PUSH2 0x4010 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x4010 JUMP JUMPDEST PUSH2 0x3FE6 DUP6 PUSH2 0x3CDC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4008 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3FE9 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x402E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2E2F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4040 DUP2 DUP5 PUSH2 0x3F95 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4054 DUP3 PUSH2 0x2C59 JUMP JUMPDEST SWAP2 POP PUSH2 0x405F DUP4 PUSH2 0x2C59 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4077 JUMPI PUSH2 0x4076 PUSH2 0x3AA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4092 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2E2F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x40A4 DUP2 DUP8 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x40B8 DUP2 DUP7 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP PUSH2 0x40C7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2E2F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x40D9 DUP2 DUP5 PUSH2 0x2ED5 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x40FA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D90 JUMP JUMPDEST PUSH2 0x4107 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2D90 JUMP JUMPDEST PUSH2 0x4114 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4131 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x413E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2E2F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4150 DUP2 DUP6 PUSH2 0x2DF6 JUMP JUMPDEST SWAP1 POP PUSH2 0x415F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5573657220616C7265616479206861732061636365737320746F207468697320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7061706572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C4 PUSH1 0x25 DUP4 PUSH2 0x2DAA JUMP JUMPDEST SWAP2 POP PUSH2 0x41CF DUP3 PUSH2 0x4168 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x41F3 DUP2 PUSH2 0x41B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x420F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x421C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E2F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 ADDMOD KECCAK256 0x2F EXTCODECOPY SMOD 0x4B PUSH8 0x6C6CE5E16EECC0C 0xD5 CODECOPY 0x21 MSTORE 0x4C MLOAD 0xD3 0x4E INVALID 0xE3 BASEFEE 0x2E PUSH12 0x143E6164736F6C6343000818 STOP CALLER ","sourceMap":"143:10624:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1829:65;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9377:520;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1390:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;5545:1906;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1974:56;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8510:588;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1477:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;7504:268;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3090:743;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1600:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4677:806;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7849:370;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8296:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3901:715;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9182:133;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9973:791;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;232:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1829:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9377:520::-;9449:14;9474:19;9504:25;9540:17;9568:24;9619:6;:15;9626:7;9619:15;;;;;;;;;;;:22;;;;;;;;;;;;9611:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;9679:19;9701:6;:15;9708:7;9701:15;;;;;;;;;;;9679:37;;9749:5;:12;;;;;;;;;;;;9776:5;:11;;9802:5;:17;;9834:5;:15;;;9864:5;:14;;9727:162;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9377:520;;;;;;;:::o;1390:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5545:1906::-;5646:6;:15;5653:7;5646:15;;;;;;;;;;;:22;;;;;;;;;;;;5638:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;5726:6;:15;5733:7;5726:15;;;;;;;;;;;:22;;;;;;;;;;;;5712:36;;:10;:36;;;5704:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;5833:13;:22;5847:7;5833:22;;;;;;;;;;;:29;;;;5813:17;:49;5805:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;5913:13;:22;5927:7;5913:22;;;;;;;;;;;5936:17;5913:41;;;;;;;;:::i;:::-;;;;;;;;;;;;:50;;;;;;;;;;;;5912:51;5904:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;6010:33;6046:13;:22;6060:7;6046:22;;;;;;;;;;;6069:17;6046:41;;;;;;;;:::i;:::-;;;;;;;;;;;;6010:77;;6098:20;6195:3;6190:2;6163:15;:24;6179:7;6163:24;;;;;;;;;;;;:29;;;;:::i;:::-;:35;;;;:::i;:::-;6121:12;:24;;;:150;;;;:::i;:::-;6098:173;;6292:5;;;;;;;;;;:14;;;6307:12;:24;;;;;;;;;;;;6333:12;6292:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6284:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;6441:18;6462:11;;6441:32;;6484:11;;:13;;;;;;;;;:::i;:::-;;;;;;6531:434;;;;;;;;6560:10;6531:434;;;;;;6592:6;:15;6599:7;6592:15;;;;;;;;;;;:21;;6531:434;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6668:12;:24;;6531:434;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6718:6;:15;6725:7;6718:15;;;;;;;;;;;:25;;;6531:434;;;;6800:6;:15;6807:7;6800:15;;;;;;;;;;;:24;;6531:434;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6877:4;6531:434;;;;;;6911:7;6531:434;;;6510:6;:18;6517:10;6510:18;;;;;;;;;;;:455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6978:13;:25;6992:10;6978:25;;;;;;;;;;;;;;;7009:10;6978:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7123:4;7099:12;:21;;;:28;;;;;;;;;;;;;;;;;;7227:4;7175:13;:25;7189:10;7175:25;;;;;;;;;;;:49;7201:6;:15;7208:7;7201:15;;;;;;;;;;;:22;;;;;;;;;;;;7175:49;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;7310:12;:24;;;;;;;;;;;;7249:100;;;7270:7;7279:10;7291:17;7336:12;7249:100;;;;;;;;;:::i;:::-;;;;;;;;7365:50;7378:10;7390:12;:24;;7365:50;;;;;;;:::i;:::-;;;;;;;;5627:1824;;;5545:1906;;:::o;1974:56::-;;;;;;;;;;;;;;;;;:::o;8510:588::-;8580:14;8607:25;8663:1;8649:11;;:15;;;;:::i;:::-;8635:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8607:58;;8676:13;8711:9;8723:1;8711:13;;8706:176;8730:11;;8726:1;:15;8706:176;;;8767:13;:16;8781:1;8767:16;;;;;;;;;;;:22;8784:4;8767:22;;;;;;;;;;;;;;;;;;;;;;;;;8763:108;;;8828:1;8810:8;8819:5;8810:15;;;;;;;;:::i;:::-;;;;;;;:19;;;;;8848:7;;;;;:::i;:::-;;;;8763:108;8743:3;;;;;;;8706:176;;;;8894:29;8938:5;8926:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8894:50;;8960:9;8955:102;8979:5;8975:1;:9;8955:102;;;9026:6;:19;9033:8;9042:1;9033:11;;;;;;;;:::i;:::-;;;;;;;;9026:19;;;;;;;;;;;9006:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;9021:1;9006:17;;;;;;;;:::i;:::-;;;;;;;:39;;;;8986:3;;;;;;;8955:102;;;;9076:14;9069:21;;;;;8510:588;;;:::o;1477:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7504:268::-;7548:14;7575:24;7628:1;7614:11;;:15;;;;:::i;:::-;7602:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7575:55;;7646:9;7658:1;7646:13;;7641:97;7665:11;;7661:1;:15;7641:97;;;7717:6;:9;7724:1;7717:9;;;;;;;;;;;7698:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;7712:1;7708;:5;;;;:::i;:::-;7698:16;;;;;;;;:::i;:::-;;;;;;;:28;;;;7678:3;;;;;;;7641:97;;;;7755:9;7748:16;;;7504:268;:::o;3090:743::-;3224:15;3242:11;;3224:29;;3264:11;;:13;;;;;;;;;:::i;:::-;;;;;;3342:276;;;;;;;;3371:10;3342:276;;;;;;3403:5;3342:276;;;;3436:11;3342:276;;;;3473:9;3342:276;;;;3507:8;3342:276;;;;3538:4;3342:276;;;;;;3572:1;3342:276;;;3324:6;:15;3331:7;3324:15;;;;;;;;;;;:294;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3631:13;:25;3645:10;3631:25;;;;;;;;;;;;;;;3662:7;3631:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3773:10;3750:75;;;3764:7;3785:5;3792:11;3805:9;3816:8;3750:75;;;;;;;;;;:::i;:::-;;;;;;;;3213:620;3090:743;;;;:::o;1600:50::-;;;;;;;;;;;;;;;;;:::o;4677:806::-;4798:6;:15;4805:7;4798:15;;;;;;;;;;;:22;;;;;;;;;;;;4790:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4864:5;;;;;;;;;;:18;;;4883:10;4903:4;4910:11;4864:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4856:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;4961:25;4989:13;:22;5003:7;4989:22;;;;;;;;;;;:29;;;;4961:57;;5073:13;:22;5087:7;5073:22;;;;;;;;;;;5101:171;;;;;;;;5142:10;5101:171;;;;;;5180:11;5101:171;;;;5216:5;5101:171;;;;;;5249:11;5101:171;;;5073:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5286:21;:33;5308:10;5286:33;;;;;;;;;;;;;;;;:35;;;;;;;;;:::i;:::-;;;;;;5438:10;5388:87;;;5410:7;5419:17;5450:11;5463;5388:87;;;;;;;;;:::i;:::-;;;;;;;;4779:704;4677:806;;;:::o;7849:370::-;7920:14;7947:25;7975:13;:20;7989:5;7975:20;;;;;;;;;;;;;;;7947:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8006:26;8047:8;:15;8035:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8006:57;;8079:9;8074:109;8098:8;:15;8094:1;:19;8074:109;;;8152:6;:19;8159:8;8168:1;8159:11;;;;;;;;:::i;:::-;;;;;;;;8152:19;;;;;;;;;;;8135:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:11;8147:1;8135:14;;;;;;;;:::i;:::-;;;;;;;:36;;;;8115:3;;;;;;;8074:109;;;;8200:11;8193:18;;;;7849:370;;;:::o;8296:137::-;8362:21;8403:13;:22;8417:7;8403:22;;;;;;;;;;;8396:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8296:137;;;:::o;3901:715::-;3967:6;:15;3974:7;3967:15;;;;;;;;;;;:22;;;;;;;;;;;;3959:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4034:13;:22;4048:7;4034:22;;;;;;;;;;;:34;4057:10;4034:34;;;;;;;;;;;;;;;;;;;;;;;;;4033:35;4025:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4155:1;4127:6;:15;4134:7;4127:15;;;;;;;;;;;:25;;;:29;4123:311;;;4181:5;;;;;;;;;;:18;;;4200:10;4212:6;:15;4219:7;4212:15;;;;;;;;;;;:22;;;;;;;;;;;;4236:6;:15;4243:7;4236:15;;;;;;;;;;;:25;;;4181:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4173:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;4357:6;:15;4364:7;4357:15;;;;;;;;;;;:25;;;4330:15;:24;4346:7;4330:24;;;;;;;;;;;;:52;;;;:::i;:::-;4303:15;:24;4319:7;4303:24;;;;;;;;;;;:79;;;;4123:311;4483:4;4446:13;:22;4460:7;4446:22;;;;;;;;;;;:34;4469:10;4446:34;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;4570:10;4547:61;;;4561:7;4582:6;:15;4589:7;4582:15;;;;;;;;;;;:25;;;4547:61;;;;;;;:::i;:::-;;;;;;;;3901:715;:::o;9182:133::-;9253:7;9280:21;:27;9302:4;9280:27;;;;;;;;;;;;;;;;9273:34;;9182:133;;;:::o;9973:791::-;10049:14;10074:19;10104:25;10140:17;10168:24;10219:6;:15;10226:7;10219:15;;;;;;;;;;;:22;;;;;;;;;;;;10211:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;10279:17;10299:7;10279:27;;10317:167;10359:1;10324:6;:17;10331:9;10324:17;;;;;;;;;;;:31;;;:36;10317:167;;10389:6;:17;10396:9;10389:17;;;;;;;;;;;:31;;;10377:43;;10317:167;;;10496:27;10526:6;:17;10533:9;10526:17;;;;;;;;;;;10496:47;;10576:13;:20;;;;;;;;;;;;10611:13;:19;;10645:13;:25;;10685:13;:23;;;10723:13;:22;;10554:202;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9973:791;;;;;;;:::o;232:18::-;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:329::-;2163:6;2212:2;2200:9;2191:7;2187:23;2183:32;2180:119;;;2218:79;;:::i;:::-;2180:119;2338:1;2363:53;2408:7;2399:6;2388:9;2384:22;2363:53;:::i;:::-;2353:63;;2309:117;2104:329;;;;:::o;2439:118::-;2526:24;2544:5;2526:24;:::i;:::-;2521:3;2514:37;2439:118;;:::o;2563:99::-;2615:6;2649:5;2643:12;2633:22;;2563:99;;;:::o;2668:169::-;2752:11;2786:6;2781:3;2774:19;2826:4;2821:3;2817:14;2802:29;;2668:169;;;;:::o;2843:246::-;2924:1;2934:113;2948:6;2945:1;2942:13;2934:113;;;3033:1;3028:3;3024:11;3018:18;3014:1;3009:3;3005:11;2998:39;2970:2;2967:1;2963:10;2958:15;;2934:113;;;3081:1;3072:6;3067:3;3063:16;3056:27;2905:184;2843:246;;;:::o;3095:102::-;3136:6;3187:2;3183:7;3178:2;3171:5;3167:14;3163:28;3153:38;;3095:102;;;:::o;3203:377::-;3291:3;3319:39;3352:5;3319:39;:::i;:::-;3374:71;3438:6;3433:3;3374:71;:::i;:::-;3367:78;;3454:65;3512:6;3507:3;3500:4;3493:5;3489:16;3454:65;:::i;:::-;3544:29;3566:6;3544:29;:::i;:::-;3539:3;3535:39;3528:46;;3295:285;3203:377;;;;:::o;3586:118::-;3673:24;3691:5;3673:24;:::i;:::-;3668:3;3661:37;3586:118;;:::o;3710:124::-;3787:6;3821:5;3815:12;3805:22;;3710:124;;;:::o;3840:194::-;3949:11;3983:6;3978:3;3971:19;4023:4;4018:3;4014:14;3999:29;;3840:194;;;;:::o;4040:142::-;4117:4;4140:3;4132:11;;4170:4;4165:3;4161:14;4153:22;;4040:142;;;:::o;4188:159::-;4262:11;4296:6;4291:3;4284:19;4336:4;4331:3;4327:14;4312:29;;4188:159;;;;:::o;4353:357::-;4431:3;4459:39;4492:5;4459:39;:::i;:::-;4514:61;4568:6;4563:3;4514:61;:::i;:::-;4507:68;;4584:65;4642:6;4637:3;4630:4;4623:5;4619:16;4584:65;:::i;:::-;4674:29;4696:6;4674:29;:::i;:::-;4669:3;4665:39;4658:46;;4435:275;4353:357;;;;:::o;4716:196::-;4805:10;4840:66;4902:3;4894:6;4840:66;:::i;:::-;4826:80;;4716:196;;;;:::o;4918:123::-;4998:4;5030;5025:3;5021:14;5013:22;;4918:123;;;:::o;5075:991::-;5214:3;5243:64;5301:5;5243:64;:::i;:::-;5323:96;5412:6;5407:3;5323:96;:::i;:::-;5316:103;;5445:3;5490:4;5482:6;5478:17;5473:3;5469:27;5520:66;5580:5;5520:66;:::i;:::-;5609:7;5640:1;5625:396;5650:6;5647:1;5644:13;5625:396;;;5721:9;5715:4;5711:20;5706:3;5699:33;5772:6;5766:13;5800:84;5879:4;5864:13;5800:84;:::i;:::-;5792:92;;5907:70;5970:6;5907:70;:::i;:::-;5897:80;;6006:4;6001:3;5997:14;5990:21;;5685:336;5672:1;5669;5665:9;5660:14;;5625:396;;;5629:14;6037:4;6030:11;;6057:3;6050:10;;5219:847;;;;;5075:991;;;;:::o;6072:1037::-;6387:4;6425:3;6414:9;6410:19;6402:27;;6439:71;6507:1;6496:9;6492:17;6483:6;6439:71;:::i;:::-;6557:9;6551:4;6547:20;6542:2;6531:9;6527:18;6520:48;6585:78;6658:4;6649:6;6585:78;:::i;:::-;6577:86;;6710:9;6704:4;6700:20;6695:2;6684:9;6680:18;6673:48;6738:78;6811:4;6802:6;6738:78;:::i;:::-;6730:86;;6826:72;6894:2;6883:9;6879:18;6870:6;6826:72;:::i;:::-;6946:9;6940:4;6936:20;6930:3;6919:9;6915:19;6908:49;6974:128;7097:4;7088:6;6974:128;:::i;:::-;6966:136;;6072:1037;;;;;;;;:::o;7115:945::-;7382:4;7420:3;7409:9;7405:19;7397:27;;7434:71;7502:1;7491:9;7487:17;7478:6;7434:71;:::i;:::-;7552:9;7546:4;7542:20;7537:2;7526:9;7522:18;7515:48;7580:78;7653:4;7644:6;7580:78;:::i;:::-;7572:86;;7705:9;7699:4;7695:20;7690:2;7679:9;7675:18;7668:48;7733:78;7806:4;7797:6;7733:78;:::i;:::-;7725:86;;7821:72;7889:2;7878:9;7874:18;7865:6;7821:72;:::i;:::-;7903:67;7965:3;7954:9;7950:19;7941:6;7903:67;:::i;:::-;7980:73;8048:3;8037:9;8033:19;8024:6;7980:73;:::i;:::-;7115:945;;;;;;;;;:::o;8066:474::-;8134:6;8142;8191:2;8179:9;8170:7;8166:23;8162:32;8159:119;;;8197:79;;:::i;:::-;8159:119;8317:1;8342:53;8387:7;8378:6;8367:9;8363:22;8342:53;:::i;:::-;8332:63;;8288:117;8444:2;8470:53;8515:7;8506:6;8495:9;8491:22;8470:53;:::i;:::-;8460:63;;8415:118;8066:474;;;;;:::o;8546:329::-;8605:6;8654:2;8642:9;8633:7;8629:23;8625:32;8622:119;;;8660:79;;:::i;:::-;8622:119;8780:1;8805:53;8850:7;8841:6;8830:9;8826:22;8805:53;:::i;:::-;8795:63;;8751:117;8546:329;;;;:::o;8881:222::-;8974:4;9012:2;9001:9;8997:18;8989:26;;9025:71;9093:1;9082:9;9078:17;9069:6;9025:71;:::i;:::-;8881:222;;;;:::o;9109:136::-;9198:6;9232:5;9226:12;9216:22;;9109:136;;;:::o;9251:206::-;9372:11;9406:6;9401:3;9394:19;9446:4;9441:3;9437:14;9422:29;;9251:206;;;;:::o;9463:154::-;9552:4;9575:3;9567:11;;9605:4;9600:3;9596:14;9588:22;;9463:154;;;:::o;9623:108::-;9700:24;9718:5;9700:24;:::i;:::-;9695:3;9688:37;9623:108;;:::o;9737:::-;9814:24;9832:5;9814:24;:::i;:::-;9809:3;9802:37;9737:108;;:::o;9851:184::-;9950:11;9984:6;9979:3;9972:19;10024:4;10019:3;10015:14;10000:29;;9851:184;;;;:::o;10069:971::-;10198:3;10227:64;10285:5;10227:64;:::i;:::-;10307:86;10386:6;10381:3;10307:86;:::i;:::-;10300:93;;10419:3;10464:4;10456:6;10452:17;10447:3;10443:27;10494:66;10554:5;10494:66;:::i;:::-;10583:7;10614:1;10599:396;10624:6;10621:1;10618:13;10599:396;;;10695:9;10689:4;10685:20;10680:3;10673:33;10746:6;10740:13;10774:84;10853:4;10838:13;10774:84;:::i;:::-;10766:92;;10881:70;10944:6;10881:70;:::i;:::-;10871:80;;10980:4;10975:3;10971:14;10964:21;;10659:336;10646:1;10643;10639:9;10634:14;;10599:396;;;10603:14;11011:4;11004:11;;11031:3;11024:10;;10203:837;;;;;10069:971;;;;:::o;11046:99::-;11117:21;11132:5;11117:21;:::i;:::-;11112:3;11105:34;11046:99;;:::o;11219:1676::-;11322:3;11358:4;11353:3;11349:14;11447:4;11440:5;11436:16;11430:23;11466:63;11523:4;11518:3;11514:14;11500:12;11466:63;:::i;:::-;11373:166;11622:4;11615:5;11611:16;11605:23;11675:3;11669:4;11665:14;11658:4;11653:3;11649:14;11642:38;11701:73;11769:4;11755:12;11701:73;:::i;:::-;11693:81;;11549:236;11874:4;11867:5;11863:16;11857:23;11927:3;11921:4;11917:14;11910:4;11905:3;11901:14;11894:38;11953:73;12021:4;12007:12;11953:73;:::i;:::-;11945:81;;11795:242;12124:4;12117:5;12113:16;12107:23;12143:63;12200:4;12195:3;12191:14;12177:12;12143:63;:::i;:::-;12047:169;12302:4;12295:5;12291:16;12285:23;12355:3;12349:4;12345:14;12338:4;12333:3;12329:14;12322:38;12381:123;12499:4;12485:12;12381:123;:::i;:::-;12373:131;;12226:289;12599:4;12592:5;12588:16;12582:23;12618:57;12669:4;12664:3;12660:14;12646:12;12618:57;:::i;:::-;12525:160;12776:4;12769:5;12765:16;12759:23;12795:63;12852:4;12847:3;12843:14;12829:12;12795:63;:::i;:::-;12695:173;12885:4;12878:11;;11327:1568;11219:1676;;;;:::o;12901:244::-;13014:10;13049:90;13135:3;13127:6;13049:90;:::i;:::-;13035:104;;12901:244;;;;:::o;13151:135::-;13243:4;13275;13270:3;13266:14;13258:22;;13151:135;;;:::o;13364:1087::-;13527:3;13556:76;13626:5;13556:76;:::i;:::-;13648:108;13749:6;13744:3;13648:108;:::i;:::-;13641:115;;13782:3;13827:4;13819:6;13815:17;13810:3;13806:27;13857:78;13929:5;13857:78;:::i;:::-;13958:7;13989:1;13974:432;13999:6;13996:1;13993:13;13974:432;;;14070:9;14064:4;14060:20;14055:3;14048:33;14121:6;14115:13;14149:108;14252:4;14237:13;14149:108;:::i;:::-;14141:116;;14280:82;14355:6;14280:82;:::i;:::-;14270:92;;14391:4;14386:3;14382:14;14375:21;;14034:372;14021:1;14018;14014:9;14009:14;;13974:432;;;13978:14;14422:4;14415:11;;14442:3;14435:10;;13532:919;;;;;13364:1087;;;;:::o;14457:461::-;14644:4;14682:2;14671:9;14667:18;14659:26;;14731:9;14725:4;14721:20;14717:1;14706:9;14702:17;14695:47;14759:152;14906:4;14897:6;14759:152;:::i;:::-;14751:160;;14457:461;;;;:::o;14924:632::-;15115:4;15153:3;15142:9;15138:19;15130:27;;15167:71;15235:1;15224:9;15220:17;15211:6;15167:71;:::i;:::-;15285:9;15279:4;15275:20;15270:2;15259:9;15255:18;15248:48;15313:78;15386:4;15377:6;15313:78;:::i;:::-;15305:86;;15401:66;15463:2;15452:9;15448:18;15439:6;15401:66;:::i;:::-;15477:72;15545:2;15534:9;15530:18;15521:6;15477:72;:::i;:::-;14924:632;;;;;;;:::o;15562:117::-;15671:1;15668;15661:12;15685:117;15794:1;15791;15784:12;15808:180;15856:77;15853:1;15846:88;15953:4;15950:1;15943:15;15977:4;15974:1;15967:15;15994:281;16077:27;16099:4;16077:27;:::i;:::-;16069:6;16065:40;16207:6;16195:10;16192:22;16171:18;16159:10;16156:34;16153:62;16150:88;;;16218:18;;:::i;:::-;16150:88;16258:10;16254:2;16247:22;16037:238;15994:281;;:::o;16281:129::-;16315:6;16342:20;;:::i;:::-;16332:30;;16371:33;16399:4;16391:6;16371:33;:::i;:::-;16281:129;;;:::o;16416:308::-;16478:4;16568:18;16560:6;16557:30;16554:56;;;16590:18;;:::i;:::-;16554:56;16628:29;16650:6;16628:29;:::i;:::-;16620:37;;16712:4;16706;16702:15;16694:23;;16416:308;;;:::o;16730:146::-;16827:6;16822:3;16817;16804:30;16868:1;16859:6;16854:3;16850:16;16843:27;16730:146;;;:::o;16882:425::-;16960:5;16985:66;17001:49;17043:6;17001:49;:::i;:::-;16985:66;:::i;:::-;16976:75;;17074:6;17067:5;17060:21;17112:4;17105:5;17101:16;17150:3;17141:6;17136:3;17132:16;17129:25;17126:112;;;17157:79;;:::i;:::-;17126:112;17247:54;17294:6;17289:3;17284;17247:54;:::i;:::-;16966:341;16882:425;;;;;:::o;17327:340::-;17383:5;17432:3;17425:4;17417:6;17413:17;17409:27;17399:122;;17440:79;;:::i;:::-;17399:122;17557:6;17544:20;17582:79;17657:3;17649:6;17642:4;17634:6;17630:17;17582:79;:::i;:::-;17573:88;;17389:278;17327:340;;;;:::o;17673:321::-;17760:4;17850:18;17842:6;17839:30;17836:56;;;17872:18;;:::i;:::-;17836:56;17922:4;17914:6;17910:17;17902:25;;17982:4;17976;17972:15;17964:23;;17673:321;;;:::o;18000:117::-;18109:1;18106;18099:12;18139:945;18245:5;18270:91;18286:74;18353:6;18286:74;:::i;:::-;18270:91;:::i;:::-;18261:100;;18381:5;18410:6;18403:5;18396:21;18444:4;18437:5;18433:16;18426:23;;18497:4;18489:6;18485:17;18477:6;18473:30;18526:3;18518:6;18515:15;18512:122;;;18545:79;;:::i;:::-;18512:122;18660:6;18643:435;18677:6;18672:3;18669:15;18643:435;;;18766:3;18753:17;18802:18;18789:11;18786:35;18783:122;;;18824:79;;:::i;:::-;18783:122;18948:11;18940:6;18936:24;18986:47;19029:3;19017:10;18986:47;:::i;:::-;18981:3;18974:60;19063:4;19058:3;19054:14;19047:21;;18719:359;;18703:4;18698:3;18694:14;18687:21;;18643:435;;;18647:21;18251:833;;18139:945;;;;;:::o;19106:390::-;19187:5;19236:3;19229:4;19221:6;19217:17;19213:27;19203:122;;19244:79;;:::i;:::-;19203:122;19361:6;19348:20;19386:104;19486:3;19478:6;19471:4;19463:6;19459:17;19386:104;:::i;:::-;19377:113;;19193:303;19106:390;;;;:::o;19502:1355::-;19643:6;19651;19659;19667;19716:3;19704:9;19695:7;19691:23;19687:33;19684:120;;;19723:79;;:::i;:::-;19684:120;19871:1;19860:9;19856:17;19843:31;19901:18;19893:6;19890:30;19887:117;;;19923:79;;:::i;:::-;19887:117;20028:63;20083:7;20074:6;20063:9;20059:22;20028:63;:::i;:::-;20018:73;;19814:287;20168:2;20157:9;20153:18;20140:32;20199:18;20191:6;20188:30;20185:117;;;20221:79;;:::i;:::-;20185:117;20326:63;20381:7;20372:6;20361:9;20357:22;20326:63;:::i;:::-;20316:73;;20111:288;20438:2;20464:53;20509:7;20500:6;20489:9;20485:22;20464:53;:::i;:::-;20454:63;;20409:118;20594:2;20583:9;20579:18;20566:32;20625:18;20617:6;20614:30;20611:117;;;20647:79;;:::i;:::-;20611:117;20752:88;20832:7;20823:6;20812:9;20808:22;20752:88;:::i;:::-;20742:98;;20537:313;19502:1355;;;;;;;:::o;20863:799::-;20950:6;20958;20966;21015:2;21003:9;20994:7;20990:23;20986:32;20983:119;;;21021:79;;:::i;:::-;20983:119;21141:1;21166:53;21211:7;21202:6;21191:9;21187:22;21166:53;:::i;:::-;21156:63;;21112:117;21296:2;21285:9;21281:18;21268:32;21327:18;21319:6;21316:30;21313:117;;;21349:79;;:::i;:::-;21313:117;21454:63;21509:7;21500:6;21489:9;21485:22;21454:63;:::i;:::-;21444:73;;21239:288;21566:2;21592:53;21637:7;21628:6;21617:9;21613:22;21592:53;:::i;:::-;21582:63;;21537:118;20863:799;;;;;:::o;21668:143::-;21764:6;21798:5;21792:12;21782:22;;21668:143;;;:::o;21817:213::-;21945:11;21979:6;21974:3;21967:19;22019:4;22014:3;22010:14;21995:29;;21817:213;;;;:::o;22036:161::-;22132:4;22155:3;22147:11;;22185:4;22180:3;22176:14;22168:22;;22036:161;;;:::o;22285:971::-;22402:3;22438:4;22433:3;22429:14;22532:4;22525:5;22521:16;22515:23;22551:63;22608:4;22603:3;22599:14;22585:12;22551:63;:::i;:::-;22453:171;22713:4;22706:5;22702:16;22696:23;22766:3;22760:4;22756:14;22749:4;22744:3;22740:14;22733:38;22792:73;22860:4;22846:12;22792:73;:::i;:::-;22784:81;;22634:242;22962:4;22955:5;22951:16;22945:23;22981:57;23032:4;23027:3;23023:14;23009:12;22981:57;:::i;:::-;22886:162;23137:4;23130:5;23126:16;23120:23;23156:63;23213:4;23208:3;23204:14;23190:12;23156:63;:::i;:::-;23058:171;23246:4;23239:11;;22407:849;22285:971;;;;:::o;23262:272::-;23389:10;23424:104;23524:3;23516:6;23424:104;:::i;:::-;23410:118;;23262:272;;;;:::o;23540:142::-;23639:4;23671;23666:3;23662:14;23654:22;;23540:142;;;:::o;23774:1143::-;23951:3;23980:83;24057:5;23980:83;:::i;:::-;24079:115;24187:6;24182:3;24079:115;:::i;:::-;24072:122;;24220:3;24265:4;24257:6;24253:17;24248:3;24244:27;24295:85;24374:5;24295:85;:::i;:::-;24403:7;24434:1;24419:453;24444:6;24441:1;24438:13;24419:453;;;24515:9;24509:4;24505:20;24500:3;24493:33;24566:6;24560:13;24594:122;24711:4;24696:13;24594:122;:::i;:::-;24586:130;;24739:89;24821:6;24739:89;:::i;:::-;24729:99;;24857:4;24852:3;24848:14;24841:21;;24479:393;24466:1;24463;24459:9;24454:14;;24419:453;;;24423:14;24888:4;24881:11;;24908:3;24901:10;;23956:961;;;;;23774:1143;;;;:::o;24923:489::-;25124:4;25162:2;25151:9;25147:18;25139:26;;25211:9;25205:4;25201:20;25197:1;25186:9;25182:17;25175:47;25239:166;25400:4;25391:6;25239:166;:::i;:::-;25231:174;;24923:489;;;;:::o;25418:60::-;25446:3;25467:5;25460:12;;25418:60;;;:::o;25484:142::-;25534:9;25567:53;25585:34;25594:24;25612:5;25594:24;:::i;:::-;25585:34;:::i;:::-;25567:53;:::i;:::-;25554:66;;25484:142;;;:::o;25632:126::-;25682:9;25715:37;25746:5;25715:37;:::i;:::-;25702:50;;25632:126;;;:::o;25764:139::-;25827:9;25860:37;25891:5;25860:37;:::i;:::-;25847:50;;25764:139;;;:::o;25909:157::-;26009:50;26053:5;26009:50;:::i;:::-;26004:3;25997:63;25909:157;;:::o;26072:248::-;26178:4;26216:2;26205:9;26201:18;26193:26;;26229:84;26310:1;26299:9;26295:17;26286:6;26229:84;:::i;:::-;26072:248;;;;:::o;26326:170::-;26466:22;26462:1;26454:6;26450:14;26443:46;26326:170;:::o;26502:366::-;26644:3;26665:67;26729:2;26724:3;26665:67;:::i;:::-;26658:74;;26741:93;26830:3;26741:93;:::i;:::-;26859:2;26854:3;26850:12;26843:19;;26502:366;;;:::o;26874:419::-;27040:4;27078:2;27067:9;27063:18;27055:26;;27127:9;27121:4;27117:20;27113:1;27102:9;27098:17;27091:47;27155:131;27281:4;27155:131;:::i;:::-;27147:139;;26874:419;;;:::o;27299:180::-;27347:77;27344:1;27337:88;27444:4;27441:1;27434:15;27468:4;27465:1;27458:15;27485:320;27529:6;27566:1;27560:4;27556:12;27546:22;;27613:1;27607:4;27603:12;27634:18;27624:81;;27690:4;27682:6;27678:17;27668:27;;27624:81;27752:2;27744:6;27741:14;27721:18;27718:38;27715:84;;27771:18;;:::i;:::-;27715:84;27536:269;27485:320;;;:::o;27811:228::-;27951:34;27947:1;27939:6;27935:14;27928:58;28020:11;28015:2;28007:6;28003:15;27996:36;27811:228;:::o;28045:366::-;28187:3;28208:67;28272:2;28267:3;28208:67;:::i;:::-;28201:74;;28284:93;28373:3;28284:93;:::i;:::-;28402:2;28397:3;28393:12;28386:19;;28045:366;;;:::o;28417:419::-;28583:4;28621:2;28610:9;28606:18;28598:26;;28670:9;28664:4;28660:20;28656:1;28645:9;28641:17;28634:47;28698:131;28824:4;28698:131;:::i;:::-;28690:139;;28417:419;;;:::o;28842:176::-;28982:28;28978:1;28970:6;28966:14;28959:52;28842:176;:::o;29024:366::-;29166:3;29187:67;29251:2;29246:3;29187:67;:::i;:::-;29180:74;;29263:93;29352:3;29263:93;:::i;:::-;29381:2;29376:3;29372:12;29365:19;;29024:366;;;:::o;29396:419::-;29562:4;29600:2;29589:9;29585:18;29577:26;;29649:9;29643:4;29639:20;29635:1;29624:9;29620:17;29613:47;29677:131;29803:4;29677:131;:::i;:::-;29669:139;;29396:419;;;:::o;29821:180::-;29869:77;29866:1;29859:88;29966:4;29963:1;29956:15;29990:4;29987:1;29980:15;30007:179;30147:31;30143:1;30135:6;30131:14;30124:55;30007:179;:::o;30192:366::-;30334:3;30355:67;30419:2;30414:3;30355:67;:::i;:::-;30348:74;;30431:93;30520:3;30431:93;:::i;:::-;30549:2;30544:3;30540:12;30533:19;;30192:366;;;:::o;30564:419::-;30730:4;30768:2;30757:9;30753:18;30745:26;;30817:9;30811:4;30807:20;30803:1;30792:9;30788:17;30781:47;30845:131;30971:4;30845:131;:::i;:::-;30837:139;;30564:419;;;:::o;30989:180::-;31037:77;31034:1;31027:88;31134:4;31131:1;31124:15;31158:4;31155:1;31148:15;31175:410;31215:7;31238:20;31256:1;31238:20;:::i;:::-;31233:25;;31272:20;31290:1;31272:20;:::i;:::-;31267:25;;31327:1;31324;31320:9;31349:30;31367:11;31349:30;:::i;:::-;31338:41;;31528:1;31519:7;31515:15;31512:1;31509:22;31489:1;31482:9;31462:83;31439:139;;31558:18;;:::i;:::-;31439:139;31223:362;31175:410;;;;:::o;31591:180::-;31639:77;31636:1;31629:88;31736:4;31733:1;31726:15;31760:4;31757:1;31750:15;31777:185;31817:1;31834:20;31852:1;31834:20;:::i;:::-;31829:25;;31868:20;31886:1;31868:20;:::i;:::-;31863:25;;31907:1;31897:35;;31912:18;;:::i;:::-;31897:35;31954:1;31951;31947:9;31942:14;;31777:185;;;;:::o;31968:191::-;32008:3;32027:20;32045:1;32027:20;:::i;:::-;32022:25;;32061:20;32079:1;32061:20;:::i;:::-;32056:25;;32104:1;32101;32097:9;32090:16;;32125:3;32122:1;32119:10;32116:36;;;32132:18;;:::i;:::-;32116:36;31968:191;;;;:::o;32165:332::-;32286:4;32324:2;32313:9;32309:18;32301:26;;32337:71;32405:1;32394:9;32390:17;32381:6;32337:71;:::i;:::-;32418:72;32486:2;32475:9;32471:18;32462:6;32418:72;:::i;:::-;32165:332;;;;;:::o;32503:116::-;32573:21;32588:5;32573:21;:::i;:::-;32566:5;32563:32;32553:60;;32609:1;32606;32599:12;32553:60;32503:116;:::o;32625:137::-;32679:5;32710:6;32704:13;32695:22;;32726:30;32750:5;32726:30;:::i;:::-;32625:137;;;;:::o;32768:345::-;32835:6;32884:2;32872:9;32863:7;32859:23;32855:32;32852:119;;;32890:79;;:::i;:::-;32852:119;33010:1;33035:61;33088:7;33079:6;33068:9;33064:22;33035:61;:::i;:::-;33025:71;;32981:125;32768:345;;;;:::o;33119:171::-;33259:23;33255:1;33247:6;33243:14;33236:47;33119:171;:::o;33296:366::-;33438:3;33459:67;33523:2;33518:3;33459:67;:::i;:::-;33452:74;;33535:93;33624:3;33535:93;:::i;:::-;33653:2;33648:3;33644:12;33637:19;;33296:366;;;:::o;33668:419::-;33834:4;33872:2;33861:9;33857:18;33849:26;;33921:9;33915:4;33911:20;33907:1;33896:9;33892:17;33885:47;33949:131;34075:4;33949:131;:::i;:::-;33941:139;;33668:419;;;:::o;34093:233::-;34132:3;34155:24;34173:5;34155:24;:::i;:::-;34146:33;;34201:66;34194:5;34191:77;34188:103;;34271:18;;:::i;:::-;34188:103;34318:1;34311:5;34307:13;34300:20;;34093:233;;;:::o;34332:141::-;34381:4;34404:3;34396:11;;34427:3;34424:1;34417:14;34461:4;34458:1;34448:18;34440:26;;34332:141;;;:::o;34479:93::-;34516:6;34563:2;34558;34551:5;34547:14;34543:23;34533:33;;34479:93;;;:::o;34578:107::-;34622:8;34672:5;34666:4;34662:16;34641:37;;34578:107;;;;:::o;34691:393::-;34760:6;34810:1;34798:10;34794:18;34833:97;34863:66;34852:9;34833:97;:::i;:::-;34951:39;34981:8;34970:9;34951:39;:::i;:::-;34939:51;;35023:4;35019:9;35012:5;35008:21;34999:30;;35072:4;35062:8;35058:19;35051:5;35048:30;35038:40;;34767:317;;34691:393;;;;;:::o;35090:142::-;35140:9;35173:53;35191:34;35200:24;35218:5;35200:24;:::i;:::-;35191:34;:::i;:::-;35173:53;:::i;:::-;35160:66;;35090:142;;;:::o;35238:75::-;35281:3;35302:5;35295:12;;35238:75;;;:::o;35319:269::-;35429:39;35460:7;35429:39;:::i;:::-;35490:91;35539:41;35563:16;35539:41;:::i;:::-;35531:6;35524:4;35518:11;35490:91;:::i;:::-;35484:4;35477:105;35395:193;35319:269;;;:::o;35594:73::-;35639:3;35594:73;:::o;35673:189::-;35750:32;;:::i;:::-;35791:65;35849:6;35841;35835:4;35791:65;:::i;:::-;35726:136;35673:189;;:::o;35868:186::-;35928:120;35945:3;35938:5;35935:14;35928:120;;;35999:39;36036:1;36029:5;35999:39;:::i;:::-;35972:1;35965:5;35961:13;35952:22;;35928:120;;;35868:186;;:::o;36060:543::-;36161:2;36156:3;36153:11;36150:446;;;36195:38;36227:5;36195:38;:::i;:::-;36279:29;36297:10;36279:29;:::i;:::-;36269:8;36265:44;36462:2;36450:10;36447:18;36444:49;;;36483:8;36468:23;;36444:49;36506:80;36562:22;36580:3;36562:22;:::i;:::-;36552:8;36548:37;36535:11;36506:80;:::i;:::-;36165:431;;36150:446;36060:543;;;:::o;36609:117::-;36663:8;36713:5;36707:4;36703:16;36682:37;;36609:117;;;;:::o;36732:169::-;36776:6;36809:51;36857:1;36853:6;36845:5;36842:1;36838:13;36809:51;:::i;:::-;36805:56;36890:4;36884;36880:15;36870:25;;36783:118;36732:169;;;;:::o;36906:295::-;36982:4;37128:29;37153:3;37147:4;37128:29;:::i;:::-;37120:37;;37190:3;37187:1;37183:11;37177:4;37174:21;37166:29;;36906:295;;;;:::o;37206:1395::-;37323:37;37356:3;37323:37;:::i;:::-;37425:18;37417:6;37414:30;37411:56;;;37447:18;;:::i;:::-;37411:56;37491:38;37523:4;37517:11;37491:38;:::i;:::-;37576:67;37636:6;37628;37622:4;37576:67;:::i;:::-;37670:1;37694:4;37681:17;;37726:2;37718:6;37715:14;37743:1;37738:618;;;;38400:1;38417:6;38414:77;;;38466:9;38461:3;38457:19;38451:26;38442:35;;38414:77;38517:67;38577:6;38570:5;38517:67;:::i;:::-;38511:4;38504:81;38373:222;37708:887;;37738:618;37790:4;37786:9;37778:6;37774:22;37824:37;37856:4;37824:37;:::i;:::-;37883:1;37897:208;37911:7;37908:1;37905:14;37897:208;;;37990:9;37985:3;37981:19;37975:26;37967:6;37960:42;38041:1;38033:6;38029:14;38019:24;;38088:2;38077:9;38073:18;38060:31;;37934:4;37931:1;37927:12;37922:17;;37897:208;;;38133:6;38124:7;38121:19;38118:179;;;38191:9;38186:3;38182:19;38176:26;38234:48;38276:4;38268:6;38264:17;38253:9;38234:48;:::i;:::-;38226:6;38219:64;38141:156;38118:179;38343:1;38339;38331:6;38327:14;38323:22;38317:4;38310:36;37745:611;;;37708:887;;37298:1303;;;37206:1395;;:::o;38607:553::-;38784:4;38822:3;38811:9;38807:19;38799:27;;38836:71;38904:1;38893:9;38889:17;38880:6;38836:71;:::i;:::-;38917:72;38985:2;38974:9;38970:18;38961:6;38917:72;:::i;:::-;38999;39067:2;39056:9;39052:18;39043:6;38999:72;:::i;:::-;39081;39149:2;39138:9;39134:18;39125:6;39081:72;:::i;:::-;38607:553;;;;;;;:::o;39190:831::-;39275:3;39312:5;39306:12;39341:36;39367:9;39341:36;:::i;:::-;39393:71;39457:6;39452:3;39393:71;:::i;:::-;39386:78;;39495:1;39484:9;39480:17;39511:1;39506:164;;;;39684:1;39679:336;;;;39473:542;;39506:164;39590:4;39586:9;39575;39571:25;39566:3;39559:38;39650:6;39643:14;39636:22;39630:4;39626:33;39621:3;39617:43;39610:50;;39506:164;;39679:336;39746:38;39778:5;39746:38;:::i;:::-;39806:1;39820:154;39834:6;39831:1;39828:13;39820:154;;;39908:7;39902:14;39898:1;39893:3;39889:11;39882:35;39958:1;39949:7;39945:15;39934:26;;39856:4;39853:1;39849:12;39844:17;;39820:154;;;40003:1;39998:3;39994:11;39987:18;;39686:329;;39473:542;;39279:742;;39190:831;;;;:::o;40027:417::-;40165:4;40203:2;40192:9;40188:18;40180:26;;40216:71;40284:1;40273:9;40269:17;40260:6;40216:71;:::i;:::-;40334:9;40328:4;40324:20;40319:2;40308:9;40304:18;40297:48;40362:75;40432:4;40423:6;40362:75;:::i;:::-;40354:83;;40027:417;;;;;:::o;40450:194::-;40490:4;40510:20;40528:1;40510:20;:::i;:::-;40505:25;;40544:20;40562:1;40544:20;:::i;:::-;40539:25;;40588:1;40585;40581:9;40573:17;;40612:1;40606:4;40603:11;40600:37;;;40617:18;;:::i;:::-;40600:37;40450:194;;;;:::o;40650:1037::-;40965:4;41003:3;40992:9;40988:19;40980:27;;41017:71;41085:1;41074:9;41070:17;41061:6;41017:71;:::i;:::-;41135:9;41129:4;41125:20;41120:2;41109:9;41105:18;41098:48;41163:78;41236:4;41227:6;41163:78;:::i;:::-;41155:86;;41288:9;41282:4;41278:20;41273:2;41262:9;41258:18;41251:48;41316:78;41389:4;41380:6;41316:78;:::i;:::-;41308:86;;41404:72;41472:2;41461:9;41457:18;41448:6;41404:72;:::i;:::-;41524:9;41518:4;41514:20;41508:3;41497:9;41493:19;41486:49;41552:128;41675:4;41666:6;41552:128;:::i;:::-;41544:136;;40650:1037;;;;;;;;:::o;41693:442::-;41842:4;41880:2;41869:9;41865:18;41857:26;;41893:71;41961:1;41950:9;41946:17;41937:6;41893:71;:::i;:::-;41974:72;42042:2;42031:9;42027:18;42018:6;41974:72;:::i;:::-;42056;42124:2;42113:9;42109:18;42100:6;42056:72;:::i;:::-;41693:442;;;;;;:::o;42141:644::-;42338:4;42376:3;42365:9;42361:19;42353:27;;42390:71;42458:1;42447:9;42443:17;42434:6;42390:71;:::i;:::-;42471:72;42539:2;42528:9;42524:18;42515:6;42471:72;:::i;:::-;42590:9;42584:4;42580:20;42575:2;42564:9;42560:18;42553:48;42618:78;42691:4;42682:6;42618:78;:::i;:::-;42610:86;;42706:72;42774:2;42763:9;42759:18;42750:6;42706:72;:::i;:::-;42141:644;;;;;;;:::o;42791:224::-;42931:34;42927:1;42919:6;42915:14;42908:58;43000:7;42995:2;42987:6;42983:15;42976:32;42791:224;:::o;43021:366::-;43163:3;43184:67;43248:2;43243:3;43184:67;:::i;:::-;43177:74;;43260:93;43349:3;43260:93;:::i;:::-;43378:2;43373:3;43369:12;43362:19;;43021:366;;;:::o;43393:419::-;43559:4;43597:2;43586:9;43582:18;43574:26;;43646:9;43640:4;43636:20;43632:1;43621:9;43617:17;43610:47;43674:131;43800:4;43674:131;:::i;:::-;43666:139;;43393:419;;;:::o;43818:332::-;43939:4;43977:2;43966:9;43962:18;43954:26;;43990:71;44058:1;44047:9;44043:17;44034:6;43990:71;:::i;:::-;44071:72;44139:2;44128:9;44124:18;44115:6;44071:72;:::i;:::-;43818:332;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3397000","executionCost":"infinite","totalCost":"infinite"},"external":{"accessPaper(uint256)":"infinite","approveContribution(uint256,uint256)":"infinite","contributions(uint256,uint256)":"infinite","getContributions(uint256)":"infinite","getOriginalPaper(uint256)":"infinite","getPaperById(uint256)":"infinite","getPapers()":"infinite","getPapersAccessedByUser(address)":"infinite","getPapersByOwnerAddress(address)":"infinite","getUserContributionCount(address)":"2907","paperAccessFees(uint256)":"infinite","paperAccessed(uint256,address)":"3111","papers(uint256)":"infinite","submitContribution(uint256,string,uint256)":"infinite","token()":"infinite","uploadPaper(string,string,uint256,string[])":"infinite","userContributionCount(address)":"2837"}},"methodIdentifiers":{"accessPaper(uint256)":"df771aca","approveContribution(uint256,uint256)":"6fd91da9","contributions(uint256,uint256)":"830e28f6","getContributions(uint256)":"d05e3cc5","getOriginalPaper(uint256)":"ed272a99","getPaperById(uint256)":"3e0b7810","getPapers()":"972a2239","getPapersAccessedByUser(address)":"7ed4cd87","getPapersByOwnerAddress(address)":"c2414def","getUserContributionCount(address)":"e7565890","paperAccessFees(uint256)":"a949dfdf","paperAccessed(uint256,address)":"2c258c9e","papers(uint256)":"5e775a27","submitContribution(uint256,string,uint256)":"aa4a66dd","token()":"fc0c546a","uploadPaper(string,string,uint256,string[])":"a1c74be5","userContributionCount(address)":"77154fde"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPaperId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPaperId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contributionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"ContributionApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contributionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"changesHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"}],\"name\":\"ContributionSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feePaid\",\"type\":\"uint256\"}],\"name\":\"PaperAccessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPaperId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newContentHash\",\"type\":\"string\"}],\"name\":\"PaperUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accessFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"keywords\",\"type\":\"string[]\"}],\"name\":\"PaperUploaded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"}],\"name\":\"accessPaper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contributionIndex\",\"type\":\"uint256\"}],\"name\":\"approveContribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"changesHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"}],\"name\":\"getContributions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"changesHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct MedicalResearch.Contribution[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"}],\"name\":\"getOriginalPaper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"accessFee\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"keywords\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"}],\"name\":\"getPaperById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"accessFee\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"keywords\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPapers\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"accessFee\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"keywords\",\"type\":\"string[]\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"parentPaperId\",\"type\":\"uint256\"}],\"internalType\":\"struct MedicalResearch.Paper[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPapersAccessedByUser\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"accessFee\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"keywords\",\"type\":\"string[]\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"parentPaperId\",\"type\":\"uint256\"}],\"internalType\":\"struct MedicalResearch.Paper[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPapersByOwnerAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"accessFee\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"keywords\",\"type\":\"string[]\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"parentPaperId\",\"type\":\"uint256\"}],\"internalType\":\"struct MedicalResearch.Paper[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserContributionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"paperAccessFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"paperAccessed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"papers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"accessFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"parentPaperId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paperId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"changesHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"}],\"name\":\"submitContribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"accessFee\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"keywords\",\"type\":\"string[]\"}],\"name\":\"uploadPaper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userContributionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MedicalResearch.sol\":\"MedicalResearch\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/MedicalResearch.sol\":{\"content\":\"pragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n// import \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract MedicalResearch  {\\r\\n    \\r\\n    // ERC20 token used for payments and staking\\r\\n    ERC20 public token;\\r\\n\\r\\n    // Struct to represent a research paper\\r\\n    struct Paper {\\r\\n        address author; // Address of the paper's author\\r\\n        string title; // Title of the paper\\r\\n        string contentHash; // Hash of the content to ensure integrity\\r\\n        uint256 accessFee; // Fee in tokens to access the paper\\r\\n        string[] keywords; // Array of keywords related to the paper\\r\\n        bool exists; // Flag to indicate if the paper exists\\r\\n        uint256 parentPaperId; // ID of the original paper (0 if original)\\r\\n    }\\r\\n\\r\\n    // Struct to represent a contribution to a paper\\r\\n    struct Contribution {\\r\\n        address contributor; // Address of the contributor\\r\\n        string changesHash; // Hash of the changes made\\r\\n        bool approved; // Flag to indicate if the contribution is approved\\r\\n        uint256 stakeAmount; // Amount of tokens staked for the contribution\\r\\n    }\\r\\n\\r\\n    uint256 private nextPaperId; // Counter for generating new paper IDs\\r\\n    uint256 private nextContributionIndex; // Counter for generating new contribution indices\\r\\n\\r\\n    // Mappings to store papers, contributions, access fees, and other data\\r\\n    mapping(uint256 => Paper) public papers; // Mapping from paper ID to Paper struct\\r\\n    mapping(uint256 => Contribution[]) public contributions; // Mapping from paper ID to an array of Contribution structs\\r\\n    mapping(uint256 => uint256) public paperAccessFees; // Mapping from paper ID to total access fees earned\\r\\n    mapping(address => uint256[]) private papersByOwner; // Mapping from owner address to an array of paper IDs owned\\r\\n    mapping(uint256 => mapping(address => bool)) public paperAccessed; // Mapping from paper ID to a mapping of user addresses to access status\\r\\n    mapping(address => uint256) public userContributionCount; // Mapping from user address to number of contributions made\\r\\n\\r\\n    // Events to log actions in the contract\\r\\n    event PaperUploaded(uint256 paperId, address indexed author, string title, string contentHash, uint256 accessFee, string[] keywords);\\r\\n    event ContributionSubmitted(uint256 paperId, uint256 contributionIndex, address indexed contributor, string changesHash, uint256 stakeAmount);\\r\\n    event ContributionApproved(uint256 oldPaperId, uint256 newPaperId, uint256 contributionIndex, address indexed contributor, uint256 rewardAmount);\\r\\n    event PaperAccessed(uint256 paperId, address indexed user, uint256 feePaid);\\r\\n    event PaperUpdated(uint256 newPaperId, string newContentHash); // Event for new paper update\\r\\n\\r\\n    // Constructor to initialize the contract with the token address\\r\\n    constructor(address _tokenAddress) {\\r\\n        token = ERC20(_tokenAddress);\\r\\n        nextPaperId = 1; // Start paper IDs from 1\\r\\n        nextContributionIndex = 0; // Start contribution indices from 0\\r\\n    }\\r\\n\\r\\n    // Function to upload a new paper\\r\\n    function uploadPaper(string memory title, string memory contentHash, uint256 accessFee, string[] memory keywords) external {\\r\\n        uint256 paperId = nextPaperId;\\r\\n        nextPaperId++; // Increment the paper ID counter\\r\\n\\r\\n        papers[paperId] = Paper({\\r\\n            author: msg.sender,\\r\\n            title: title,\\r\\n            contentHash: contentHash,\\r\\n            accessFee: accessFee,\\r\\n            keywords: keywords,\\r\\n            exists: true,\\r\\n            parentPaperId: 0 // No parent for original papers\\r\\n        });\\r\\n\\r\\n        papersByOwner[msg.sender].push(paperId); // Add the paper ID to the list of papers owned by the author\\r\\n\\r\\n        emit PaperUploaded(paperId, msg.sender, title, contentHash, accessFee, keywords);\\r\\n    }\\r\\n\\r\\n    // Function to access a paper by paying the access fee\\r\\n    function accessPaper(uint256 paperId) external {\\r\\n        require(papers[paperId].exists, \\\"Paper does not exist\\\");\\r\\n        require(!paperAccessed[paperId][msg.sender], \\\"User already has access to this paper\\\");\\r\\n\\r\\n        if (papers[paperId].accessFee > 0) {\\r\\n            require(token.transferFrom(msg.sender, papers[paperId].author, papers[paperId].accessFee), \\\"Token transfer failed\\\");\\r\\n            paperAccessFees[paperId] = paperAccessFees[paperId] + papers[paperId].accessFee; // Add the fee to the total access fees\\r\\n        }\\r\\n\\r\\n        paperAccessed[paperId][msg.sender] = true; // Mark the paper as accessed by the user\\r\\n\\r\\n        emit PaperAccessed(paperId, msg.sender, papers[paperId].accessFee);\\r\\n    }\\r\\n\\r\\n    // Function to submit a contribution to a paper\\r\\n    function submitContribution(uint256 paperId, string memory changesHash, uint256 stakeAmount) external {\\r\\n        require(papers[paperId].exists, \\\"Paper does not exist\\\");\\r\\n        require(token.transferFrom(msg.sender, address(this), stakeAmount), \\\"Token transfer failed\\\");\\r\\n\\r\\n        uint256 contributionIndex = contributions[paperId].length; // Get the index for the new contribution\\r\\n\\r\\n        contributions[paperId].push(Contribution({\\r\\n            contributor: msg.sender,\\r\\n            changesHash: changesHash,\\r\\n            approved: false,\\r\\n            stakeAmount: stakeAmount\\r\\n        }));\\r\\n\\r\\n        userContributionCount[msg.sender]++; // Increment the contribution count for the user\\r\\n\\r\\n        emit ContributionSubmitted(paperId, contributionIndex, msg.sender, changesHash, stakeAmount);\\r\\n    }\\r\\n\\r\\n    // Function to approve a contribution to a paper\\r\\n    function approveContribution(uint256 paperId, uint256 contributionIndex) external {\\r\\n        require(papers[paperId].exists, \\\"Paper does not exist\\\");\\r\\n        require(msg.sender == papers[paperId].author, \\\"Only the author can approve contributions\\\");\\r\\n        require(contributionIndex < contributions[paperId].length, \\\"Invalid contribution index\\\");\\r\\n        require(!contributions[paperId][contributionIndex].approved, \\\"Contribution already approved\\\");\\r\\n\\r\\n        Contribution storage contribution = contributions[paperId][contributionIndex];\\r\\n        uint256 rewardAmount = contribution.stakeAmount + (\\r\\n            paperAccessFees[paperId] * 10 / 100 // Reward includes 10% of the access fees earned by the paper\\r\\n        );\\r\\n\\r\\n        require(token.transfer(contribution.contributor, rewardAmount), \\\"Token transfer failed\\\");\\r\\n\\r\\n        // Create a new paper with the updated content\\r\\n        uint256 newPaperId = nextPaperId;\\r\\n        nextPaperId++;\\r\\n\\r\\n        papers[newPaperId] = Paper({\\r\\n            author: msg.sender,\\r\\n            title: papers[paperId].title, // Keep the title the same\\r\\n            contentHash: contribution.changesHash,\\r\\n            accessFee: papers[paperId].accessFee, // Keep the access fee the same\\r\\n            keywords: papers[paperId].keywords, // Keep the keywords the same\\r\\n            exists: true,\\r\\n            parentPaperId: paperId // Reference to the original paper\\r\\n        });\\r\\n\\r\\n        papersByOwner[msg.sender].push(newPaperId); // Add the new paper ID to the list of papers owned by the author\\r\\n\\r\\n        contribution.approved = true; // Mark the contribution as approved\\r\\n        paperAccessed[newPaperId][papers[paperId].author] = true;\\r\\n\\r\\n        emit ContributionApproved(paperId, newPaperId, contributionIndex, contribution.contributor, rewardAmount);\\r\\n        emit PaperUpdated(newPaperId, contribution.changesHash); // Emit event for new paper\\r\\n    }\\r\\n\\r\\n    // Function to get a list of all papers\\r\\n    function getPapers() external view returns (Paper[] memory) {\\r\\n        Paper[] memory allPapers = new Paper[](nextPaperId - 1);\\r\\n        for (uint256 i = 1; i < nextPaperId; i++) {\\r\\n            allPapers[i - 1] = papers[i];\\r\\n        }\\r\\n        return allPapers;\\r\\n    }\\r\\n\\r\\n    // Function to get a list of papers owned by a specific address\\r\\n    function getPapersByOwnerAddress(address owner) external view returns (Paper[] memory) {\\r\\n        uint256[] memory paperIds = papersByOwner[owner];\\r\\n        Paper[] memory ownerPapers = new Paper[](paperIds.length);\\r\\n        for (uint256 i = 0; i < paperIds.length; i++) {\\r\\n            ownerPapers[i] = papers[paperIds[i]];\\r\\n        }\\r\\n        return ownerPapers;\\r\\n    }\\r\\n\\r\\n    // Function to get a list of contributions for a specific paper\\r\\n    function getContributions(uint256 paperId) external view returns (Contribution[] memory) {\\r\\n        return contributions[paperId];\\r\\n    }\\r\\n\\r\\n    // Function to get a list of papers accessed by a specific user\\r\\n    function getPapersAccessedByUser(address user) external view returns (Paper[] memory) {\\r\\n        uint256[] memory paperIds = new uint256[](nextPaperId - 1);\\r\\n        uint256 count = 0;\\r\\n\\r\\n        for (uint256 i = 1; i < nextPaperId; i++) {\\r\\n            if (paperAccessed[i][user]) {\\r\\n                paperIds[count] = i;\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        Paper[] memory accessedPapers = new Paper[](count);\\r\\n        for (uint256 i = 0; i < count; i++) {\\r\\n            accessedPapers[i] = papers[paperIds[i]];\\r\\n        }\\r\\n\\r\\n        return accessedPapers;\\r\\n    }\\r\\n\\r\\n    // Function to get the number of contributions made by a specific user\\r\\n    function getUserContributionCount(address user) external view returns (uint256) {\\r\\n        return userContributionCount[user];\\r\\n    }\\r\\n    \\r\\n    // Function to get paper details by paper ID\\r\\n    function getPaperById(uint256 paperId) external view returns (\\r\\n        address author,\\r\\n        string memory title,\\r\\n        string memory contentHash,\\r\\n        uint256 accessFee,\\r\\n        string[] memory keywords\\r\\n    ) {\\r\\n        require(papers[paperId].exists, \\\"Paper does not exist\\\");\\r\\n\\r\\n        Paper storage paper = papers[paperId];\\r\\n        return (\\r\\n            paper.author,\\r\\n            paper.title,\\r\\n            paper.contentHash,\\r\\n            paper.accessFee,\\r\\n            paper.keywords\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // Function to get the original paper details (the root paper)\\r\\n    function getOriginalPaper(uint256 paperId) external view returns (\\r\\n        address author,\\r\\n        string memory title,\\r\\n        string memory contentHash,\\r\\n        uint256 accessFee,\\r\\n        string[] memory keywords\\r\\n    ) {\\r\\n        require(papers[paperId].exists, \\\"Paper does not exist\\\");\\r\\n\\r\\n        uint256 currentId = paperId;\\r\\n        while (papers[currentId].parentPaperId != 0) {\\r\\n            currentId = papers[currentId].parentPaperId; // Traverse up the chain to find the original paper\\r\\n        }\\r\\n\\r\\n        Paper storage originalPaper = papers[currentId];\\r\\n        return (\\r\\n            originalPaper.author,\\r\\n            originalPaper.title,\\r\\n            originalPaper.contentHash,\\r\\n            originalPaper.accessFee,\\r\\n            originalPaper.keywords\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\n\",\"keccak256\":\"0xbddd20079b30ad10244e243ddbd90c407af6f1a07ca9eeb2df436830ee50b54a\"}},\"version\":1}","storageLayout":{"storage":[{"astId":791,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"token","offset":0,"slot":"0","type":"t_contract(ERC20)651"},{"astId":818,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"nextPaperId","offset":0,"slot":"1","type":"t_uint256"},{"astId":820,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"nextContributionIndex","offset":0,"slot":"2","type":"t_uint256"},{"astId":825,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"papers","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_struct(Paper)807_storage)"},{"astId":831,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"contributions","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_array(t_struct(Contribution)816_storage)dyn_storage)"},{"astId":835,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"paperAccessFees","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_uint256)"},{"astId":840,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"papersByOwner","offset":0,"slot":"6","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"},{"astId":846,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"paperAccessed","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_mapping(t_address,t_bool))"},{"astId":850,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"userContributionCount","offset":0,"slot":"8","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_array(t_struct(Contribution)816_storage)dyn_storage":{"base":"t_struct(Contribution)816_storage","encoding":"dynamic_array","label":"struct MedicalResearch.Contribution[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(ERC20)651":{"encoding":"inplace","label":"contract ERC20","numberOfBytes":"20"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_array(t_struct(Contribution)816_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MedicalResearch.Contribution[])","numberOfBytes":"32","value":"t_array(t_struct(Contribution)816_storage)dyn_storage"},"t_mapping(t_uint256,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_uint256,t_struct(Paper)807_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MedicalResearch.Paper)","numberOfBytes":"32","value":"t_struct(Paper)807_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Contribution)816_storage":{"encoding":"inplace","label":"struct MedicalResearch.Contribution","members":[{"astId":809,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"contributor","offset":0,"slot":"0","type":"t_address"},{"astId":811,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"changesHash","offset":0,"slot":"1","type":"t_string_storage"},{"astId":813,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"approved","offset":0,"slot":"2","type":"t_bool"},{"astId":815,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"stakeAmount","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_struct(Paper)807_storage":{"encoding":"inplace","label":"struct MedicalResearch.Paper","members":[{"astId":793,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"author","offset":0,"slot":"0","type":"t_address"},{"astId":795,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"title","offset":0,"slot":"1","type":"t_string_storage"},{"astId":797,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"contentHash","offset":0,"slot":"2","type":"t_string_storage"},{"astId":799,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"accessFee","offset":0,"slot":"3","type":"t_uint256"},{"astId":802,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"keywords","offset":0,"slot":"4","type":"t_array(t_string_storage)dyn_storage"},{"astId":804,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"exists","offset":0,"slot":"5","type":"t_bool"},{"astId":806,"contract":"contracts/MedicalResearch.sol:MedicalResearch","label":"parentPaperId","offset":0,"slot":"6","type":"t_uint256"}],"numberOfBytes":"224"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}